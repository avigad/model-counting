c Input clauses
c 1 i 1 6 11 16 21 0
c 2 i 2 7 12 17 22 0
c 3 i 3 8 13 18 23 0
c 4 i 4 9 14 19 24 0
c 5 i 5 10 15 20 25 0
c 6 i -1 -2 0
c 7 i -1 -3 0
c 8 i -1 -4 0
c 9 i -1 -5 0
c 10 i -2 -3 0
c 11 i -2 -4 0
c 12 i -2 -5 0
c 13 i -3 -4 0
c 14 i -3 -5 0
c 15 i -4 -5 0
c 16 i -6 -7 0
c 17 i -6 -8 0
c 18 i -6 -9 0
c 19 i -6 -10 0
c 20 i -7 -8 0
c 21 i -7 -9 0
c 22 i -7 -10 0
c 23 i -8 -9 0
c 24 i -8 -10 0
c 25 i -9 -10 0
c 26 i -11 -12 0
c 27 i -11 -13 0
c 28 i -11 -14 0
c 29 i -11 -15 0
c 30 i -12 -13 0
c 31 i -12 -14 0
c 32 i -12 -15 0
c 33 i -13 -14 0
c 34 i -13 -15 0
c 35 i -14 -15 0
c 36 i -16 -17 0
c 37 i -16 -18 0
c 38 i -16 -19 0
c 39 i -16 -20 0
c 40 i -17 -18 0
c 41 i -17 -19 0
c 42 i -17 -20 0
c 43 i -18 -19 0
c 44 i -18 -20 0
c 45 i -19 -20 0
c 46 i -21 -22 0
c 47 i -21 -23 0
c 48 i -21 -24 0
c 49 i -21 -25 0
c 50 i -22 -23 0
c 51 i -22 -24 0
c 52 i -22 -25 0
c 53 i -23 -24 0
c 54 i -23 -25 0
c 55 i -24 -25 0
c Negated conjunction operations to use as lemma arguments
56 p 471 -8 -13 0
c Implicit declarations:
c 56 a 471 8 13 0
c 57 a -471 -8 0
c 58 a -471 -13 0
c Lemma S417, argument #1: shadow clause #56
59 p 472 -9 -14 0
c Implicit declarations:
c 59 a 472 9 14 0
c 60 a -472 -9 0
c 61 a -472 -14 0
c Lemma S417, argument #2: shadow clause #59
c Lemma S417, argument #3: input clause 23
c Lemma S417, argument #4: input clause 33
62 p 473 -16 -21 0
c Implicit declarations:
c 62 a 473 16 21 0
c 63 a -473 -16 0
c 64 a -473 -21 0
c Lemma S407, argument #1: shadow clause #62
65 p 474 -17 -22 0
c Implicit declarations:
c 65 a 474 17 22 0
c 66 a -474 -17 0
c 67 a -474 -22 0
c Lemma S407, argument #2: shadow clause #65
c Lemma S407, argument #3: input clause 36
c Lemma S407, argument #4: input clause 39
c Lemma S407, argument #5: input clause 42
c Lemma S407, argument #6: input clause 46
c Lemma S395, argument #1: shadow clause #65
68 p 475 -20 -25 0
c Implicit declarations:
c 68 a 475 20 25 0
c 69 a -475 -20 0
c 70 a -475 -25 0
c Lemma S395, argument #2: shadow clause #68
c Lemma S395, argument #3: input clause 36
c Lemma S395, argument #4: input clause 39
c Lemma S395, argument #5: input clause 42
c Lemma S395, argument #6: input clause 46
c Lemma S395, argument #7: input clause 49
c Lemma S395, argument #8: input clause 52
71 p 476 -3 -13 0
c Implicit declarations:
c 71 a 476 3 13 0
c 72 a -476 -3 0
c 73 a -476 -13 0
c Lemma S390, argument #1: shadow clause #71
74 p 477 -4 -14 0
c Implicit declarations:
c 74 a 477 4 14 0
c 75 a -477 -4 0
c 76 a -477 -14 0
c Lemma S390, argument #2: shadow clause #74
c Lemma S390, argument #3: input clause 13
c Lemma S390, argument #4: input clause 33
77 p 478 -2 -7 0
c Implicit declarations:
c 77 a 478 2 7 0
c 78 a -478 -2 0
c 79 a -478 -7 0
c Lemma S314, argument #1: shadow clause #77
80 p 479 -3 -8 0
c Implicit declarations:
c 80 a 479 3 8 0
c 81 a -479 -3 0
c 82 a -479 -8 0
c Lemma S314, argument #2: shadow clause #80
c Lemma S314, argument #3: input clause 10
c Lemma S314, argument #4: input clause 11
c Lemma S314, argument #5: input clause 13
c Lemma S314, argument #6: input clause 20
c Lemma S314, argument #7: input clause 21
c Lemma S314, argument #8: input clause 23
c Lemma S256, argument #1: shadow clause #62
c Lemma S256, argument #2: shadow clause #68
c Lemma S256, argument #3: input clause 39
c Lemma S256, argument #4: input clause 49
c Lemma S250, argument #1: shadow clause #80
83 p 480 -4 -9 0
c Implicit declarations:
c 83 a 480 4 9 0
c 84 a -480 -4 0
c 85 a -480 -9 0
c Lemma S250, argument #2: shadow clause #83
c Lemma S250, argument #3: input clause 13
c Lemma S250, argument #4: input clause 23
c Lemma S226, argument #1: shadow clause #80
86 p 481 -5 -10 0
c Implicit declarations:
c 86 a 481 5 10 0
c 87 a -481 -5 0
c 88 a -481 -10 0
c Lemma S226, argument #2: shadow clause #86
c Lemma S226, argument #3: input clause 10
c Lemma S226, argument #4: input clause 12
c Lemma S226, argument #5: input clause 14
c Lemma S226, argument #6: input clause 23
c Lemma S226, argument #7: input clause 24
c Lemma S226, argument #8: input clause 25
89 p 482 -1 -6 -11 0
c Implicit declarations:
c 89 a 482 1 6 11 0
c 90 a -482 -1 0
c 91 a -482 -6 0
c 92 a -482 -11 0
c Lemma S49, argument #1: shadow clause #89
93 p 483 -2 -7 -12 0
c Implicit declarations:
c 93 a 483 2 7 12 0
c 94 a -483 -2 0
c 95 a -483 -7 0
c 96 a -483 -12 0
c Lemma S49, argument #2: shadow clause #93
97 p 484 -5 -10 -15 0
c Implicit declarations:
c 97 a 484 5 10 15 0
c 98 a -484 -5 0
c 99 a -484 -10 0
c 100 a -484 -15 0
c Lemma S49, argument #3: shadow clause #97
c Lemma S49, argument #4: input clause 6
c Lemma S49, argument #5: input clause 7
c Lemma S49, argument #6: input clause 8
c Lemma S49, argument #7: input clause 9
c Lemma S49, argument #8: input clause 10
c Lemma S49, argument #9: input clause 11
c Lemma S49, argument #10: input clause 12
c Lemma S49, argument #11: input clause 13
c Lemma S49, argument #12: input clause 14
c Lemma S49, argument #13: input clause 15
c Lemma S49, argument #14: input clause 16
c Lemma S49, argument #15: input clause 17
c Lemma S49, argument #16: input clause 18
c Lemma S49, argument #17: input clause 19
c Lemma S49, argument #18: input clause 20
c Lemma S49, argument #19: input clause 21
c Lemma S49, argument #20: input clause 22
c Lemma S49, argument #21: input clause 23
c Lemma S49, argument #22: input clause 24
c Lemma S49, argument #23: input clause 25
c Lemma S49, argument #24: input clause 26
c Lemma S49, argument #25: input clause 27
c Lemma S49, argument #26: input clause 28
c Lemma S49, argument #27: input clause 29
c Lemma S49, argument #28: input clause 30
c Lemma S49, argument #29: input clause 31
c Lemma S49, argument #30: input clause 32
c Lemma S49, argument #31: input clause 33
c Lemma S49, argument #32: input clause 34
c Lemma S49, argument #33: input clause 35
c Operations for representing formula
c Justify literal -17 in context [18, -16] with 1 unhinted steps
104 a -10 -15 16 19 -23 0 47 53 29 35 19 25 1 4 8 0
105 a -4 -15 16 17 -23 0 47 29 8 1 50 32 11 16 2 0
106 a -15 16 17 19 -23 0 47 50 53 29 32 35 105 4 18 1 21 2 6 0
107 a -9 11 15 16 20 -23 0 47 18 25 1 54 5 9 0
108 a 11 14 15 16 19 20 -23 0 47 53 54 107 4 8 1 19 5 15 0
109 a -4 12 15 17 20 -23 0 50 54 11 15 2 5 22 0
110 a 14 16 17 19 20 -23 0 50 53 54 106 108 26 109 4 21 25 2 5 12 0
111 a -5 11 12 16 17 -23 0 47 50 9 12 1 2 16 0
112 a 16 17 19 20 -23 0 47 50 54 106 110 28 31 111 5 19 22 1 2 6 0
113 a 16 17 19 20 -23 0 47 50 54 110 106 28 31 111 5 19 22 1 2 6 0
117 a 482 -4 -12 484 0 26 32 8 15 89 97 19 0
118 a 482 -8 -12 484 0 26 32 17 89 9 97 24 0
126 a 484 5 -6 15 0 19 97 0
127 a 484 5 -7 15 0 22 97 0
128 a 484 5 -9 15 0 25 97 0
130 a 482 -2 11 15 484 0 6 12 89 126 0
131 a 482 -3 11 15 484 0 7 89 126 14 0
132 a 482 1 5 11 15 484 0 89 126 0
133 a 482 -5 6 11 0 9 89 0
137 a 482 -10 -15 483 0 29 32 19 22 93 89 6 0
145 a 483 2 -6 -15 0 32 16 93 0
146 a 483 2 7 -15 0 32 93 0
149 a 482 1 2 11 -15 483 0 145 89 0
153 a 482 -2 6 11 0 6 89 0
157 a 483 -1 12 15 484 0 6 9 93 127 0
158 a 483 2 -10 12 0 22 93 0
169 a 484 -2 10 15 0 12 97 0
170 a 484 -3 10 15 0 14 97 0
171 a 484 -4 10 15 0 15 97 0
173 a 483 -5 -6 12 0 16 12 93 0
174 a 483 -5 7 12 0 12 93 0
177 a 482 -5 -7 11 0 16 133 0
188 a -19 3 5 -6 13 15 0 43 45 17 19 3 5 54 0
189 a 13 3 4 5 -6 14 15 0 17 18 19 188 4 53 55 3 5 44 0
190 a -19 3 5 -7 13 15 0 43 45 20 22 3 5 54 0
191 a 13 3 4 5 -7 14 15 0 20 21 22 190 4 53 55 3 5 44 0
192 a 19 4 -8 14 24 0 4 23 0
193 a 23 3 4 8 9 13 14 24 0 3 4 43 0
195 a -20 2 3 -9 -21 0 46 47 42 44 21 23 2 3 30 0
196 a 2 3 5 -9 10 -21 0 46 47 21 23 49 195 5 32 34 2 3 40 0
197 a 13 3 5 -9 10 15 -22 0 50 23 3 44 5 52 0
198 a 23 2 3 5 -9 10 15 22 25 0 21 23 5 42 44 2 3 30 0
199 a 13 -2 -6 14 15 0 17 18 19 10 11 12 188 4 53 55 3 5 44 0
200 a 19 -3 -6 14 24 0 18 4 13 0
201 a 23 3 4 -6 13 14 24 0 17 18 3 4 43 0
207 a -20 -4 7 8 -21 0 46 47 42 44 11 13 2 3 30 0
208 a -4 5 7 8 10 -21 0 46 47 49 11 13 207 5 32 34 2 3 40 0
209 a 13 -4 5 8 10 15 -22 0 50 52 13 3 5 44 0
210 a 23 -4 5 7 8 10 15 22 25 0 11 13 5 42 44 2 3 30 0
211 a 19 -2 6 11 13 14 15 20 23 24 0 6 10 11 12 4 23 25 3 5 49 1 37 0
212 a 20 -2 6 11 13 14 15 23 24 0 6 10 12 211 43 3 24 5 49 1 38 0
213 a 23 -2 6 11 13 14 15 24 0 10 11 212 44 45 3 4 23 0
214 a 24 -2 6 11 13 14 15 0 6 11 12 213 47 54 1 38 4 25 5 39 0
215 a 11 -2 6 13 14 15 0 6 10 12 214 48 53 55 1 37 39 3 5 24 0
216 a 11 -2 6 13 14 15 0 6 10 12 214 48 53 55 1 37 39 3 5 24 0
220 a 19 -3 -10 14 -21 0 48 25 13 4 0
221 a 14 2 3 4 -10 -21 22 0 47 48 22 24 25 4 43 3 30 2 41 0
222 a 2 3 4 -10 -21 22 0 47 22 24 221 31 2 40 3 33 0
223 a 2 3 4 -10 -21 22 0 47 22 24 221 31 33 2 3 40 0
228 a 20 -3 10 15 25 0 14 5 0
229 a 20 -4 10 15 25 0 15 5 0
230 a -20 2 3 4 9 -21 22 0 47 48 42 44 45 4 31 33 2 3 20 0
231 a 2 3 4 5 10 -21 22 25 0 47 48 196 230 5 32 34 35 4 41 43 2 3 20 0
232 a 13 -5 -7 14 -21 0 47 48 20 21 14 15 4 3 43 0
233 a 19 -5 -8 14 -21 0 48 23 15 4 0
234 a 14 -5 7 8 9 -21 22 0 47 48 12 14 15 4 41 43 2 3 30 0
235 a -21 -5 7 8 9 22 0 47 12 14 234 31 33 2 3 40 0
236 a -21 -5 7 8 9 22 0 47 12 14 234 31 33 2 3 40 0
241 a 24 2 3 4 -6 -15 0 32 34 35 16 18 4 201 41 50 2 0
242 a 2 3 4 -6 -15 0 32 34 16 17 241 51 53 2 3 40 0
243 a 2 3 4 -6 -15 0 32 34 16 17 241 51 53 2 3 40 0
244 a 23 3 4 -7 -15 24 0 34 35 20 21 3 4 43 0
245 a 19 4 -8 -15 24 0 35 23 4 0
246 a 24 2 3 4 7 8 9 -15 0 32 34 35 4 41 43 2 3 50 0
247 a 2 3 4 7 8 9 -15 0 32 34 246 51 53 2 3 40 0
248 a 2 3 4 7 8 9 -15 0 32 34 246 51 53 2 3 40 0
254 a 23 2 3 -9 13 -15 22 0 32 21 23 2 3 40 0
260 a 3 4 5 -7 -11 0 27 28 29 191 0
261 a 19 4 9 -13 24 0 33 4 0
263 a 3 5 8 10 -14 -21 0 47 49 33 35 3 5 44 0
264 a -20 6 8 -14 -22 0 46 50 39 44 28 33 1 3 7 0
265 a 6 8 10 -14 -22 0 46 50 52 28 33 35 264 5 9 14 1 3 37 0
266 a 23 5 6 8 10 -14 21 25 0 28 33 35 5 39 44 1 3 7 0
267 a -17 3 4 -6 23 24 0 40 41 17 18 3 4 33 0
268 a 23 2 3 4 5 -6 12 15 24 0 16 17 18 19 267 2 52 5 44 45 3 4 33 0
269 a -23 2 5 -6 12 15 0 50 54 16 19 2 5 42 0
270 a 12 2 3 4 5 -6 15 0 16 19 269 268 51 55 2 5 42 0
271 a -12 3 4 5 -6 15 0 30 31 17 18 19 188 4 53 55 3 5 44 0
272 a 2 3 4 5 -6 15 0 16 19 271 269 268 51 55 2 5 42 0
273 a 17 2 5 -8 12 15 20 0 20 24 2 5 52 0
274 a 17 2 5 -9 12 15 20 0 21 25 2 5 52 0
275 a -17 3 4 8 9 23 24 0 40 41 3 4 33 0
276 a -22 4 5 6 8 9 10 15 24 0 52 5 45 264 4 0
277 a 24 2 3 4 5 6 7 8 9 10 12 15 0 276 2 40 41 42 4 5 33 54 3 0
278 a 12 2 3 4 5 6 7 8 9 10 15 0 277 51 55 2 5 42 0
279 a 12 2 3 4 5 6 7 8 9 10 15 0 277 51 55 2 5 42 0
280 a 24 2 3 4 -10 -11 0 26 27 28 22 24 25 4 41 43 2 3 50 0
281 a 2 3 4 -10 -11 0 26 27 22 24 280 51 53 2 3 40 0
282 a 2 3 4 -10 -11 0 26 27 22 24 280 51 53 2 3 40 0
283 a 19 4 -10 -13 24 0 33 25 4 0
284 a 24 2 3 4 -10 12 13 14 0 22 24 25 4 41 43 2 3 50 0
285 a 12 2 3 4 -10 13 14 0 22 24 284 51 53 2 3 40 0
286 a 12 3 4 -10 11 13 14 15 0 19 24 285 6 214 48 53 1 3 37 0
287 a 2 3 4 -10 -21 0 46 47 22 24 221 31 33 2 3 40 0
288 a 23 2 3 -10 -14 22 0 31 33 22 24 2 3 40 0
294 a -4 1 6 7 8 -15 23 0 29 32 34 11 13 3 37 40 1 2 46 0
295 a 23 1 6 7 8 9 -15 24 0 29 32 34 35 294 4 38 41 43 1 3 46 10 2 0
296 a 24 1 6 7 8 9 -15 0 29 32 35 295 47 50 1 38 4 11 2 36 0
297 a 1 6 7 8 9 -15 0 29 32 34 296 48 51 53 1 36 37 2 3 10 0
298 a -1 7 8 9 -15 0 32 34 6 7 8 246 51 53 2 3 40 0
299 a 6 7 8 9 -15 0 32 34 297 6 7 8 246 51 53 2 3 40 0
303 a 23 3 4 8 9 -11 24 0 27 28 193 0
304 a 19 4 9 -13 24 0 33 4 0
305 a 15 -2 3 4 5 11 13 14 0 199 215 0
306 a 23 -2 3 6 8 -14 21 0 28 33 6 3 1 37 0
309 a 16 -3 6 7 9 12 17 19 24 0 7 10 13 2 4 46 28 1 0
310 a -22 3 4 8 9 -16 0 50 51 37 38 4 3 33 0
311 a -16 2 3 4 7 8 9 0 36 37 38 310 2 30 31 3 4 53 0
312 a 1 2 3 4 6 7 8 9 -10 0 282 287 1 36 37 38 310 2 30 31 3 4 53 0
314 a 16 -4 6 7 11 12 17 0 8 11 2 1 46 0
317 a -18 -4 -11 -21 0 46 49 40 44 26 29 11 15 5 2 22 0
318 a -4 -11 13 -21 0 46 47 49 26 29 11 13 15 317 3 20 24 2 5 42 0
319 a 23 -4 7 8 -11 13 22 0 26 11 13 2 3 40 0
324 a 23 -2 -6 13 14 24 0 17 18 10 11 193 0
325 a 19 -3 -6 14 24 0 18 13 4 0
326 a -15 2 3 4 -6 0 32 34 16 17 241 51 53 2 3 40 0
331 a -6 -4 7 8 9 -21 0 19 15 208 0
332 a 23 -4 7 8 13 -15 22 0 32 11 13 3 2 40 0
340 a -21 3 4 5 -7 25 0 47 48 20 21 22 244 263 4 5 45 0
341 a 25 1 3 4 5 -7 0 16 20 21 22 340 260 1 37 38 39 5 34 35 3 4 53 0
342 a -2 3 4 5 -7 0 16 20 21 6 260 341 49 54 55 1 37 38 3 4 33 0
343 a 19 4 -8 14 -21 0 48 23 4 0
344 a -15 6 7 8 9 0 32 34 297 6 7 8 246 51 53 2 3 40 0
345 a 17 -3 14 -15 19 -21 22 0 48 32 10 13 2 4 21 0
346 a -15 2 3 4 7 13 14 -21 22 0 47 48 32 2 40 41 3 4 23 0
347 a -15 2 3 4 13 14 -21 22 25 0 47 48 32 244 2 40 41 3 4 23 0
349 a 17 -4 7 -15 22 0 32 11 2 0
355 a -7 1 3 4 19 -25 0 49 54 55 16 20 21 303 261 1 3 37 0
356 a 19 1 2 3 4 12 -25 0 49 52 54 55 355 2 36 40 267 1 27 28 3 4 23 0
357 a 12 1 2 3 4 -25 0 49 52 54 55 356 38 41 2 16 20 21 1 303 0
358 a 1 2 3 4 -25 0 49 54 55 357 26 30 31 201 1 37 38 3 4 23 0
359 a -5 2 3 4 -25 0 49 54 55 9 357 26 30 31 201 1 37 38 3 4 23 0
363 a 24 3 4 -6 7 9 -11 0 26 27 28 29 4 201 199 41 50 2 0
364 a 3 4 -6 7 8 9 -11 0 26 27 28 29 199 363 51 53 2 3 40 0
365 a 4 -6 7 8 9 -11 25 0 26 27 28 29 19 199 364 14 5 42 45 2 4 51 0
366 a 25 -6 7 8 9 -11 0 26 27 28 29 19 199 365 13 15 5 269 44 3 0
367 a -6 7 8 9 -11 0 26 27 28 29 199 366 52 54 55 2 40 41 3 4 13 0
368 a -6 7 8 9 -11 0 26 27 28 29 366 199 52 54 55 2 40 41 3 4 13 0
370 a 24 3 4 -5 -6 9 11 12 13 14 16 0 17 4 193 41 111 0
371 a 12 2 3 4 -6 7 8 9 11 13 14 0 311 326 272 370 51 53 2 3 40 0
372 a 10 5 7 8 -14 -21 0 46 49 31 35 263 5 10 42 2 0
373 a -6 7 8 9 -14 -21 0 46 47 48 31 19 331 372 12 14 2 267 0
374 a 23 2 3 7 8 -14 22 0 31 33 2 3 40 0
379 a -16 3 4 8 9 13 14 0 37 38 3 4 53 0
380 a -5 -7 11 13 14 16 0 16 20 21 9 14 15 1 47 48 193 0
381 a -5 3 4 -7 8 9 11 13 14 0 16 9 232 1 37 38 3 4 53 0
382 a 23 3 -5 -7 8 -14 21 0 28 33 16 9 1 3 37 0
384 a 16 2 4 -5 -8 12 17 19 24 0 17 20 9 192 2 28 46 1 0
385 a 23 1 2 3 4 6 7 8 9 12 24 0 311 303 1 46 2 40 41 3 261 0
386 a 24 1 2 3 4 6 7 8 9 12 0 311 385 47 50 1 2 28 41 4 0
387 a 12 1 2 3 4 6 7 8 9 0 311 386 48 51 53 1 2 27 40 3 0
388 a -5 2 3 4 6 7 8 9 0 9 311 387 26 31 1 234 46 0
389 a 16 2 -5 -9 11 12 17 0 18 21 9 1 2 46 0
392 a -18 -9 -11 -21 0 46 49 40 44 26 29 21 25 2 5 12 0
393 a -9 -11 13 -21 0 46 47 49 26 29 21 23 25 392 3 10 14 2 5 42 0
394 a 23 2 3 -9 -11 13 22 0 26 21 23 2 3 40 0
395 a 20 5 10 15 -21 0 49 5 0
396 a 20 5 10 15 -22 0 52 5 0
398 a 17 2 -6 12 -25 0 52 16 2 0
401 a -2 3 4 -7 0 12 342 0
402 a -6 -7 0 16 0
406 a 19 4 9 -13 -25 0 55 261 0
407 a -25 3 4 8 9 13 14 0 54 55 193 0
408 a 16 1 6 11 -25 0 49 1 0
411 a -7 -2 0 10 11 12 342 0
412 a 19 -3 -7 14 -25 0 55 21 13 4 0
413 a -25 3 4 -7 13 14 0 54 55 20 21 193 0
416 a 17 2 7 -11 -25 0 52 26 2 0
419 a 19 4 -8 14 -25 0 55 192 0
428 a -14 -3 21 22 -23 25 0 28 31 35 7 10 14 269 1 36 39 2 5 22 0
429 a -16 -3 -9 22 25 0 36 39 21 25 10 14 2 5 32 0
430 a 14 -3 19 21 22 24 25 0 7 10 13 14 4 18 21 25 429 1 26 29 2 5 42 0
431 a -23 -3 19 21 22 24 25 0 7 10 13 14 428 4 18 21 25 429 1 26 29 2 5 42 0
436 a 25 -8 11 14 15 -17 0 36 41 42 17 24 229 5 343 9 1 0
437 a -8 11 14 15 -17 0 36 41 17 436 49 55 1 192 8 0
438 a 3 11 13 14 15 -17 0 36 40 41 42 108 3 17 436 49 55 1 192 8 0
442 a -1 2 4 5 -6 0 16 17 18 7 298 272 0
443 a 13 -1 4 5 -7 14 15 0 7 191 0
447 a 15 2 3 5 -9 10 -16 0 36 37 39 23 5 274 54 30 3 0
448 a 3 2 5 -9 10 -16 0 36 37 21 23 447 32 34 2 3 50 0
449 a -1 2 5 -9 10 -16 0 36 37 21 23 7 447 32 34 2 3 50 0
451 a -12 -2 -6 15 0 30 31 199 0
452 a 24 4 -6 14 19 0 18 4 0
456 a -4 5 -9 0 18 21 23 25 8 11 13 208 448 1 26 27 29 197 2 394 42 54 229 0
457 a -6 -9 0 18 0
459 a 15 -4 5 7 8 10 -16 0 36 37 39 11 13 396 229 2 54 30 3 0
460 a -4 5 7 8 10 -16 0 36 37 11 13 459 32 34 2 3 50 0
461 a -4 5 7 8 10 -16 0 36 37 11 13 459 32 34 2 3 50 0
463 a 11 -2 13 14 15 0 10 11 12 305 0
466 a 3 2 4 -10 -16 0 22 24 25 311 0
472 a 3 1 2 4 5 10 15 20 0 358 5 0
473 a 13 -5 -7 14 -16 0 20 21 14 15 379 0
474 a 24 -5 -8 14 -16 0 38 23 15 4 0
475 a -16 -5 7 8 9 0 12 14 15 311 0
479 a -8 11 12 14 -20 0 39 42 45 17 20 23 314 4 343 51 1 2 6 0
480 a 3 11 13 14 -15 -20 0 39 42 44 45 32 106 3 17 20 23 314 4 343 51 1 2 6 0
481 a -6 -1 0 16 17 18 6 7 8 9 298 272 0
482 a 24 -2 -6 14 19 0 18 11 4 0
489 a -4 7 8 9 10 -16 0 475 461 0
494 a 24 4 -7 14 19 0 21 4 0
499 a 22 2 -9 -15 17 0 32 21 2 0
503 a 24 4 -7 14 -16 0 38 494 0
508 a 22 2 7 -15 17 0 32 2 0
511 a 24 4 -8 14 -16 0 38 192 0
512 a -15 -2 4 6 8 9 0 6 411 297 0
518 a 7 -1 8 9 10 0 6 7 8 9 442 298 279 30 31 407 5 44 45 3 4 53 0
519 a -6 -1 0 6 8 9 442 0
522 a 7 2 4 -5 8 9 -11 0 367 14 388 0
524 a 12 2 4 -5 8 9 11 13 14 0 14 381 388 371 0
526 a -23 -5 -14 16 17 0 28 31 111 0
530 a 8 -2 4 9 10 -11 0 27 28 29 10 12 407 5 44 45 3 4 53 0
531 a -6 -2 -11 0 16 17 18 367 0
533 a 15 -2 11 13 14 0 10 11 12 305 0
534 a 8 -2 10 -14 -16 0 37 39 33 35 10 12 3 5 54 0
535 a -25 -2 4 11 -17 0 49 54 55 36 6 10 1 267 0
536 a -2 4 -14 -17 0 36 40 42 28 33 35 6 10 12 535 5 19 24 1 3 47 0
537 a 25 -2 10 -14 20 0 35 12 5 0
541 a 15 2 3 4 5 -16 0 36 37 38 39 466 448 5 54 55 406 3 4 273 31 0
542 a 3 2 4 5 -16 0 36 38 466 448 541 32 34 35 4 379 51 20 2 0
543 a -1 2 4 5 -16 0 36 38 7 541 466 448 32 34 35 4 379 51 20 2 0
547 a -1 2 4 -10 -11 0 282 7 0
549 a 12 -1 4 7 8 9 -10 11 13 14 0 6 7 285 0
550 a 22 2 7 -14 17 0 31 2 0
552 a 22 2 5 7 10 12 15 25 0 2 5 42 0
555 a -1 4 5 -7 -11 0 27 28 29 443 0
557 a 15 -1 4 -7 11 13 14 16 0 9 443 0
558 a -25 6 8 -14 -17 0 49 54 36 40 28 33 1 3 7 0
559 a -7 8 -14 -17 0 36 40 42 28 33 35 16 22 558 5 9 14 1 3 47 0
560 a 25 5 -7 -14 20 0 35 22 5 0
564 a 24 -2 9 -11 19 0 28 11 4 0
569 a -11 -4 5 13 -16 0 36 37 39 26 29 11 13 109 273 3 0
570 a 22 -4 7 -11 17 0 26 11 2 0
572 a 21 1 2 7 -10 11 12 22 0 19 1 2 36 0
576 a 15 -2 4 5 11 13 14 0 10 305 0
577 a 21 -2 -10 -14 16 0 28 19 6 1 0
584 a 24 4 9 -11 19 0 28 4 0
586 a -5 -7 11 13 14 0 473 380 0
587 a 21 -5 -7 -14 16 0 28 16 9 1 0
590 a 21 2 4 -5 -8 12 19 22 24 0 17 20 23 9 584 1 2 36 0
591 a 6 2 4 -5 7 8 9 0 14 388 0
592 a 21 2 -5 -9 11 12 22 0 18 21 9 1 2 36 0
595 a 2 -9 -11 13 -16 0 36 37 39 26 29 21 23 25 2 416 228 50 3 0
596 a -9 -11 13 -16 0 37 39 29 23 25 595 10 12 3 5 54 0
597 a -9 -11 13 -16 0 37 39 29 595 23 25 10 12 3 5 54 0
598 a 22 2 -9 -11 17 0 26 21 2 0
600 a 21 1 5 6 10 11 15 25 0 1 5 39 0
603 a 5 -11 13 14 -16 0 36 37 38 39 26 29 597 569 4 51 53 55 5 22 24 2 3 10 0
604 a -11 13 14 -16 0 36 38 26 597 603 12 15 473 4 2 51 0
605 a -11 13 14 -16 0 36 38 26 597 603 12 15 473 4 2 51 0
606 a 25 5 10 -11 -17 0 42 29 5 0
607 a 25 5 10 -11 20 0 29 5 0
609 a 24 4 -7 14 -20 0 45 494 0
611 a -4 -9 0 15 456 0
612 a 22 2 7 -11 -20 0 42 26 2 0
614 a 24 4 -8 14 -20 0 45 192 0
615 a 13 -2 4 8 9 14 -20 0 44 45 10 4 3 53 0
623 a -10 11 13 -19 21 23 0 38 43 19 24 1 3 7 0
624 a 11 13 15 -19 21 23 25 0 38 43 45 623 5 228 9 3 1 17 0
625 a 11 13 15 -19 21 -24 25 0 53 38 43 45 623 5 228 9 3 1 17 0
630 a 2 3 4 5 -6 0 326 272 0
631 a -1 -6 0 519 0
632 a 13 -1 3 4 5 -7 15 -24 25 0 48 53 16 20 22 411 260 543 557 266 0
633 a 18 3 8 13 -24 0 53 3 0
637 a 15 5 10 -17 25 0 42 5 0
638 a -15 2 4 -8 17 19 0 32 35 20 192 2 51 0
639 a 19 2 4 5 -8 10 17 20 0 23 638 273 5 31 55 4 0
640 a 13 -2 -6 15 -24 25 0 53 17 19 10 12 5 3 44 0
641 a 18 3 -6 13 -24 0 53 17 3 0
648 a -15 2 4 7 9 -16 0 36 38 35 508 4 51 0
649 a 2 4 5 7 9 10 -16 0 36 38 39 648 396 5 2 55 31 4 0
650 a 7 8 9 10 -16 0 38 39 475 461 649 10 534 4 379 55 34 5 0
651 a 15 5 10 -17 25 0 42 5 0
652 a -15 2 4 7 9 17 19 0 35 508 4 51 0
653 a 19 2 4 5 7 9 10 17 20 0 652 396 5 2 55 31 4 0
654 a 19 -3 4 5 7 9 10 17 20 0 10 652 396 5 2 55 31 4 0
655 a 11 -4 6 13 15 21 23 25 0 8 13 1 37 39 3 229 24 0
656 a 11 -4 6 13 15 21 -24 25 0 53 8 13 1 37 39 3 229 24 0
657 a 11 1 -7 13 14 15 21 25 0 16 22 1 39 473 5 0
666 a 479 -2 481 0 10 12 80 86 24 0
667 a 479 3 5 481 0 80 86 24 0
668 a 481 -3 -8 0 24 14 86 0
669 a 481 -3 -9 0 25 14 86 0
670 a 481 -3 10 0 14 86 0
680 a 23 3 8 13 -19 0 43 3 0
683 a 2 3 4 5 10 -21 0 46 49 231 0
685 a 17 2 5 -8 10 20 22 25 0 20 5 508 0
686 a 13 -2 -6 15 -19 0 10 12 188 0
687 a 23 3 -6 13 -19 0 43 17 3 0
694 a 7 8 9 10 -21 0 46 47 48 49 236 208 372 4 41 45 5 34 299 508 324 0
696 a 17 -3 5 7 10 20 22 25 0 10 228 508 0
697 a -21 -4 13 15 18 20 0 47 49 13 229 3 24 0
698 a 13 -4 6 15 16 17 18 20 0 8 11 13 15 697 1 26 109 273 3 0
699 a 15 -4 6 16 17 18 20 0 8 698 27 30 1 314 49 22 229 0
700 a 18 -4 6 16 17 20 0 13 699 29 32 34 105 314 3 20 0
701 a -19 -4 6 16 17 20 0 43 13 699 29 32 34 105 314 3 20 0
702 a 11 1 -7 13 14 15 16 20 0 16 22 1 380 5 49 0
706 a 18 -5 13 14 19 23 24 0 14 15 192 3 0
707 a 18 -1 13 14 19 23 24 0 7 8 192 3 0
708 a 18 -6 13 14 19 23 24 0 17 18 3 4 13 0
709 a -18 1 -7 11 13 14 15 0 37 44 16 22 380 1 5 49 0
710 a 11 1 3 5 -7 13 14 15 0 16 20 22 191 709 3 47 54 1 229 39 0
711 a 11 1 5 -7 13 14 15 19 24 0 16 20 22 709 494 13 3 47 54 1 229 39 0
712 a 18 -10 13 14 19 23 24 0 24 25 3 4 13 0
713 a 11 -2 13 14 15 0 10 11 12 305 0
717 a 479 3 4 480 0 80 83 23 0
718 a 480 -3 -8 0 23 13 83 0
719 a 480 -3 9 0 13 83 0
720 a 11 1 5 6 10 15 -17 0 36 42 1 395 0
721 a 11 1 5 6 10 15 -22 0 46 396 1 39 0
722 a 473 16 -25 0 49 62 0
725 a 475 -16 25 0 39 68 0
727 a 473 -20 21 0 39 62 0
731 a -2 13 15 18 20 -24 0 55 10 12 633 5 24 0
732 a 13 12 15 17 18 20 -24 0 51 53 55 731 2 20 22 3 228 0
733 a -7 11 15 16 20 -24 0 48 55 16 22 1 5 9 0
734 a 15 12 16 17 18 20 -24 0 48 51 55 732 27 733 2 6 12 1 5 19 0
735 a -2 -15 16 -19 -24 0 48 53 43 29 34 6 10 3 1 17 0
736 a 12 16 17 -19 20 -24 0 48 51 53 43 734 29 34 735 2 16 20 1 3 7 0
737 a -19 16 17 20 -24 0 48 53 55 43 736 26 30 32 623 228 5 633 9 17 1 0
738 a -19 16 17 20 -24 0 48 53 55 43 736 26 30 32 623 228 5 633 9 17 1 0
748 a 12 2 3 4 7 8 9 10 11 13 17 -19 0 43 3 2 50 0
752 a 24 2 4 7 9 -13 14 22 0 30 261 2 41 0
754 a -22 1 3 -5 6 -15 24 0 46 50 29 34 35 1 37 38 706 0
755 a 22 1 2 3 4 6 7 -15 0 29 34 35 508 36 40 41 1 47 343 3 0
756 a -5 1 2 3 4 6 -15 0 29 34 35 586 755 46 50 51 1 37 38 706 0
757 a 1 2 3 4 6 -15 0 29 358 756 542 341 1 755 46 0
758 a 1 2 3 4 6 -15 0 29 756 358 542 341 1 755 46 0
763 a -19 1 3 4 -7 8 11 13 16 0 16 680 1 47 0
765 a 24 1 4 -7 -13 14 21 0 27 16 1 503 0
768 a 12 2 3 -5 7 8 -9 16 17 -19 0 2 389 50 27 680 0
769 a -19 2 3 -5 7 8 -9 15 16 17 20 0 768 26 30 107 680 0
770 a -19 2 3 4 -5 6 7 8 15 16 17 20 0 388 768 26 30 107 680 0
773 a 12 1 2 -8 11 16 17 0 17 20 1 2 46 0
776 a -5 -11 13 14 -21 0 46 48 318 26 393 12 232 4 2 41 0
777 a -11 13 14 -21 0 46 47 48 49 318 26 29 393 4 41 45 776 5 22 24 2 303 10 0
778 a -11 13 14 -21 0 46 47 48 49 318 26 29 776 393 4 41 45 5 22 24 2 303 10 0
779 a 24 2 4 -8 9 -11 22 0 26 20 584 2 41 0
786 a -19 2 3 -6 13 -15 17 0 16 687 508 50 0
793 a 24 -3 4 7 9 14 -15 22 0 10 4 508 41 0
798 a 23 3 4 -7 13 14 24 0 20 21 193 0
799 a -19 -1 2 3 4 7 8 13 -15 17 0 680 508 50 0
802 a -1 2 3 4 10 -21 0 683 9 0
803 a 24 2 4 -8 9 14 -15 22 0 20 4 508 41 0
809 a -19 3 -7 13 -21 0 47 20 680 0
817 a -19 3 8 13 -21 0 47 43 3 0
828 a 12 -1 2 3 4 7 8 9 11 13 17 -19 0 43 3 2 50 0
830 a -1 2 3 4 -21 0 287 802 0
836 a -19 -2 3 6 8 11 13 16 0 6 817 1 0
838 a 24 -2 4 6 9 -13 21 0 27 261 6 38 1 0
841 a -19 1 2 3 6 7 8 9 -10 16 17 20 0 312 701 0
843 a 12 -3 6 7 11 16 17 0 7 10 1 2 46 0
847 a 24 -3 4 7 9 -11 22 0 26 10 2 584 41 0
856 a 12 2 7 17 -25 0 52 2 0
859 a -1 3 4 -7 -11 0 9 555 0
860 a -19 3 8 13 -25 0 54 680 0
879 a 478 2 3 479 0 80 77 20 0
881 a 478 -3 7 0 10 77 0
892 a 18 3 -7 -15 -24 0 53 34 20 3 0
893 a -24 2 3 6 7 8 -15 22 0 53 32 34 2 3 40 0
899 a 2 4 5 -8 10 -16 0 36 38 39 639 0
900 a 22 2 -8 -15 17 0 32 20 2 0
902 a 12 2 5 -8 15 22 25 0 20 24 2 637 0
903 a 2 3 4 5 8 -11 0 26 27 28 29 282 191 272 279 197 2 394 637 54 0
904 a 12 -1 2 3 4 5 8 13 15 22 -24 25 0 633 40 44 2 5 22 0
909 a 2 4 7 9 -13 14 -16 0 36 38 30 4 2 51 0
910 a 22 2 7 -13 17 0 30 2 0
913 a 22 2 5 7 10 -13 25 0 30 34 552 0
915 a 4 5 -7 9 -13 -16 0 38 39 27 34 16 22 411 395 543 406 600 0
916 a -13 -7 9 -17 0 36 41 42 27 34 16 22 733 261 8 229 408 0
917 a -24 -7 -13 16 20 0 27 34 733 0
922 a 18 -2 8 -15 -24 0 34 10 633 0
923 a -24 2 3 7 8 9 -15 22 0 34 508 633 40 0
929 a 7 -3 4 5 9 10 -16 0 36 38 39 10 653 0
930 a 22 -3 7 -15 17 0 10 508 0
932 a 12 -3 7 10 15 22 25 0 10 14 552 0
934 a 12 3 7 8 9 10 11 13 15 22 -24 25 0 48 633 650 518 40 1 2 640 0
943 a 9 -2 4 10 -13 -16 0 38 39 33 34 12 411 650 419 5 0
944 a -13 -2 4 -17 0 36 41 27 34 6 12 535 637 19 25 1 261 48 0
945 a 25 -2 10 -13 20 0 34 12 5 0
952 a 18 3 -7 13 -24 0 20 633 0
953 a -24 2 3 4 -5 7 8 -11 13 22 0 53 394 522 0
956 a -11 2 4 -8 9 14 -16 0 604 27 0
957 a 22 2 -8 -11 17 0 26 20 2 0
959 a 18 -2 -10 13 -24 0 53 24 10 3 0
960 a -24 2 3 -10 -11 13 22 0 53 26 22 24 2 3 40 0
965 a -11 -3 4 7 9 14 -16 0 605 27 0
966 a 22 -3 7 -11 17 0 26 10 2 0
968 a 25 5 10 15 -16 0 39 5 0
971 a -24 1 6 -14 21 0 28 31 33 35 1 36 37 39 732 0
984 a 12 2 -10 17 22 0 22 2 0
992 a 25 5 10 -13 20 0 34 5 0
998 a 18 -5 8 9 19 23 24 0 14 15 3 261 0
999 a 18 7 8 9 -15 19 23 24 0 34 35 3 4 13 0
1002 a 18 -2 8 9 19 23 24 0 10 11 261 3 0
1003 a 477 -3 -13 0 33 13 74 0
1004 a 477 4 -13 0 33 74 0
1011 a 475 20 -21 0 49 68 0
1012 a 475 20 -22 0 52 68 0
1014 a 474 -16 475 0 36 39 65 1012 0
1015 a 474 17 20 475 0 65 1012 0
1016 a 474 -20 -21 0 46 42 65 0
1017 a 474 -20 22 0 42 65 0
1019 a 18 -1 -15 19 23 24 0 34 35 707 0
1020 a -15 -5 0 9 12 14 15 326 756 0
1024 a 18 -7 13 14 19 23 24 0 20 21 4 3 13 0
1025 a -15 -10 0 19 22 24 25 299 0
1026 a 18 -2 13 14 19 23 24 0 10 11 192 3 0
1027 a -17 1 11 13 14 -25 0 49 54 55 36 40 41 1 17 18 3 4 13 0
1028 a -15 1 2 7 11 13 14 -25 0 49 52 54 55 32 2 36 40 41 1 17 18 3 4 13 0
1033 a 473 16 17 474 0 62 65 46 0
1035 a 474 -16 -21 0 46 36 65 0
1036 a 474 -16 22 0 36 65 0
1041 a 18 3 4 -7 19 23 24 0 20 21 3 261 0
1042 a 18 3 4 -10 19 23 24 0 24 25 3 261 0
1043 a 24 2 4 5 -8 10 -11 0 26 29 23 584 41 45 273 0
1044 a 2 3 4 5 7 10 -11 0 26 29 903 1043 51 55 552 0
1045 a 472 -8 -13 0 33 23 59 0
1046 a 472 9 -13 0 33 59 0
1055 a 18 3 4 -11 19 23 24 0 27 28 3 192 0
1057 a 15 -2 4 5 10 11 -17 0 651 535 0
1058 a 15 -2 5 10 11 -22 0 50 51 396 6 10 11 721 44 45 17 18 261 3 0
1059 a -2 3 4 5 10 11 -22 0 46 50 51 6 1058 34 35 324 1 37 38 3 192 0
1063 a 18 -7 -11 19 23 24 0 27 28 1024 0
1064 a 18 -5 8 9 19 23 24 0 14 15 261 3 0
1065 a -21 -7 13 14 -17 0 47 48 40 41 1024 0
1066 a -7 8 9 11 -17 0 36 40 41 16 559 916 1065 1 7 8 633 494 0
1067 a 1 5 -7 10 11 14 -22 0 46 50 51 52 16 1 600 37 38 34 1024 0
1068 a -7 5 8 9 10 11 -22 0 46 50 51 52 16 266 1067 7 8 244 276 0
1072 a -5 3 4 -25 0 12 359 0
1073 a -5 4 -10 0 19 22 24 25 12 14 388 0
1076 a 18 8 9 -11 19 23 24 0 27 584 3 13 0
1077 a 1 2 -10 11 -25 0 49 52 54 55 19 22 24 25 1 36 37 38 910 2 3 31 13 4 0
1078 a 2 8 9 -10 11 -25 0 52 54 55 22 1077 7 8 374 407 752 0
1079 a -10 8 9 11 -25 0 49 54 55 19 1078 6 10 11 1 37 38 1042 0
1080 a -10 8 9 11 -25 0 49 54 55 19 1078 6 10 11 1 37 38 1042 0
1081 a 12 1 2 5 6 7 10 11 15 0 721 2 552 36 408 0
c Justify literal -19 in context [18, -16, -17] with 1 unhinted steps
c Justify literal -20 in context [18, -16, -17, -19] with 1 unhinted steps
c Justify literal -23 in context [18, -16, -17, -19, -20] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, 24] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, 24, -21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, 24, -21, -22] with 1 unhinted steps
c Justify literal -4 in context [-482, -483, -484, 12] with 1 unhinted steps
c Justify literal -8 in context [-482, -483, -484, 12, -4] with 1 unhinted steps
c Justify literal -11 in context [-482, -483, -484, 12, -4, -8] with 1 unhinted steps
c Justify literal -13 in context [-482, -483, -484, 12, -4, -8, -11] with 1 unhinted steps
c Justify literal -14 in context [-482, -483, -484, 12, -4, -8, -11, -13] with 1 unhinted steps
c Justify literal -15 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14] with 1 unhinted steps
c Justify literal -2 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, 1] with 1 unhinted steps
c Justify literal -3 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, 1, -2] with 1 unhinted steps
c Justify literal -5 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, 1, -2, -3] with 1 unhinted steps
c Justify literal -6 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, 1, -2, -3, -5] with 1 unhinted steps
c Justify literal -7 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, 1, -2, -3, -5, -6] with 1 unhinted steps
c Justify literal -9 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, 1, -2, -3, -5, -6, -7] with 1 unhinted steps
c Justify literal 10 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, 1, -2, -3, -5, -6, -7, -9] with 1 unhinted steps
c Justify literal -2 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, -1] with 1 unhinted steps
c Justify literal -3 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, -1, -2] with 1 unhinted steps
c Justify literal 5 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, -1, -2, -3] with 1 unhinted steps
c Justify literal 6 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, -1, -2, -3, 5] with 1 unhinted steps
c Justify literal -7 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, -1, -2, -3, 5, 6] with 1 unhinted steps
c Justify literal -9 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, -1, -2, -3, 5, 6, -7] with 1 unhinted steps
c Justify literal -10 in context [-482, -483, -484, 12, -4, -8, -11, -13, -14, -15, -1, -2, -3, 5, 6, -7, -9] with 1 unhinted steps
c Justify literal -10 in context [-482, -483, -484, -12, 15] with 1 unhinted steps
c Justify literal -11 in context [-482, -483, -484, -12, 15, -10] with 1 unhinted steps
c Justify literal -13 in context [-482, -483, -484, -12, 15, -10, -11] with 1 unhinted steps
c Justify literal -14 in context [-482, -483, -484, -12, 15, -10, -11, -13] with 1 unhinted steps
c Justify literal -2 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1] with 1 unhinted steps
c Justify literal -3 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1, -2, -3, -4, -5] with 1 unhinted steps
c Justify literal 7 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1, -2, -3, -4, -5, -6] with 1 unhinted steps
c Justify literal -8 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1, -2, -3, -4, -5, -6, 7] with 1 unhinted steps
c Justify literal -9 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, 1, -2, -3, -4, -5, -6, 7, -8] with 1 unhinted steps
c Justify literal 2 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1] with 1 unhinted steps
c Justify literal -3 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1, 2] with 1 unhinted steps
c Justify literal -4 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1, 2, -3] with 1 unhinted steps
c Justify literal -5 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1, 2, -3, -4] with 1 unhinted steps
c Justify literal 6 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1, 2, -3, -4, -5] with 1 unhinted steps
c Justify literal -7 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1, 2, -3, -4, -5, 6] with 1 unhinted steps
c Justify literal -8 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1, 2, -3, -4, -5, 6, -7] with 1 unhinted steps
c Justify literal -9 in context [-482, -483, -484, -12, 15, -10, -11, -13, -14, -1, 2, -3, -4, -5, 6, -7, -8] with 1 unhinted steps
c Justify literal -1 in context [-482, -483, -484, -12, -15] with 1 unhinted steps
c Justify literal 2 in context [-482, -483, -484, -12, -15, -1, 10] with 1 unhinted steps
c Justify literal -3 in context [-482, -483, -484, -12, -15, -1, 10, 2] with 1 unhinted steps
c Justify literal -4 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3] with 1 unhinted steps
c Justify literal -5 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4, -5] with 1 unhinted steps
c Justify literal -7 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4, -5, -6] with 1 unhinted steps
c Justify literal -8 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4, -5, -6, -7] with 1 unhinted steps
c Justify literal -9 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4, -5, -6, -7, -8] with 1 unhinted steps
c Justify literal 11 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4, -5, -6, -7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4, -5, -6, -7, -8, -9, 11] with 1 unhinted steps
c Justify literal -14 in context [-482, -483, -484, -12, -15, -1, 10, 2, -3, -4, -5, -6, -7, -8, -9, 11, -13] with 1 unhinted steps
c Justify literal -2 in context [-482, -483, -484, -12, -15, -1, -10] with 1 unhinted steps
c Justify literal -3 in context [-482, -483, -484, -12, -15, -1, -10, -2] with 1 unhinted steps
c Justify literal -4 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3] with 1 unhinted steps
c Justify literal 5 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4, 5] with 1 unhinted steps
c Justify literal 7 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4, 5, -6] with 1 unhinted steps
c Justify literal -8 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4, 5, -6, 7] with 1 unhinted steps
c Justify literal -9 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4, 5, -6, 7, -8] with 1 unhinted steps
c Justify literal 11 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4, 5, -6, 7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4, 5, -6, 7, -8, -9, 11] with 1 unhinted steps
c Justify literal -14 in context [-482, -483, -484, -12, -15, -1, -10, -2, -3, -4, 5, -6, 7, -8, -9, 11, -13] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, 12] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, 12, -11] with 1 unhinted steps
c Justify literal -14 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13] with 1 unhinted steps
c Justify literal -15 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14] with 1 unhinted steps
c Justify literal -2 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5, -6] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5, -6, -7] with 1 unhinted steps
c Justify literal 9 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5, -6, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5, -6, -7, -8, 9] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5, -6, -7, -8, 9, -10] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5, -6, -7, -8, 9, -10, -21] with 1 unhinted steps
c Justify literal 25 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, 1, -2, -3, -4, -5, -6, -7, -8, 9, -10, -21, -22] with 1 unhinted steps
c Justify literal -2 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2] with 1 unhinted steps
c Justify literal 4 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4, -5] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4, -5, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4, -5, -7, -8, -9] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4, -5, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4, -5, -7, -8, -9, -10, -21] with 1 unhinted steps
c Justify literal 25 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, 6, -2, -3, 4, -5, -7, -8, -9, -10, -21, -22] with 1 unhinted steps
c Justify literal -2 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6] with 1 unhinted steps
c Justify literal 21 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, 10] with 1 unhinted steps
c Justify literal 4 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, 10, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, 10, -3, 4] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, 10, -3, 4, -5] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, 10, -3, 4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, 10, -3, 4, -5, -7, -8] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, -10] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, -10, -3] with 1 unhinted steps
c Justify literal 5 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, -10, -3, -4] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, -10, -3, -4, 5] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, -10, -3, -4, 5, -7] with 1 unhinted steps
c Justify literal 9 in context [18, -16, -17, -19, -20, -23, -24, 12, -11, -13, -14, -15, -1, -6, -2, 21, -22, -25, -10, -3, -4, 5, -7, -8] with 1 unhinted steps
c Justify literal -2 in context [18, -16, -17, -19, -20, -23, -24, -12, 1] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7] with 1 unhinted steps
c Justify literal 9 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8, 9] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8, 9, -10] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8, 9, -10, -11] with 1 unhinted steps
c Justify literal -14 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8, 9, -10, -11, -13] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8, 9, -10, -11, -13, -14] with 1 unhinted steps
c Justify literal 22 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8, 9, -10, -11, -13, -14, -21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, 15, -6, -7, -8, 9, -10, -11, -13, -14, -21, 22] with 1 unhinted steps
c Justify literal -6 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8] with 1 unhinted steps
c Justify literal -10 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8, -9] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8, -9, -10] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8, -9, -10, -11] with 1 unhinted steps
c Justify literal 14 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8, -9, -10, -11, -13] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8, -9, -10, -11, -13, 14] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8, -9, -10, -11, -13, 14, -21] with 1 unhinted steps
c Justify literal 25 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, 7, -6, -8, -9, -10, -11, -13, 14, -21, -22] with 1 unhinted steps
c Justify literal -6 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8] with 1 unhinted steps
c Justify literal 10 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8, -9] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8, -9, 10] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8, -9, 10, -11] with 1 unhinted steps
c Justify literal 14 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8, -9, 10, -11, -13] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8, -9, 10, -11, -13, 14] with 1 unhinted steps
c Justify literal 22 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8, -9, 10, -11, -13, 14, -21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, -12, 1, -2, -3, -4, -5, -15, -7, -6, -8, -9, 10, -11, -13, 14, -21, 22] with 1 unhinted steps
c Justify literal -6 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8] with 1 unhinted steps
c Justify literal -15 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3, -4] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3, -4, -5] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3, -4, -5, -11] with 1 unhinted steps
c Justify literal 14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3, -4, -5, -11, -13] with 1 unhinted steps
c Justify literal 21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3, -4, -5, -11, -13, 14] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3, -4, -5, -11, -13, 14, 21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, 2, -3, -4, -5, -11, -13, 14, 21, -22] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2] with 1 unhinted steps
c Justify literal 4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3, 4] with 1 unhinted steps
c Justify literal 11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3, 4, -5] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3, 4, -5, 11] with 1 unhinted steps
c Justify literal -14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3, 4, -5, 11, -13] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3, 4, -5, 11, -13, -14] with 1 unhinted steps
c Justify literal 22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3, 4, -5, 11, -13, -14, -21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, 10, -6, -7, -8, -9, -15, -2, -3, 4, -5, 11, -13, -14, -21, 22] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11] with 1 unhinted steps
c Justify literal -14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13] with 1 unhinted steps
c Justify literal -2 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2] with 1 unhinted steps
c Justify literal 4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3, 4] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3, 4, -5] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3, 4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3, 4, -5, -7, -8] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3, 4, -5, -7, -8, -9] with 1 unhinted steps
c Justify literal 22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3, 4, -5, -7, -8, -9, -21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, 6, -2, -3, 4, -5, -7, -8, -9, -21, 22] with 1 unhinted steps
c Justify literal 21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, 2] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, 2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, 2, -3, -4] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, 2, -3, -4, -5] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, 2, -3, -4, -5, -7] with 1 unhinted steps
c Justify literal 9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, 2, -3, -4, -5, -7, -8] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, -2] with 1 unhinted steps
c Justify literal 4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, -2, -3, 4] with 1 unhinted steps
c Justify literal 7 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, -2, -3, 4, -5] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, -2, -3, 4, -5, 7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, 15, -11, -13, -14, -6, 21, -22, -25, -2, -3, 4, -5, 7, -8] with 1 unhinted steps
c Justify literal -2 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3] with 1 unhinted steps
c Justify literal -25 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6, -7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6, -7, -8] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6, -7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6, -7, -8, -9, -11] with 1 unhinted steps
c Justify literal 14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6, -7, -8, -9, -11, -13] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6, -7, -8, -9, -11, -13, 14] with 1 unhinted steps
c Justify literal 22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, 6, -7, -8, -9, -11, -13, 14, -21] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, 7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, 7, -8] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, 7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, 7, -8, -9, -11] with 1 unhinted steps
c Justify literal 14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, 7, -8, -9, -11, -13] with 1 unhinted steps
c Justify literal 21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, 7, -8, -9, -11, -13, 14] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, 7, -8, -9, -11, -13, 14, 21] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, -7] with 1 unhinted steps
c Justify literal 9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, -7, -8] with 1 unhinted steps
c Justify literal 11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, -7, -8, 9] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, -7, -8, 9, 11] with 1 unhinted steps
c Justify literal -14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, -7, -8, 9, 11, -13] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, -7, -8, 9, 11, -13, -14] with 1 unhinted steps
c Justify literal 22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, 5, -2, -3, -4, -25, -6, -7, -8, 9, 11, -13, -14, -21] with 1 unhinted steps
c Justify literal -21 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5] with 1 unhinted steps
c Justify literal -22 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21] with 1 unhinted steps
c Justify literal 25 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22] with 1 unhinted steps
c Justify literal 2 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2, -3] with 1 unhinted steps
c Justify literal -7 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2, -3, -4] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2, -3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2, -3, -4, -7, -8] with 1 unhinted steps
c Justify literal -11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2, -3, -4, -7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2, -3, -4, -7, -8, -9, -11] with 1 unhinted steps
c Justify literal 14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, 6, 2, -3, -4, -7, -8, -9, -11, -13] with 1 unhinted steps
c Justify literal 11 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6] with 1 unhinted steps
c Justify literal -13 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11] with 1 unhinted steps
c Justify literal -14 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13] with 1 unhinted steps
c Justify literal -2 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, 7] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, 7, -2] with 1 unhinted steps
c Justify literal 4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, 7, -2, -3] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, 7, -2, -3, 4] with 1 unhinted steps
c Justify literal -9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, 7, -2, -3, 4, -8] with 1 unhinted steps
c Justify literal 2 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, -7] with 1 unhinted steps
c Justify literal -3 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, -7, 2] with 1 unhinted steps
c Justify literal -4 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, -7, 2, -3] with 1 unhinted steps
c Justify literal -8 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, -7, 2, -3, -4] with 1 unhinted steps
c Justify literal 9 in context [18, -16, -17, -19, -20, -23, -24, -12, -1, -10, -15, -5, -21, -22, 25, -6, 11, -13, -14, -7, 2, -3, -4, -8] with 1 unhinted steps
c Justify literal -21 in context [-18, 23] with 1 unhinted steps
c Justify literal -22 in context [-18, 23, -21] with 1 unhinted steps
c Justify literal -24 in context [-18, 23, -21, -22] with 1 unhinted steps
c Justify literal -25 in context [-18, 23, -21, -22, -24] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, 19] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, 19, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, 19, -16, -17] with 1 unhinted steps
c Justify literal -3 in context [-18, 23, -21, -22, -24, -25, -19] with 1 unhinted steps
c Justify literal -11 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13] with 1 unhinted steps
c Justify literal -15 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4] with 1 unhinted steps
c Justify literal -6 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4, -5] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4, -5, -6] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4, -5, -6, -7] with 1 unhinted steps
c Justify literal 9 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4, -5, -6, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4, -5, -6, -7, -8, 9] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4, -5, -6, -7, -8, 9, -10] with 1 unhinted steps
c Justify literal 20 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, 1, -2, -4, -5, -6, -7, -8, 9, -10, -16] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6] with 1 unhinted steps
c Justify literal 4 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2, 4] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2, 4, -5] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2, 4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2, 4, -5, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2, 4, -5, -7, -8, -9] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2, 4, -5, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal 20 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, 6, -2, 4, -5, -7, -8, -9, -10, -16] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6] with 1 unhinted steps
c Justify literal 16 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16] with 1 unhinted steps
c Justify literal 4 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, 10] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, 10, 4] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, 10, 4, -5] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, 10, 4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, 10, 4, -5, -7, -8] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, -10] with 1 unhinted steps
c Justify literal 5 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, -10, -4] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, -10, -4, 5] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, -10, -4, 5, -7] with 1 unhinted steps
c Justify literal 9 in context [-18, 23, -21, -22, -24, -25, -19, -3, 12, -11, -13, -14, -15, -17, -1, -6, -2, 16, -20, -10, -4, 5, -7, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14] with 1 unhinted steps
c Justify literal -1 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1] with 1 unhinted steps
c Justify literal 4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2, 4] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2, 4, -5] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2, 4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2, 4, -5, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2, 4, -5, -7, -8, -9] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2, 4, -5, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal 17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, 6, -1, -2, 4, -5, -7, -8, -9, -10, -16] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2, -4] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2, -4, -5] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2, -4, -5, -7] with 1 unhinted steps
c Justify literal 9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2, -4, -5, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2, -4, -5, -7, -8, 9] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2, -4, -5, -7, -8, 9, -10] with 1 unhinted steps
c Justify literal 17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, 1, -2, -4, -5, -7, -8, 9, -10, -16] with 1 unhinted steps
c Justify literal 16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, 7] with 1 unhinted steps
c Justify literal 4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, 7, -2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, 7, -2, 4] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, 7, -2, 4, -5] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, 7, -2, 4, -5, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, 7, -2, 4, -5, -8, -9] with 1 unhinted steps
c Justify literal 2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, -7] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, -7, 2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, -7, 2, -4] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, -7, 2, -4, -5] with 1 unhinted steps
c Justify literal 9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, -7, 2, -4, -5, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, 15, -11, -13, -14, -20, -6, -1, 16, -17, -7, 2, -4, -5, -8, 9] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9] with 1 unhinted steps
c Justify literal -1 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5, -2] with 1 unhinted steps
c Justify literal -11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5, -2, -4] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5, -2, -4, -11] with 1 unhinted steps
c Justify literal 14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5, -2, -4, -11, -13] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5, -2, -4, -11, -13, 14] with 1 unhinted steps
c Justify literal 17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5, -2, -4, -11, -13, 14, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, 5, -2, -4, -11, -13, 14, -16, 17] with 1 unhinted steps
c Justify literal 2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5, 2] with 1 unhinted steps
c Justify literal -11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5, 2, -4] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5, 2, -4, -11] with 1 unhinted steps
c Justify literal 14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5, 2, -4, -11, -13] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5, 2, -4, -11, -13, 14] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5, 2, -4, -11, -13, 14, -16] with 1 unhinted steps
c Justify literal 20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, 6, -7, -8, -9, -10, -1, -5, 2, -4, -11, -13, 14, -16, -17] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10, -7, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10, -7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10, -7, -8, -9, -11] with 1 unhinted steps
c Justify literal 14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10, -7, -8, -9, -11, -13] with 1 unhinted steps
c Justify literal 17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10, -7, -8, -9, -11, -13, 14] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, 10, -7, -8, -9, -11, -13, 14, 17] with 1 unhinted steps
c Justify literal 7 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10, 7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10, 7, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10, 7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10, 7, -8, -9, -11] with 1 unhinted steps
c Justify literal 14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10, 7, -8, -9, -11, -13] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10, 7, -8, -9, -11, -13, 14] with 1 unhinted steps
c Justify literal 20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, 1, -2, -4, -5, -16, -10, 7, -8, -9, -11, -13, 14, -17] with 1 unhinted steps
c Justify literal -7 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11] with 1 unhinted steps
c Justify literal 4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11, -2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11, -2, 4] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11, -2, 4, -5] with 1 unhinted steps
c Justify literal -14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11, -2, 4, -5, -13] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11, -2, 4, -5, -13, -14] with 1 unhinted steps
c Justify literal 17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11, -2, 4, -5, -13, -14, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, 11, -2, 4, -5, -13, -14, -16, 17] with 1 unhinted steps
c Justify literal 2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11, 2] with 1 unhinted steps
c Justify literal -5 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11, 2, -4] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11, 2, -4, -5] with 1 unhinted steps
c Justify literal 14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11, 2, -4, -5, -13] with 1 unhinted steps
c Justify literal 16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11, 2, -4, -5, -13, 14] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11, 2, -4, -5, -13, 14, 16] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, 10, -7, -8, -9, -11, 2, -4, -5, -13, 14, 16, -17] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7, -8, -9] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7, -8, -9, -11] with 1 unhinted steps
c Justify literal 14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7, -8, -9, -11, -13] with 1 unhinted steps
c Justify literal 16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7, -8, -9, -11, -13, 14] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7, -8, -9, -11, -13, 14, 16] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, 7, -8, -9, -11, -13, 14, 16, -17] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7] with 1 unhinted steps
c Justify literal 9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7, -8] with 1 unhinted steps
c Justify literal 11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7, -8, 9] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7, -8, 9, 11] with 1 unhinted steps
c Justify literal -14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7, -8, 9, 11, -13] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7, -8, 9, 11, -13, -14] with 1 unhinted steps
c Justify literal 17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7, -8, 9, 11, -13, -14, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, 5, -2, -4, -7, -8, 9, 11, -13, -14, -16, 17] with 1 unhinted steps
c Justify literal 11 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5] with 1 unhinted steps
c Justify literal -13 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11] with 1 unhinted steps
c Justify literal -14 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13] with 1 unhinted steps
c Justify literal -16 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14] with 1 unhinted steps
c Justify literal -17 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16] with 1 unhinted steps
c Justify literal 20 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17] with 1 unhinted steps
c Justify literal -2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, 7] with 1 unhinted steps
c Justify literal 4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, 7, -2] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, 7, -2, 4] with 1 unhinted steps
c Justify literal -9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, 7, -2, 4, -8] with 1 unhinted steps
c Justify literal 2 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, -7] with 1 unhinted steps
c Justify literal -4 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, -7, 2] with 1 unhinted steps
c Justify literal -8 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, -7, 2, -4] with 1 unhinted steps
c Justify literal 9 in context [-18, 23, -21, -22, -24, -25, -19, -3, -12, -15, -6, -1, -10, -5, 11, -13, -14, -16, -17, 20, -7, 2, -4, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, 12] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, 12, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, 12, -11, -13] with 1 unhinted steps
c Justify literal -15 in context [-18, -23, 12, -11, -13, -14] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, 12, -11, -13, -14, -15, 24] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22] with 1 unhinted steps
c Justify literal -19 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5, -6] with 1 unhinted steps
c Justify literal 8 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5, -6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5, -6, -7, 8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5, -6, -7, 8, -9] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5, -6, -7, 8, -9, -10] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5, -6, -7, 8, -9, -10, -16] with 1 unhinted steps
c Justify literal 20 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, 1, -2, -3, -4, -5, -6, -7, 8, -9, -10, -16, -17] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6] with 1 unhinted steps
c Justify literal 3 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4, -5] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4, -5, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4, -5, -7, -8, -9] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4, -5, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4, -5, -7, -8, -9, -10, -16] with 1 unhinted steps
c Justify literal 20 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, 6, -2, 3, -4, -5, -7, -8, -9, -10, -16, -17] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, -6] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, -6, -4] with 1 unhinted steps
c Justify literal 16 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, -6, -4, -7] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, -6, -4, -7, 16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, -6, -4, -7, 16, -17] with 1 unhinted steps
c Justify literal -2 in context [-479, -481, 5] with 1 unhinted steps
c Justify literal -3 in context [-479, -481, 5, -2] with 1 unhinted steps
c Justify literal 8 in context [-479, -481, 5, -2, -3] with 1 unhinted steps
c Justify literal -9 in context [-479, -481, 5, -2, -3, 8] with 1 unhinted steps
c Justify literal -10 in context [-479, -481, 5, -2, -3, 8, -9] with 1 unhinted steps
c Justify literal -2 in context [-479, -481, -5] with 1 unhinted steps
c Justify literal 3 in context [-479, -481, -5, -2] with 1 unhinted steps
c Justify literal -8 in context [-479, -481, -5, -2, 3] with 1 unhinted steps
c Justify literal -9 in context [-479, -481, -5, -2, 3, -8] with 1 unhinted steps
c Justify literal 10 in context [-479, -481, -5, -2, 3, -8, -9] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5, -6] with 1 unhinted steps
c Justify literal 8 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5, -6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5, -6, -7, 8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5, -6, -7, 8, -9] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5, -6, -7, 8, -9, -10] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5, -6, -7, 8, -9, -10, -21] with 1 unhinted steps
c Justify literal 25 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, 1, -2, -3, -4, -5, -6, -7, 8, -9, -10, -21, -22] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6] with 1 unhinted steps
c Justify literal 3 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4, -5] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4, -5, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4, -5, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4, -5, -7, -8, -9] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4, -5, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4, -5, -7, -8, -9, -10, -21] with 1 unhinted steps
c Justify literal 25 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, 6, -2, 3, -4, -5, -7, -8, -9, -10, -21, -22] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, -6] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, -6, -4] with 1 unhinted steps
c Justify literal 21 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, -6, -4, -7] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, -6, -4, -7, 21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, -6, -4, -7, 21, -22] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19] with 1 unhinted steps
c Justify literal -1 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1, -6] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1, -6, -7] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1, -6, -7, -10] with 1 unhinted steps
c Justify literal -3 in context [-479, -480, 4] with 1 unhinted steps
c Justify literal 8 in context [-479, -480, 4, -3] with 1 unhinted steps
c Justify literal -9 in context [-479, -480, 4, -3, 8] with 1 unhinted steps
c Justify literal 3 in context [-479, -480, -4] with 1 unhinted steps
c Justify literal -8 in context [-479, -480, -4, 3] with 1 unhinted steps
c Justify literal 9 in context [-479, -480, -4, 3, -8] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1, -6, -7, -10, -2] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1, -6, -7, -10, -2, -17] with 1 unhinted steps
c Justify literal 16 in context [-473, -475, 25] with 1 unhinted steps
c Justify literal -20 in context [-473, -475, 25, 16] with 1 unhinted steps
c Justify literal -21 in context [-473, -475, 25, 16, -20] with 1 unhinted steps
c Justify literal -16 in context [-473, -475, -25] with 1 unhinted steps
c Justify literal 20 in context [-473, -475, -25, -16] with 1 unhinted steps
c Justify literal 21 in context [-473, -475, -25, -16, 20] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, 19] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, -12, 19, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, 19, -16, -17] with 1 unhinted steps
c Justify literal -24 in context [-18, -23, -12, 19, -16, -17, -20] with 1 unhinted steps
c Justify literal -1 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9, -10, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9, -10, -11, 13] with 1 unhinted steps
c Justify literal -15 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9, -10, -11, 13, -14] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9, -10, -11, 13, -14, -15] with 1 unhinted steps
c Justify literal 22 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9, -10, -11, 13, -14, -15, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, 6, -7, -8, -9, -10, -11, 13, -14, -15, -21, 22] with 1 unhinted steps
c Justify literal -15 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8, -9] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8, -9, -10] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8, -9, -10, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8, -9, -10, -11, 13] with 1 unhinted steps
c Justify literal 21 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8, -9, -10, -11, 13, -14] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8, -9, -10, -11, 13, -14, 21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, 7, -8, -9, -10, -11, 13, -14, 21, -22] with 1 unhinted steps
c Justify literal 8 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8, -9] with 1 unhinted steps
c Justify literal 11 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8, -9, -10] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8, -9, -10, 11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8, -9, -10, 11, -13] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8, -9, -10, 11, -13, -14] with 1 unhinted steps
c Justify literal 22 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8, -9, -10, 11, -13, -14, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, 5, -1, -2, -3, -4, -6, -15, -7, 8, -9, -10, 11, -13, -14, -21, 22] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13] with 1 unhinted steps
c Justify literal -1 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1] with 1 unhinted steps
c Justify literal 3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3, -4] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3, -4, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3, -4, -7, -8, -9] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3, -4, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal 22 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3, -4, -7, -8, -9, -10, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, 6, -1, -2, 3, -4, -7, -8, -9, -10, -21, 22] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal 8 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3, -4, -7, 8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3, -4, -7, 8, -9] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3, -4, -7, 8, -9, -10] with 1 unhinted steps
c Justify literal 22 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3, -4, -7, 8, -9, -10, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, 1, -2, -3, -4, -7, 8, -9, -10, -21, 22] with 1 unhinted steps
c Justify literal 21 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, 7] with 1 unhinted steps
c Justify literal 3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, 7, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, 7, -2, 3] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, 7, -2, 3, -4] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, 7, -2, 3, -4, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, 7, -2, 3, -4, -8, -9] with 1 unhinted steps
c Justify literal 2 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, -7] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, -7, 2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, -7, 2, -3] with 1 unhinted steps
c Justify literal 8 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, -7, 2, -3, -4] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, -7, 2, -3, -4, 8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, 15, -11, -13, -14, -6, -1, 21, -22, -25, -7, 2, -3, -4, 8, -9] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2, -3] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2, -3, -4, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2, -3, -4, -11, 13] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2, -3, -4, -11, 13, -14] with 1 unhinted steps
c Justify literal 22 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2, -3, -4, -11, 13, -14, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, 1, -2, -3, -4, -11, 13, -14, -21, 22] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2, -3] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2, -3, -4] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2, -3, -4, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2, -3, -4, -11, 13] with 1 unhinted steps
c Justify literal 21 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2, -3, -4, -11, 13, -14] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2, -3, -4, -11, 13, -14, 21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, 2, -3, -4, -11, 13, -14, 21, -22] with 1 unhinted steps
c Justify literal 3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2, 3] with 1 unhinted steps
c Justify literal 11 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2, 3, -4] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2, 3, -4, 11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2, 3, -4, 11, -13] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2, 3, -4, 11, -13, -14] with 1 unhinted steps
c Justify literal 22 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2, 3, -4, 11, -13, -14, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, 10, -6, -7, -8, -9, -1, -2, 3, -4, 11, -13, -14, -21, 22] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21] with 1 unhinted steps
c Justify literal 25 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal 7 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3, -4, -6] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3, -4, -6, 7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3, -4, -6, 7, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3, -4, -6, 7, -8, -9] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3, -4, -6, 7, -8, -9, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, 1, -2, -3, -4, -6, 7, -8, -9, -11, 13] with 1 unhinted steps
c Justify literal 2 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2, -3] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2, -3, -4] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2, -3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2, -3, -4, -7, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2, -3, -4, -7, -8, -9] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2, -3, -4, -7, -8, -9, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, 6, 2, -3, -4, -7, -8, -9, -11, 13] with 1 unhinted steps
c Justify literal 11 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, -6] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, -6, 11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, -6, 11, -13] with 1 unhinted steps
c Justify literal -3 in context [-478, -479, 2] with 1 unhinted steps
c Justify literal -4 in context [-478, -479, 2, -3] with 1 unhinted steps
c Justify literal -7 in context [-478, -479, 2, -3, -4] with 1 unhinted steps
c Justify literal 8 in context [-478, -479, 2, -3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [-478, -479, 2, -3, -4, -7, 8] with 1 unhinted steps
c Justify literal 3 in context [-478, -479, -2] with 1 unhinted steps
c Justify literal -4 in context [-478, -479, -2, 3] with 1 unhinted steps
c Justify literal 7 in context [-478, -479, -2, 3, -4] with 1 unhinted steps
c Justify literal -8 in context [-478, -479, -2, 3, -4, 7] with 1 unhinted steps
c Justify literal -9 in context [-478, -479, -2, 3, -4, 7, -8] with 1 unhinted steps
c Justify literal -21 in context [-18, -23, -12, -19, 24] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, -12, -19, 24, -21] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, -19, 24, -21, -22] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6] with 1 unhinted steps
c Justify literal 8 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8, -9] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8, -9, -10] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8, -9, -10, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8, -9, -10, -11, -13] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8, -9, -10, -11, -13, -14] with 1 unhinted steps
c Justify literal 17 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8, -9, -10, -11, -13, -14, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, 15, -6, -7, 8, -9, -10, -11, -13, -14, -16, 17] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, 10] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, 10, -6] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, 10, -6, -7] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, 10, -6, -7, -9] with 1 unhinted steps
c Justify literal 17 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, 10, -6, -7, -9, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, 10, -6, -7, -9, -16, 17] with 1 unhinted steps
c Justify literal -6 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, -10] with 1 unhinted steps
c Justify literal 7 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, -10, -6] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, -10, -6, 7] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, -10, -6, 7, -9] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, -10, -6, 7, -9, -16] with 1 unhinted steps
c Justify literal 20 in context [-18, -23, -12, -19, 24, -21, -22, -25, 1, -2, -3, -4, -5, -15, -8, -11, 13, -14, -10, -6, 7, -9, -16, -17] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15] with 1 unhinted steps
c Justify literal 3 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3, -4] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3, -4, -5] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3, -4, -5, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3, -4, -5, -11, -13] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3, -4, -5, -11, -13, -14] with 1 unhinted steps
c Justify literal 17 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3, -4, -5, -11, -13, -14, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, 15, -2, 3, -4, -5, -11, -13, -14, -16, 17] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, 5] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, 5, -2] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, 5, -2, -4] with 1 unhinted steps
c Justify literal 17 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, 5, -2, -4, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, 5, -2, -4, -16, 17] with 1 unhinted steps
c Justify literal 2 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, -5] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, -5, 2] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, -5, 2, -4] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, -5, 2, -4, -16] with 1 unhinted steps
c Justify literal 20 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, 6, -7, -8, -9, -10, -15, -3, -11, 13, -14, -5, 2, -4, -16, -17] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13] with 1 unhinted steps
c Justify literal -15 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3, -4] with 1 unhinted steps
c Justify literal 8 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3, -4, -7, 8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3, -4, -7, 8, -9] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3, -4, -7, 8, -9, -10] with 1 unhinted steps
c Justify literal 17 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3, -4, -7, 8, -9, -10, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, 5, -2, -3, -4, -7, 8, -9, -10, -16, 17] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10] with 1 unhinted steps
c Justify literal 3 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2, 3] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2, 3, -4] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2, 3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2, 3, -4, -7, -8] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2, 3, -4, -7, -8, -9] with 1 unhinted steps
c Justify literal 17 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2, 3, -4, -7, -8, -9, -16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, 10, -2, 3, -4, -7, -8, -9, -16, 17] with 1 unhinted steps
c Justify literal -16 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, -10] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, -10, -16] with 1 unhinted steps
c Justify literal 20 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, -10, -16, -17] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11] with 1 unhinted steps
c Justify literal 16 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16] with 1 unhinted steps
c Justify literal -20 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2, -3] with 1 unhinted steps
c Justify literal 7 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2, -3, -4] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2, -3, -4, 7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2, -3, -4, 7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2, -3, -4, 7, -8, -9] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2, -3, -4, 7, -8, -9, -10] with 1 unhinted steps
c Justify literal -15 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, 5, -2, -3, -4, 7, -8, -9, -10, 13] with 1 unhinted steps
c Justify literal 2 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10, 2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10, 2, -3] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10, 2, -3, -4] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10, 2, -3, -4, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10, 2, -3, -4, -7, -8] with 1 unhinted steps
c Justify literal 13 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10, 2, -3, -4, -7, -8, -9] with 1 unhinted steps
c Justify literal -15 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, 10, 2, -3, -4, -7, -8, -9, 13] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, -10] with 1 unhinted steps
c Justify literal 15 in context [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, -10, -13] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, -24, 6] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, -24, 6, -7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, -24, 6, -7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, -24, 6, -7, -8, -9] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, -12, -19, -24, 6, -7, -8, -9, -10] with 1 unhinted steps
c Justify literal -15 in context [-18, -23, -12, -19, -24, 6, -7, -8, -9, -10, -5] with 1 unhinted steps
c Justify literal -1 in context [-18, -23, -12, -19, -24, 6, -7, -8, -9, -10, -5, -15] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, -24, 6, -7, -8, -9, -10, -5, -15, -1] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, -24, 6, -7, -8, -9, -10, -5, -15, -1, -11] with 1 unhinted steps
c Justify literal -3 in context [-476, -477, 13] with 1 unhinted steps
c Justify literal 4 in context [-476, -477, 13, -3] with 1 unhinted steps
c Justify literal -14 in context [-476, -477, 13, -3, 4] with 1 unhinted steps
c Justify literal 3 in context [-476, -477, -13] with 1 unhinted steps
c Justify literal -4 in context [-476, -477, -13, 3] with 1 unhinted steps
c Justify literal 14 in context [-476, -477, -13, 3, -4] with 1 unhinted steps
c Justify literal -16 in context [-474, -475, 17] with 1 unhinted steps
c Justify literal -20 in context [-474, -475, 17, -16] with 1 unhinted steps
c Justify literal -21 in context [-474, -475, 17, -16, -20] with 1 unhinted steps
c Justify literal -22 in context [-474, -475, 17, -16, -20, -21] with 1 unhinted steps
c Justify literal 25 in context [-474, -475, 17, -16, -20, -21, -22] with 1 unhinted steps
c Justify literal -16 in context [-474, -475, -17] with 1 unhinted steps
c Justify literal 20 in context [-474, -475, -17, -16] with 1 unhinted steps
c Justify literal -21 in context [-474, -475, -17, -16, 20] with 1 unhinted steps
c Justify literal 22 in context [-474, -475, -17, -16, 20, -21] with 1 unhinted steps
c Justify literal -25 in context [-474, -475, -17, -16, 20, -21, 22] with 1 unhinted steps
c Justify literal -1 in context [-18, -23, -12, -19, -24, -6, 15] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, -12, -19, -24, -6, 15, -1] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, -24, -6, 15, -1, -5] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11, -13] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11, -13, -14] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11, -13, -14, -7] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11, -13, -14, -7, -10] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11, -13, -14, -7, -10, -2] with 1 unhinted steps
c Justify literal -16 in context [-473, -474, 17] with 1 unhinted steps
c Justify literal -20 in context [-473, -474, 17, -16] with 1 unhinted steps
c Justify literal 21 in context [-473, -474, 17, -16, -20] with 1 unhinted steps
c Justify literal -22 in context [-473, -474, 17, -16, -20, 21] with 1 unhinted steps
c Justify literal 16 in context [-473, -474, -17] with 1 unhinted steps
c Justify literal -20 in context [-473, -474, -17, 16] with 1 unhinted steps
c Justify literal -21 in context [-473, -474, -17, 16, -20] with 1 unhinted steps
c Justify literal 22 in context [-473, -474, -17, 16, -20, -21] with 1 unhinted steps
c Justify literal -2 in context [-18, -23, -12, -19, -24, -6, -15, 1] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, -24, -6, -15, 1, -2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, -24, -6, -15, 1, -2, -3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, -12, -19, -24, -6, -15, 1, -2, -3, -4] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, -24, -6, -15, 1, -2, -3, -4, -5] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, -24, -6, -15, 1, -2, -3, -4, -5, -7] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, -24, -6, -15, 1, -2, -3, -4, -5, -7, -10] with 1 unhinted steps
c Justify literal -8 in context [-471, -472, 13] with 1 unhinted steps
c Justify literal 9 in context [-471, -472, 13, -8] with 1 unhinted steps
c Justify literal -14 in context [-471, -472, 13, -8, 9] with 1 unhinted steps
c Justify literal 8 in context [-471, -472, -13] with 1 unhinted steps
c Justify literal -9 in context [-471, -472, -13, 8] with 1 unhinted steps
c Justify literal 14 in context [-471, -472, -13, 8, -9] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4, -5] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4, -5, -10] with 1 unhinted steps
c Justify literal -7 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4, -5, -10, -11] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4, -5, -10, -11, -7] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4, -5, -10, -11, -7, -17] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8, -9] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8, -9, -10] with 1 unhinted steps
c Justify literal -5 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8, -9, -10, -11] with 1 unhinted steps
c Justify literal -17 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8, -9, -10, -11, -5] with 1 unhinted steps
c Justify literal -22 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8, -9, -10, -11, -5, -17] with 1 unhinted steps
c Justify literal -3 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, 5] with 1 unhinted steps
c Justify literal -4 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, 5, -3] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, 5, -3, -4] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, 5, -3, -4, -11] with 1 unhinted steps
c Justify literal -10 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, 5, -3, -4, -11, -25] with 1 unhinted steps
c Justify literal -8 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, 10] with 1 unhinted steps
c Justify literal -9 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, 10, -8] with 1 unhinted steps
c Justify literal -11 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, 10, -8, -9] with 1 unhinted steps
c Justify literal -25 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, 10, -8, -9, -11] with 1 unhinted steps
c Justify literal 11 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, -10] with 1 unhinted steps
c Justify literal -13 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, -10, 11] with 1 unhinted steps
c Justify literal -14 in context [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, -10, 11, -13] with 1 unhinted steps
c P28 = AND(var-1, -var-2, -var-3, -var-5, -var-6, -var-7, -var-9, var-10)
100000001 p 28 1 -2 -3 -5 -6 -7 -9 10 0
c Implicit declarations:
c 100000001 a 28 -1 2 3 5 6 7 9 -10 0
c 100000002 a -28 1 0
c 100000003 a -28 -2 0
c 100000004 a -28 -3 0
c 100000005 a -28 -5 0
c 100000006 a -28 -6 0
c 100000007 a -28 -7 0
c 100000008 a -28 -9 0
c 100000009 a -28 10 0
c P29 = AND(-var-1, -var-2, -var-3, var-5, var-6, -var-7, -var-9, -var-10)
100000010 p 29 -1 -2 -3 5 6 -7 -9 -10 0
c Implicit declarations:
c 100000010 a 29 1 2 3 -5 -6 7 9 10 0
c 100000011 a -29 -1 0
c 100000012 a -29 -2 0
c 100000013 a -29 -3 0
c 100000014 a -29 5 0
c 100000015 a -29 6 0
c 100000016 a -29 -7 0
c 100000017 a -29 -9 0
c 100000018 a -29 -10 0
c S30 = OR(P28, P29)
100000019 s 30 28 29 100000002 100000011 0
c Implicit declarations:
c 100000019 a -30 28 29 0
c 100000020 a 30 -28 0
c 100000021 a 30 -29 0
c P34 = AND(var-1, -var-2, -var-3, -var-4, -var-5, -var-6, var-7, -var-8, -var-9)
100000022 p 34 1 -2 -3 -4 -5 -6 7 -8 -9 0
c Implicit declarations:
c 100000022 a 34 -1 2 3 4 5 6 -7 8 9 0
c 100000023 a -34 1 0
c 100000024 a -34 -2 0
c 100000025 a -34 -3 0
c 100000026 a -34 -4 0
c 100000027 a -34 -5 0
c 100000028 a -34 -6 0
c 100000029 a -34 7 0
c 100000030 a -34 -8 0
c 100000031 a -34 -9 0
c P35 = AND(-var-1, var-2, -var-3, -var-4, -var-5, var-6, -var-7, -var-8, -var-9)
100000032 p 35 -1 2 -3 -4 -5 6 -7 -8 -9 0
c Implicit declarations:
c 100000032 a 35 1 -2 3 4 5 -6 7 8 9 0
c 100000033 a -35 -1 0
c 100000034 a -35 2 0
c 100000035 a -35 -3 0
c 100000036 a -35 -4 0
c 100000037 a -35 -5 0
c 100000038 a -35 6 0
c 100000039 a -35 -7 0
c 100000040 a -35 -8 0
c 100000041 a -35 -9 0
c S36 = OR(P34, P35)
100000042 s 36 34 35 100000023 100000033 0
c Implicit declarations:
c 100000042 a -36 34 35 0
c 100000043 a 36 -34 0
c 100000044 a 36 -35 0
c P40 = AND(var-10, var-2, -var-3, -var-4, -var-5, -var-6, -var-7, -var-8, -var-9, var-11, -var-13, -var-14)
100000045 p 40 10 2 -3 -4 -5 -6 -7 -8 -9 11 -13 -14 0
c Implicit declarations:
c 100000045 a 40 -10 -2 3 4 5 6 7 8 9 -11 13 14 0
c 100000046 a -40 10 0
c 100000047 a -40 2 0
c 100000048 a -40 -3 0
c 100000049 a -40 -4 0
c 100000050 a -40 -5 0
c 100000051 a -40 -6 0
c 100000052 a -40 -7 0
c 100000053 a -40 -8 0
c 100000054 a -40 -9 0
c 100000055 a -40 11 0
c 100000056 a -40 -13 0
c 100000057 a -40 -14 0
c P41 = AND(-var-10, -var-2, -var-3, -var-4, var-5, -var-6, var-7, -var-8, -var-9, var-11, -var-13, -var-14)
100000058 p 41 -10 -2 -3 -4 5 -6 7 -8 -9 11 -13 -14 0
c Implicit declarations:
c 100000058 a 41 10 2 3 4 -5 6 -7 8 9 -11 13 14 0
c 100000059 a -41 -10 0
c 100000060 a -41 -2 0
c 100000061 a -41 -3 0
c 100000062 a -41 -4 0
c 100000063 a -41 5 0
c 100000064 a -41 -6 0
c 100000065 a -41 7 0
c 100000066 a -41 -8 0
c 100000067 a -41 -9 0
c 100000068 a -41 11 0
c 100000069 a -41 -13 0
c 100000070 a -41 -14 0
c S42 = OR(P40, P41)
100000071 s 42 40 41 100000046 100000059 0
c Implicit declarations:
c 100000071 a -42 40 41 0
c 100000072 a 42 -40 0
c 100000073 a 42 -41 0
c P44 = AND(var-15, -var-10, -var-11, -var-13, -var-14, S36)
100000074 p 44 15 -10 -11 -13 -14 36 0
c Implicit declarations:
c 100000074 a 44 -15 10 11 13 14 -36 0
c 100000075 a -44 15 0
c 100000076 a -44 -10 0
c 100000077 a -44 -11 0
c 100000078 a -44 -13 0
c 100000079 a -44 -14 0
c 100000080 a -44 36 0
c P45 = AND(-var-15, -var-1, S42)
100000081 p 45 -15 -1 42 0
c Implicit declarations:
c 100000081 a 45 15 1 -42 0
c 100000082 a -45 -15 0
c 100000083 a -45 -1 0
c 100000084 a -45 42 0
c S46 = OR(P44, P45)
100000085 s 46 44 45 100000075 100000082 0
c Implicit declarations:
c 100000085 a -46 44 45 0
c 100000086 a 46 -44 0
c 100000087 a 46 -45 0
c P47 = AND(var-12, -var-4, -var-8, -var-11, -var-13, -var-14, -var-15, S30)
100000088 p 47 12 -4 -8 -11 -13 -14 -15 30 0
c Implicit declarations:
c 100000088 a 47 -12 4 8 11 13 14 15 -30 0
c 100000089 a -47 12 0
c 100000090 a -47 -4 0
c 100000091 a -47 -8 0
c 100000092 a -47 -11 0
c 100000093 a -47 -13 0
c 100000094 a -47 -14 0
c 100000095 a -47 -15 0
c 100000096 a -47 30 0
c P48 = AND(-var-12, S46)
100000097 p 48 -12 46 0
c Implicit declarations:
c 100000097 a 48 12 -46 0
c 100000098 a -48 -12 0
c 100000099 a -48 46 0
c S49 = OR(P47, P48)
100000100 s 49 47 48 100000089 100000098 0
c Implicit declarations:
c 100000100 a -49 47 48 0
c 100000101 a 49 -47 0
c 100000102 a 49 -48 0
c P55 = AND(var-10, -var-3, var-4, -var-5, -var-7, -var-8, -var-9)
100000103 p 55 10 -3 4 -5 -7 -8 -9 0
c Implicit declarations:
c 100000103 a 55 -10 3 -4 5 7 8 9 0
c 100000104 a -55 10 0
c 100000105 a -55 -3 0
c 100000106 a -55 4 0
c 100000107 a -55 -5 0
c 100000108 a -55 -7 0
c 100000109 a -55 -8 0
c 100000110 a -55 -9 0
c P56 = AND(-var-10, -var-3, -var-4, var-5, -var-7, -var-8, var-9)
100000111 p 56 -10 -3 -4 5 -7 -8 9 0
c Implicit declarations:
c 100000111 a 56 10 3 4 -5 7 8 -9 0
c 100000112 a -56 -10 0
c 100000113 a -56 -3 0
c 100000114 a -56 -4 0
c 100000115 a -56 5 0
c 100000116 a -56 -7 0
c 100000117 a -56 -8 0
c 100000118 a -56 9 0
c S57 = OR(P55, P56)
100000119 s 57 55 56 100000104 100000112 0
c Implicit declarations:
c 100000119 a -57 55 56 0
c 100000120 a 57 -55 0
c 100000121 a 57 -56 0
c P59 = AND(var-6, -var-2, -var-3, var-4, -var-5, -var-7, -var-8, -var-9, -var-10, -var-21, -var-22, var-25)
100000122 p 59 6 -2 -3 4 -5 -7 -8 -9 -10 -21 -22 25 0
c Implicit declarations:
c 100000122 a 59 -6 2 3 -4 5 7 8 9 10 21 22 -25 0
c 100000123 a -59 6 0
c 100000124 a -59 -2 0
c 100000125 a -59 -3 0
c 100000126 a -59 4 0
c 100000127 a -59 -5 0
c 100000128 a -59 -7 0
c 100000129 a -59 -8 0
c 100000130 a -59 -9 0
c 100000131 a -59 -10 0
c 100000132 a -59 -21 0
c 100000133 a -59 -22 0
c 100000134 a -59 25 0
c P60 = AND(-var-6, -var-2, var-21, -var-22, -var-25, S57)
100000135 p 60 -6 -2 21 -22 -25 57 0
c Implicit declarations:
c 100000135 a 60 6 2 -21 22 25 -57 0
c 100000136 a -60 -6 0
c 100000137 a -60 -2 0
c 100000138 a -60 21 0
c 100000139 a -60 -22 0
c 100000140 a -60 -25 0
c 100000141 a -60 57 0
c S61 = OR(P59, P60)
100000142 s 61 59 60 100000123 100000136 0
c Implicit declarations:
c 100000142 a -61 59 60 0
c 100000143 a 61 -59 0
c 100000144 a 61 -60 0
c P62 = AND(var-1, -var-2, -var-3, -var-4, -var-5, -var-6, -var-7, -var-8, var-9, -var-10, -var-21, -var-22, var-25)
100000145 p 62 1 -2 -3 -4 -5 -6 -7 -8 9 -10 -21 -22 25 0
c Implicit declarations:
c 100000145 a 62 -1 2 3 4 5 6 7 8 -9 10 21 22 -25 0
c 100000146 a -62 1 0
c 100000147 a -62 -2 0
c 100000148 a -62 -3 0
c 100000149 a -62 -4 0
c 100000150 a -62 -5 0
c 100000151 a -62 -6 0
c 100000152 a -62 -7 0
c 100000153 a -62 -8 0
c 100000154 a -62 9 0
c 100000155 a -62 -10 0
c 100000156 a -62 -21 0
c 100000157 a -62 -22 0
c 100000158 a -62 25 0
c P63 = AND(-var-1, S61)
100000159 p 63 -1 61 0
c Implicit declarations:
c 100000159 a 63 1 -61 0
c 100000160 a -63 -1 0
c 100000161 a -63 61 0
c S64 = OR(P62, P63)
100000162 s 64 62 63 100000146 100000160 0
c Implicit declarations:
c 100000162 a -64 62 63 0
c 100000163 a 64 -62 0
c 100000164 a 64 -63 0
c P69 = AND(var-7, -var-6, -var-8, -var-9, -var-10, -var-11, -var-13, var-14, -var-21, -var-22, var-25)
100000165 p 69 7 -6 -8 -9 -10 -11 -13 14 -21 -22 25 0
c Implicit declarations:
c 100000165 a 69 -7 6 8 9 10 11 13 -14 21 22 -25 0
c 100000166 a -69 7 0
c 100000167 a -69 -6 0
c 100000168 a -69 -8 0
c 100000169 a -69 -9 0
c 100000170 a -69 -10 0
c 100000171 a -69 -11 0
c 100000172 a -69 -13 0
c 100000173 a -69 14 0
c 100000174 a -69 -21 0
c 100000175 a -69 -22 0
c 100000176 a -69 25 0
c P70 = AND(-var-7, -var-6, -var-8, -var-9, var-10, -var-11, -var-13, var-14, -var-21, var-22, -var-25)
100000177 p 70 -7 -6 -8 -9 10 -11 -13 14 -21 22 -25 0
c Implicit declarations:
c 100000177 a 70 7 6 8 9 -10 11 13 -14 21 -22 25 0
c 100000178 a -70 -7 0
c 100000179 a -70 -6 0
c 100000180 a -70 -8 0
c 100000181 a -70 -9 0
c 100000182 a -70 10 0
c 100000183 a -70 -11 0
c 100000184 a -70 -13 0
c 100000185 a -70 14 0
c 100000186 a -70 -21 0
c 100000187 a -70 22 0
c 100000188 a -70 -25 0
c S71 = OR(P69, P70)
100000189 s 71 69 70 100000166 100000178 0
c Implicit declarations:
c 100000189 a -71 69 70 0
c 100000190 a 71 -69 0
c 100000191 a 71 -70 0
c P72 = AND(var-15, -var-6, -var-7, -var-8, var-9, -var-10, -var-11, -var-13, -var-14, -var-21, var-22, -var-25)
100000192 p 72 15 -6 -7 -8 9 -10 -11 -13 -14 -21 22 -25 0
c Implicit declarations:
c 100000192 a 72 -15 6 7 8 -9 10 11 13 14 21 -22 25 0
c 100000193 a -72 15 0
c 100000194 a -72 -6 0
c 100000195 a -72 -7 0
c 100000196 a -72 -8 0
c 100000197 a -72 9 0
c 100000198 a -72 -10 0
c 100000199 a -72 -11 0
c 100000200 a -72 -13 0
c 100000201 a -72 -14 0
c 100000202 a -72 -21 0
c 100000203 a -72 22 0
c 100000204 a -72 -25 0
c P73 = AND(-var-15, S71)
100000205 p 73 -15 71 0
c Implicit declarations:
c 100000205 a 73 15 -71 0
c 100000206 a -73 -15 0
c 100000207 a -73 71 0
c S74 = OR(P72, P73)
100000208 s 74 72 73 100000193 100000206 0
c Implicit declarations:
c 100000208 a -74 72 73 0
c 100000209 a 74 -72 0
c 100000210 a 74 -73 0
c P78 = AND(var-2, -var-3, -var-4, -var-5, -var-11, -var-13, var-14, var-21, -var-22, -var-25)
100000211 p 78 2 -3 -4 -5 -11 -13 14 21 -22 -25 0
c Implicit declarations:
c 100000211 a 78 -2 3 4 5 11 13 -14 -21 22 25 0
c 100000212 a -78 2 0
c 100000213 a -78 -3 0
c 100000214 a -78 -4 0
c 100000215 a -78 -5 0
c 100000216 a -78 -11 0
c 100000217 a -78 -13 0
c 100000218 a -78 14 0
c 100000219 a -78 21 0
c 100000220 a -78 -22 0
c 100000221 a -78 -25 0
c P79 = AND(-var-2, -var-3, var-4, -var-5, var-11, -var-13, -var-14, -var-21, var-22, -var-25)
100000222 p 79 -2 -3 4 -5 11 -13 -14 -21 22 -25 0
c Implicit declarations:
c 100000222 a 79 2 3 -4 5 -11 13 14 21 -22 25 0
c 100000223 a -79 -2 0
c 100000224 a -79 -3 0
c 100000225 a -79 4 0
c 100000226 a -79 -5 0
c 100000227 a -79 11 0
c 100000228 a -79 -13 0
c 100000229 a -79 -14 0
c 100000230 a -79 -21 0
c 100000231 a -79 22 0
c 100000232 a -79 -25 0
c S80 = OR(P78, P79)
100000233 s 80 78 79 100000212 100000223 0
c Implicit declarations:
c 100000233 a -80 78 79 0
c 100000234 a 80 -78 0
c 100000235 a 80 -79 0
c P86 = AND(var-2, -var-3, -var-4, -var-5, -var-7, -var-8, var-9)
100000236 p 86 2 -3 -4 -5 -7 -8 9 0
c Implicit declarations:
c 100000236 a 86 -2 3 4 5 7 8 -9 0
c 100000237 a -86 2 0
c 100000238 a -86 -3 0
c 100000239 a -86 -4 0
c 100000240 a -86 -5 0
c 100000241 a -86 -7 0
c 100000242 a -86 -8 0
c 100000243 a -86 9 0
c P87 = AND(-var-2, -var-3, var-4, -var-5, var-7, -var-8, -var-9)
100000244 p 87 -2 -3 4 -5 7 -8 -9 0
c Implicit declarations:
c 100000244 a 87 2 3 -4 5 -7 8 9 0
c 100000245 a -87 -2 0
c 100000246 a -87 -3 0
c 100000247 a -87 4 0
c 100000248 a -87 -5 0
c 100000249 a -87 7 0
c 100000250 a -87 -8 0
c 100000251 a -87 -9 0
c S88 = OR(P86, P87)
100000252 s 88 86 87 100000237 100000245 0
c Implicit declarations:
c 100000252 a -88 86 87 0
c 100000253 a 88 -86 0
c 100000254 a 88 -87 0
c P90 = AND(var-6, -var-2, -var-3, var-4, -var-5, -var-7, -var-8, -var-9, -var-21, var-22, -var-25)
100000255 p 90 6 -2 -3 4 -5 -7 -8 -9 -21 22 -25 0
c Implicit declarations:
c 100000255 a 90 -6 2 3 -4 5 7 8 9 21 -22 25 0
c 100000256 a -90 6 0
c 100000257 a -90 -2 0
c 100000258 a -90 -3 0
c 100000259 a -90 4 0
c 100000260 a -90 -5 0
c 100000261 a -90 -7 0
c 100000262 a -90 -8 0
c 100000263 a -90 -9 0
c 100000264 a -90 -21 0
c 100000265 a -90 22 0
c 100000266 a -90 -25 0
c P91 = AND(-var-6, var-21, -var-22, -var-25, S88)
100000267 p 91 -6 21 -22 -25 88 0
c Implicit declarations:
c 100000267 a 91 6 -21 22 25 -88 0
c 100000268 a -91 -6 0
c 100000269 a -91 21 0
c 100000270 a -91 -22 0
c 100000271 a -91 -25 0
c 100000272 a -91 88 0
c S92 = OR(P90, P91)
100000273 s 92 90 91 100000256 100000268 0
c Implicit declarations:
c 100000273 a -92 90 91 0
c 100000274 a 92 -90 0
c 100000275 a 92 -91 0
c P97 = AND(var-7, -var-8, -var-9, -var-11, -var-13, var-14, var-21, -var-22)
100000276 p 97 7 -8 -9 -11 -13 14 21 -22 0
c Implicit declarations:
c 100000276 a 97 -7 8 9 11 13 -14 -21 22 0
c 100000277 a -97 7 0
c 100000278 a -97 -8 0
c 100000279 a -97 -9 0
c 100000280 a -97 -11 0
c 100000281 a -97 -13 0
c 100000282 a -97 14 0
c 100000283 a -97 21 0
c 100000284 a -97 -22 0
c P98 = AND(-var-7, -var-8, var-9, var-11, -var-13, -var-14, -var-21, var-22)
100000285 p 98 -7 -8 9 11 -13 -14 -21 22 0
c Implicit declarations:
c 100000285 a 98 7 8 -9 -11 13 14 21 -22 0
c 100000286 a -98 -7 0
c 100000287 a -98 -8 0
c 100000288 a -98 9 0
c 100000289 a -98 11 0
c 100000290 a -98 -13 0
c 100000291 a -98 -14 0
c 100000292 a -98 -21 0
c 100000293 a -98 22 0
c S99 = OR(P97, P98)
100000294 s 99 97 98 100000277 100000286 0
c Implicit declarations:
c 100000294 a -99 97 98 0
c 100000295 a 99 -97 0
c 100000296 a 99 -98 0
c P100 = AND(var-6, -var-7, -var-8, -var-9, -var-11, -var-13, var-14, -var-21, var-22)
100000297 p 100 6 -7 -8 -9 -11 -13 14 -21 22 0
c Implicit declarations:
c 100000297 a 100 -6 7 8 9 11 13 -14 21 -22 0
c 100000298 a -100 6 0
c 100000299 a -100 -7 0
c 100000300 a -100 -8 0
c 100000301 a -100 -9 0
c 100000302 a -100 -11 0
c 100000303 a -100 -13 0
c 100000304 a -100 14 0
c 100000305 a -100 -21 0
c 100000306 a -100 22 0
c P101 = AND(-var-6, S99)
100000307 p 101 -6 99 0
c Implicit declarations:
c 100000307 a 101 6 -99 0
c 100000308 a -101 -6 0
c 100000309 a -101 99 0
c S102 = OR(P100, P101)
100000310 s 102 100 101 100000298 100000308 0
c Implicit declarations:
c 100000310 a -102 100 101 0
c 100000311 a 102 -100 0
c 100000312 a 102 -101 0
c P107 = AND(var-7, -var-2, -var-3, var-4, -var-8, -var-9)
100000313 p 107 7 -2 -3 4 -8 -9 0
c Implicit declarations:
c 100000313 a 107 -7 2 3 -4 8 9 0
c 100000314 a -107 7 0
c 100000315 a -107 -2 0
c 100000316 a -107 -3 0
c 100000317 a -107 4 0
c 100000318 a -107 -8 0
c 100000319 a -107 -9 0
c P108 = AND(-var-7, var-2, -var-3, -var-4, -var-8, var-9)
100000320 p 108 -7 2 -3 -4 -8 9 0
c Implicit declarations:
c 100000320 a 108 7 -2 3 4 8 -9 0
c 100000321 a -108 -7 0
c 100000322 a -108 2 0
c 100000323 a -108 -3 0
c 100000324 a -108 -4 0
c 100000325 a -108 -8 0
c 100000326 a -108 9 0
c S109 = OR(P107, P108)
100000327 s 109 107 108 100000314 100000321 0
c Implicit declarations:
c 100000327 a -109 107 108 0
c 100000328 a 109 -107 0
c 100000329 a 109 -108 0
c P111 = AND(var-6, var-2, -var-3, -var-4, -var-7, -var-8, -var-9, -var-11, -var-13, var-14)
100000330 p 111 6 2 -3 -4 -7 -8 -9 -11 -13 14 0
c Implicit declarations:
c 100000330 a 111 -6 -2 3 4 7 8 9 11 13 -14 0
c 100000331 a -111 6 0
c 100000332 a -111 2 0
c 100000333 a -111 -3 0
c 100000334 a -111 -4 0
c 100000335 a -111 -7 0
c 100000336 a -111 -8 0
c 100000337 a -111 -9 0
c 100000338 a -111 -11 0
c 100000339 a -111 -13 0
c 100000340 a -111 14 0
c P112 = AND(-var-6, var-11, -var-13, -var-14, S109)
100000341 p 112 -6 11 -13 -14 109 0
c Implicit declarations:
c 100000341 a 112 6 -11 13 14 -109 0
c 100000342 a -112 -6 0
c 100000343 a -112 11 0
c 100000344 a -112 -13 0
c 100000345 a -112 -14 0
c 100000346 a -112 109 0
c S113 = OR(P111, P112)
100000347 s 113 111 112 100000331 100000342 0
c Implicit declarations:
c 100000347 a -113 111 112 0
c 100000348 a 113 -111 0
c 100000349 a 113 -112 0
c P115 = AND(var-5, -var-2, -var-3, -var-4, -var-25, S102)
100000350 p 115 5 -2 -3 -4 -25 102 0
c Implicit declarations:
c 100000350 a 115 -5 2 3 4 25 -102 0
c 100000351 a -115 5 0
c 100000352 a -115 -2 0
c 100000353 a -115 -3 0
c 100000354 a -115 -4 0
c 100000355 a -115 -25 0
c 100000356 a -115 102 0
c P116 = AND(-var-5, -var-21, -var-22, var-25, S113)
100000357 p 116 -5 -21 -22 25 113 0
c Implicit declarations:
c 100000357 a 116 5 21 22 -25 -113 0
c 100000358 a -116 -5 0
c 100000359 a -116 -21 0
c 100000360 a -116 -22 0
c 100000361 a -116 25 0
c 100000362 a -116 113 0
c S117 = OR(P115, P116)
100000363 s 117 115 116 100000351 100000358 0
c Implicit declarations:
c 100000363 a -117 115 116 0
c 100000364 a 117 -115 0
c 100000365 a 117 -116 0
c P118 = AND(var-15, -var-11, -var-13, -var-14, S92)
100000366 p 118 15 -11 -13 -14 92 0
c Implicit declarations:
c 100000366 a 118 -15 11 13 14 -92 0
c 100000367 a -118 15 0
c 100000368 a -118 -11 0
c 100000369 a -118 -13 0
c 100000370 a -118 -14 0
c 100000371 a -118 92 0
c P119 = AND(-var-15, S117)
100000372 p 119 -15 117 0
c Implicit declarations:
c 100000372 a 119 15 -117 0
c 100000373 a -119 -15 0
c 100000374 a -119 117 0
c S120 = OR(P118, P119)
100000375 s 120 118 119 100000367 100000373 0
c Implicit declarations:
c 100000375 a -120 118 119 0
c 100000376 a 120 -118 0
c 100000377 a 120 -119 0
c P121 = AND(var-10, -var-6, -var-7, -var-8, -var-9, -var-15, S80)
100000378 p 121 10 -6 -7 -8 -9 -15 80 0
c Implicit declarations:
c 100000378 a 121 -10 6 7 8 9 15 -80 0
c 100000379 a -121 10 0
c 100000380 a -121 -6 0
c 100000381 a -121 -7 0
c 100000382 a -121 -8 0
c 100000383 a -121 -9 0
c 100000384 a -121 -15 0
c 100000385 a -121 80 0
c P122 = AND(-var-10, S120)
100000386 p 122 -10 120 0
c Implicit declarations:
c 100000386 a 122 10 -120 0
c 100000387 a -122 -10 0
c 100000388 a -122 120 0
c S123 = OR(P121, P122)
100000389 s 123 121 122 100000379 100000387 0
c Implicit declarations:
c 100000389 a -123 121 122 0
c 100000390 a 123 -121 0
c 100000391 a 123 -122 0
c P124 = AND(var-1, -var-2, -var-3, -var-4, -var-5, S74)
100000392 p 124 1 -2 -3 -4 -5 74 0
c Implicit declarations:
c 100000392 a 124 -1 2 3 4 5 -74 0
c 100000393 a -124 1 0
c 100000394 a -124 -2 0
c 100000395 a -124 -3 0
c 100000396 a -124 -4 0
c 100000397 a -124 -5 0
c 100000398 a -124 74 0
c P125 = AND(-var-1, S123)
100000399 p 125 -1 123 0
c Implicit declarations:
c 100000399 a 125 1 -123 0
c 100000400 a -125 -1 0
c 100000401 a -125 123 0
c S126 = OR(P124, P125)
100000402 s 126 124 125 100000393 100000400 0
c Implicit declarations:
c 100000402 a -126 124 125 0
c 100000403 a 126 -124 0
c 100000404 a 126 -125 0
c P127 = AND(var-12, -var-11, -var-13, -var-14, -var-15, S64)
100000405 p 127 12 -11 -13 -14 -15 64 0
c Implicit declarations:
c 100000405 a 127 -12 11 13 14 15 -64 0
c 100000406 a -127 12 0
c 100000407 a -127 -11 0
c 100000408 a -127 -13 0
c 100000409 a -127 -14 0
c 100000410 a -127 -15 0
c 100000411 a -127 64 0
c P128 = AND(-var-12, S126)
100000412 p 128 -12 126 0
c Implicit declarations:
c 100000412 a 128 12 -126 0
c 100000413 a -128 -12 0
c 100000414 a -128 126 0
c S129 = OR(P127, P128)
100000415 s 129 127 128 100000406 100000413 0
c Implicit declarations:
c 100000415 a -129 127 128 0
c 100000416 a 129 -127 0
c 100000417 a 129 -128 0
c P130 = AND(var-24, -var-21, -var-22, -var-25, S49)
100000418 p 130 24 -21 -22 -25 49 0
c Implicit declarations:
c 100000418 a 130 -24 21 22 25 -49 0
c 100000419 a -130 24 0
c 100000420 a -130 -21 0
c 100000421 a -130 -22 0
c 100000422 a -130 -25 0
c 100000423 a -130 49 0
c P131 = AND(-var-24, S129)
100000424 p 131 -24 129 0
c Implicit declarations:
c 100000424 a 131 24 -129 0
c 100000425 a -131 -24 0
c 100000426 a -131 129 0
c S132 = OR(P130, P131)
100000427 s 132 130 131 100000419 100000425 0
c Implicit declarations:
c 100000427 a -132 130 131 0
c 100000428 a 132 -130 0
c 100000429 a 132 -131 0
c P140 = AND(var-10, var-4, -var-5, -var-7, -var-8, -var-9)
100000430 p 140 10 4 -5 -7 -8 -9 0
c Implicit declarations:
c 100000430 a 140 -10 -4 5 7 8 9 0
c 100000431 a -140 10 0
c 100000432 a -140 4 0
c 100000433 a -140 -5 0
c 100000434 a -140 -7 0
c 100000435 a -140 -8 0
c 100000436 a -140 -9 0
c P141 = AND(-var-10, -var-4, var-5, -var-7, -var-8, var-9)
100000437 p 141 -10 -4 5 -7 -8 9 0
c Implicit declarations:
c 100000437 a 141 10 4 -5 7 8 -9 0
c 100000438 a -141 -10 0
c 100000439 a -141 -4 0
c 100000440 a -141 5 0
c 100000441 a -141 -7 0
c 100000442 a -141 -8 0
c 100000443 a -141 9 0
c S142 = OR(P140, P141)
100000444 s 142 140 141 100000431 100000438 0
c Implicit declarations:
c 100000444 a -142 140 141 0
c 100000445 a 142 -140 0
c 100000446 a 142 -141 0
c P144 = AND(var-6, -var-2, var-4, -var-5, -var-7, -var-8, -var-9, -var-10, -var-16, var-20)
100000447 p 144 6 -2 4 -5 -7 -8 -9 -10 -16 20 0
c Implicit declarations:
c 100000447 a 144 -6 2 -4 5 7 8 9 10 16 -20 0
c 100000448 a -144 6 0
c 100000449 a -144 -2 0
c 100000450 a -144 4 0
c 100000451 a -144 -5 0
c 100000452 a -144 -7 0
c 100000453 a -144 -8 0
c 100000454 a -144 -9 0
c 100000455 a -144 -10 0
c 100000456 a -144 -16 0
c 100000457 a -144 20 0
c P145 = AND(-var-6, -var-2, var-16, -var-20, S142)
100000458 p 145 -6 -2 16 -20 142 0
c Implicit declarations:
c 100000458 a 145 6 2 -16 20 -142 0
c 100000459 a -145 -6 0
c 100000460 a -145 -2 0
c 100000461 a -145 16 0
c 100000462 a -145 -20 0
c 100000463 a -145 142 0
c S146 = OR(P144, P145)
100000464 s 146 144 145 100000448 100000459 0
c Implicit declarations:
c 100000464 a -146 144 145 0
c 100000465 a 146 -144 0
c 100000466 a 146 -145 0
c P147 = AND(var-1, -var-2, -var-4, -var-5, -var-6, -var-7, -var-8, var-9, -var-10, -var-16, var-20)
100000467 p 147 1 -2 -4 -5 -6 -7 -8 9 -10 -16 20 0
c Implicit declarations:
c 100000467 a 147 -1 2 4 5 6 7 8 -9 10 16 -20 0
c 100000468 a -147 1 0
c 100000469 a -147 -2 0
c 100000470 a -147 -4 0
c 100000471 a -147 -5 0
c 100000472 a -147 -6 0
c 100000473 a -147 -7 0
c 100000474 a -147 -8 0
c 100000475 a -147 9 0
c 100000476 a -147 -10 0
c 100000477 a -147 -16 0
c 100000478 a -147 20 0
c P148 = AND(-var-1, S146)
100000479 p 148 -1 146 0
c Implicit declarations:
c 100000479 a 148 1 -146 0
c 100000480 a -148 -1 0
c 100000481 a -148 146 0
c S149 = OR(P147, P148)
100000482 s 149 147 148 100000468 100000480 0
c Implicit declarations:
c 100000482 a -149 147 148 0
c 100000483 a 149 -147 0
c 100000484 a 149 -148 0
c P155 = AND(var-7, -var-2, var-4, -var-5, -var-8, -var-9, -var-10)
100000485 p 155 7 -2 4 -5 -8 -9 -10 0
c Implicit declarations:
c 100000485 a 155 -7 2 -4 5 8 9 10 0
c 100000486 a -155 7 0
c 100000487 a -155 -2 0
c 100000488 a -155 4 0
c 100000489 a -155 -5 0
c 100000490 a -155 -8 0
c 100000491 a -155 -9 0
c 100000492 a -155 -10 0
c P156 = AND(-var-7, var-2, -var-4, -var-5, -var-8, var-9, -var-10)
100000493 p 156 -7 2 -4 -5 -8 9 -10 0
c Implicit declarations:
c 100000493 a 156 7 -2 4 5 8 -9 10 0
c 100000494 a -156 -7 0
c 100000495 a -156 2 0
c 100000496 a -156 -4 0
c 100000497 a -156 -5 0
c 100000498 a -156 -8 0
c 100000499 a -156 9 0
c 100000500 a -156 -10 0
c S157 = OR(P155, P156)
100000501 s 157 155 156 100000486 100000494 0
c Implicit declarations:
c 100000501 a -157 155 156 0
c 100000502 a 157 -155 0
c 100000503 a 157 -156 0
c P159 = AND(var-1, -var-2, -var-4, -var-5, -var-7, -var-8, var-9, -var-10, -var-16, var-17)
100000504 p 159 1 -2 -4 -5 -7 -8 9 -10 -16 17 0
c Implicit declarations:
c 100000504 a 159 -1 2 4 5 7 8 -9 10 16 -17 0
c 100000505 a -159 1 0
c 100000506 a -159 -2 0
c 100000507 a -159 -4 0
c 100000508 a -159 -5 0
c 100000509 a -159 -7 0
c 100000510 a -159 -8 0
c 100000511 a -159 9 0
c 100000512 a -159 -10 0
c 100000513 a -159 -16 0
c 100000514 a -159 17 0
c P160 = AND(-var-1, var-16, -var-17, S157)
100000515 p 160 -1 16 -17 157 0
c Implicit declarations:
c 100000515 a 160 1 -16 17 -157 0
c 100000516 a -160 -1 0
c 100000517 a -160 16 0
c 100000518 a -160 -17 0
c 100000519 a -160 157 0
c S161 = OR(P159, P160)
100000520 s 161 159 160 100000505 100000516 0
c Implicit declarations:
c 100000520 a -161 159 160 0
c 100000521 a 161 -159 0
c 100000522 a 161 -160 0
c P162 = AND(var-6, -var-1, -var-2, var-4, -var-5, -var-7, -var-8, -var-9, -var-10, -var-16, var-17)
100000523 p 162 6 -1 -2 4 -5 -7 -8 -9 -10 -16 17 0
c Implicit declarations:
c 100000523 a 162 -6 1 2 -4 5 7 8 9 10 16 -17 0
c 100000524 a -162 6 0
c 100000525 a -162 -1 0
c 100000526 a -162 -2 0
c 100000527 a -162 4 0
c 100000528 a -162 -5 0
c 100000529 a -162 -7 0
c 100000530 a -162 -8 0
c 100000531 a -162 -9 0
c 100000532 a -162 -10 0
c 100000533 a -162 -16 0
c 100000534 a -162 17 0
c P163 = AND(-var-6, S161)
100000535 p 163 -6 161 0
c Implicit declarations:
c 100000535 a 163 6 -161 0
c 100000536 a -163 -6 0
c 100000537 a -163 161 0
c S164 = OR(P162, P163)
100000538 s 164 162 163 100000524 100000536 0
c Implicit declarations:
c 100000538 a -164 162 163 0
c 100000539 a 164 -162 0
c 100000540 a 164 -163 0
c P168 = AND(var-5, -var-2, -var-4, -var-11, -var-13, var-14, -var-16, var-17, -var-20)
100000541 p 168 5 -2 -4 -11 -13 14 -16 17 -20 0
c Implicit declarations:
c 100000541 a 168 -5 2 4 11 13 -14 16 -17 20 0
c 100000542 a -168 5 0
c 100000543 a -168 -2 0
c 100000544 a -168 -4 0
c 100000545 a -168 -11 0
c 100000546 a -168 -13 0
c 100000547 a -168 14 0
c 100000548 a -168 -16 0
c 100000549 a -168 17 0
c 100000550 a -168 -20 0
c P169 = AND(-var-5, var-2, -var-4, -var-11, -var-13, var-14, -var-16, -var-17, var-20)
100000551 p 169 -5 2 -4 -11 -13 14 -16 -17 20 0
c Implicit declarations:
c 100000551 a 169 5 -2 4 11 13 -14 16 17 -20 0
c 100000552 a -169 -5 0
c 100000553 a -169 2 0
c 100000554 a -169 -4 0
c 100000555 a -169 -11 0
c 100000556 a -169 -13 0
c 100000557 a -169 14 0
c 100000558 a -169 -16 0
c 100000559 a -169 -17 0
c 100000560 a -169 20 0
c S170 = OR(P168, P169)
100000561 s 170 168 169 100000542 100000552 0
c Implicit declarations:
c 100000561 a -170 168 169 0
c 100000562 a 170 -168 0
c 100000563 a 170 -169 0
c P175 = AND(var-10, -var-7, -var-8, -var-9, -var-11, -var-13, var-14, var-17, -var-20)
100000564 p 175 10 -7 -8 -9 -11 -13 14 17 -20 0
c Implicit declarations:
c 100000564 a 175 -10 7 8 9 11 13 -14 -17 20 0
c 100000565 a -175 10 0
c 100000566 a -175 -7 0
c 100000567 a -175 -8 0
c 100000568 a -175 -9 0
c 100000569 a -175 -11 0
c 100000570 a -175 -13 0
c 100000571 a -175 14 0
c 100000572 a -175 17 0
c 100000573 a -175 -20 0
c P176 = AND(-var-10, var-7, -var-8, -var-9, -var-11, -var-13, var-14, -var-17, var-20)
100000574 p 176 -10 7 -8 -9 -11 -13 14 -17 20 0
c Implicit declarations:
c 100000574 a 176 10 -7 8 9 11 13 -14 17 -20 0
c 100000575 a -176 -10 0
c 100000576 a -176 7 0
c 100000577 a -176 -8 0
c 100000578 a -176 -9 0
c 100000579 a -176 -11 0
c 100000580 a -176 -13 0
c 100000581 a -176 14 0
c 100000582 a -176 -17 0
c 100000583 a -176 20 0
c S177 = OR(P175, P176)
100000584 s 177 175 176 100000565 100000575 0
c Implicit declarations:
c 100000584 a -177 175 176 0
c 100000585 a 177 -175 0
c 100000586 a 177 -176 0
c P181 = AND(var-11, -var-2, var-4, -var-5, -var-13, -var-14, -var-16, var-17, -var-20)
100000587 p 181 11 -2 4 -5 -13 -14 -16 17 -20 0
c Implicit declarations:
c 100000587 a 181 -11 2 -4 5 13 14 16 -17 20 0
c 100000588 a -181 11 0
c 100000589 a -181 -2 0
c 100000590 a -181 4 0
c 100000591 a -181 -5 0
c 100000592 a -181 -13 0
c 100000593 a -181 -14 0
c 100000594 a -181 -16 0
c 100000595 a -181 17 0
c 100000596 a -181 -20 0
c P182 = AND(-var-11, var-2, -var-4, -var-5, -var-13, var-14, var-16, -var-17, -var-20)
100000597 p 182 -11 2 -4 -5 -13 14 16 -17 -20 0
c Implicit declarations:
c 100000597 a 182 11 -2 4 5 13 -14 -16 17 20 0
c 100000598 a -182 -11 0
c 100000599 a -182 2 0
c 100000600 a -182 -4 0
c 100000601 a -182 -5 0
c 100000602 a -182 -13 0
c 100000603 a -182 14 0
c 100000604 a -182 16 0
c 100000605 a -182 -17 0
c 100000606 a -182 -20 0
c S183 = OR(P181, P182)
100000607 s 183 181 182 100000588 100000598 0
c Implicit declarations:
c 100000607 a -183 181 182 0
c 100000608 a 183 -181 0
c 100000609 a 183 -182 0
c P187 = AND(var-7, -var-8, -var-9, -var-11, -var-13, var-14, var-16, -var-17, -var-20)
100000610 p 187 7 -8 -9 -11 -13 14 16 -17 -20 0
c Implicit declarations:
c 100000610 a 187 -7 8 9 11 13 -14 -16 17 20 0
c 100000611 a -187 7 0
c 100000612 a -187 -8 0
c 100000613 a -187 -9 0
c 100000614 a -187 -11 0
c 100000615 a -187 -13 0
c 100000616 a -187 14 0
c 100000617 a -187 16 0
c 100000618 a -187 -17 0
c 100000619 a -187 -20 0
c P188 = AND(-var-7, -var-8, var-9, var-11, -var-13, -var-14, -var-16, var-17, -var-20)
100000620 p 188 -7 -8 9 11 -13 -14 -16 17 -20 0
c Implicit declarations:
c 100000620 a 188 7 8 -9 -11 13 14 16 -17 20 0
c 100000621 a -188 -7 0
c 100000622 a -188 -8 0
c 100000623 a -188 9 0
c 100000624 a -188 11 0
c 100000625 a -188 -13 0
c 100000626 a -188 -14 0
c 100000627 a -188 -16 0
c 100000628 a -188 17 0
c 100000629 a -188 -20 0
c S189 = OR(P187, P188)
100000630 s 189 187 188 100000611 100000621 0
c Implicit declarations:
c 100000630 a -189 187 188 0
c 100000631 a 189 -187 0
c 100000632 a 189 -188 0
c P193 = AND(var-7, -var-2, var-4, -var-8, -var-9)
100000633 p 193 7 -2 4 -8 -9 0
c Implicit declarations:
c 100000633 a 193 -7 2 -4 8 9 0
c 100000634 a -193 7 0
c 100000635 a -193 -2 0
c 100000636 a -193 4 0
c 100000637 a -193 -8 0
c 100000638 a -193 -9 0
c P194 = AND(-var-7, var-2, -var-4, -var-8, var-9)
100000639 p 194 -7 2 -4 -8 9 0
c Implicit declarations:
c 100000639 a 194 7 -2 4 8 -9 0
c 100000640 a -194 -7 0
c 100000641 a -194 2 0
c 100000642 a -194 -4 0
c 100000643 a -194 -8 0
c 100000644 a -194 9 0
c S195 = OR(P193, P194)
100000645 s 195 193 194 100000634 100000640 0
c Implicit declarations:
c 100000645 a -195 193 194 0
c 100000646 a 195 -193 0
c 100000647 a 195 -194 0
c P197 = AND(var-5, -var-2, -var-4, S189)
100000648 p 197 5 -2 -4 189 0
c Implicit declarations:
c 100000648 a 197 -5 2 4 -189 0
c 100000649 a -197 5 0
c 100000650 a -197 -2 0
c 100000651 a -197 -4 0
c 100000652 a -197 189 0
c P198 = AND(-var-5, var-11, -var-13, -var-14, -var-16, -var-17, var-20, S195)
100000653 p 198 -5 11 -13 -14 -16 -17 20 195 0
c Implicit declarations:
c 100000653 a 198 5 -11 13 14 16 17 -20 -195 0
c 100000654 a -198 -5 0
c 100000655 a -198 11 0
c 100000656 a -198 -13 0
c 100000657 a -198 -14 0
c 100000658 a -198 -16 0
c 100000659 a -198 -17 0
c 100000660 a -198 20 0
c 100000661 a -198 195 0
c S199 = OR(P197, P198)
100000662 s 199 197 198 100000649 100000654 0
c Implicit declarations:
c 100000662 a -199 197 198 0
c 100000663 a 199 -197 0
c 100000664 a 199 -198 0
c P200 = AND(var-10, -var-7, -var-8, -var-9, S183)
100000665 p 200 10 -7 -8 -9 183 0
c Implicit declarations:
c 100000665 a 200 -10 7 8 9 -183 0
c 100000666 a -200 10 0
c 100000667 a -200 -7 0
c 100000668 a -200 -8 0
c 100000669 a -200 -9 0
c 100000670 a -200 183 0
c P201 = AND(-var-10, S199)
100000671 p 201 -10 199 0
c Implicit declarations:
c 100000671 a 201 10 -199 0
c 100000672 a -201 -10 0
c 100000673 a -201 199 0
c S202 = OR(P200, P201)
100000674 s 202 200 201 100000666 100000672 0
c Implicit declarations:
c 100000674 a -202 200 201 0
c 100000675 a 202 -200 0
c 100000676 a 202 -201 0
c P203 = AND(var-1, -var-2, -var-4, -var-5, -var-16, S177)
100000677 p 203 1 -2 -4 -5 -16 177 0
c Implicit declarations:
c 100000677 a 203 -1 2 4 5 16 -177 0
c 100000678 a -203 1 0
c 100000679 a -203 -2 0
c 100000680 a -203 -4 0
c 100000681 a -203 -5 0
c 100000682 a -203 -16 0
c 100000683 a -203 177 0
c P204 = AND(-var-1, S202)
100000684 p 204 -1 202 0
c Implicit declarations:
c 100000684 a 204 1 -202 0
c 100000685 a -204 -1 0
c 100000686 a -204 202 0
c S205 = OR(P203, P204)
100000687 s 205 203 204 100000678 100000685 0
c Implicit declarations:
c 100000687 a -205 203 204 0
c 100000688 a 205 -203 0
c 100000689 a 205 -204 0
c P206 = AND(var-6, -var-7, -var-8, -var-9, -var-10, -var-1, S170)
100000690 p 206 6 -7 -8 -9 -10 -1 170 0
c Implicit declarations:
c 100000690 a 206 -6 7 8 9 10 1 -170 0
c 100000691 a -206 6 0
c 100000692 a -206 -7 0
c 100000693 a -206 -8 0
c 100000694 a -206 -9 0
c 100000695 a -206 -10 0
c 100000696 a -206 -1 0
c 100000697 a -206 170 0
c P207 = AND(-var-6, S205)
100000698 p 207 -6 205 0
c Implicit declarations:
c 100000698 a 207 6 -205 0
c 100000699 a -207 -6 0
c 100000700 a -207 205 0
c S208 = OR(P206, P207)
100000701 s 208 206 207 100000691 100000699 0
c Implicit declarations:
c 100000701 a -208 206 207 0
c 100000702 a 208 -206 0
c 100000703 a 208 -207 0
c P209 = AND(var-15, -var-11, -var-13, -var-14, -var-20, S164)
100000704 p 209 15 -11 -13 -14 -20 164 0
c Implicit declarations:
c 100000704 a 209 -15 11 13 14 20 -164 0
c 100000705 a -209 15 0
c 100000706 a -209 -11 0
c 100000707 a -209 -13 0
c 100000708 a -209 -14 0
c 100000709 a -209 -20 0
c 100000710 a -209 164 0
c P210 = AND(-var-15, S208)
100000711 p 210 -15 208 0
c Implicit declarations:
c 100000711 a 210 15 -208 0
c 100000712 a -210 -15 0
c 100000713 a -210 208 0
c S211 = OR(P209, P210)
100000714 s 211 209 210 100000705 100000712 0
c Implicit declarations:
c 100000714 a -211 209 210 0
c 100000715 a 211 -209 0
c 100000716 a 211 -210 0
c P212 = AND(var-12, -var-11, -var-13, -var-14, -var-15, -var-17, S149)
100000717 p 212 12 -11 -13 -14 -15 -17 149 0
c Implicit declarations:
c 100000717 a 212 -12 11 13 14 15 17 -149 0
c 100000718 a -212 12 0
c 100000719 a -212 -11 0
c 100000720 a -212 -13 0
c 100000721 a -212 -14 0
c 100000722 a -212 -15 0
c 100000723 a -212 -17 0
c 100000724 a -212 149 0
c P213 = AND(-var-12, S211)
100000725 p 213 -12 211 0
c Implicit declarations:
c 100000725 a 213 12 -211 0
c 100000726 a -213 -12 0
c 100000727 a -213 211 0
c S214 = OR(P212, P213)
100000728 s 214 212 213 100000718 100000726 0
c Implicit declarations:
c 100000728 a -214 212 213 0
c 100000729 a 214 -212 0
c 100000730 a 214 -213 0
c P216 = AND(var-19, -var-16, -var-17, -var-20, S49)
100000731 p 216 19 -16 -17 -20 49 0
c Implicit declarations:
c 100000731 a 216 -19 16 17 20 -49 0
c 100000732 a -216 19 0
c 100000733 a -216 -16 0
c 100000734 a -216 -17 0
c 100000735 a -216 -20 0
c 100000736 a -216 49 0
c P217 = AND(-var-19, -var-3, S214)
100000737 p 217 -19 -3 214 0
c Implicit declarations:
c 100000737 a 217 19 3 -214 0
c 100000738 a -217 -19 0
c 100000739 a -217 -3 0
c 100000740 a -217 214 0
c S218 = OR(P216, P217)
100000741 s 218 216 217 100000732 100000738 0
c Implicit declarations:
c 100000741 a -218 216 217 0
c 100000742 a 218 -216 0
c 100000743 a 218 -217 0
c P224 = AND(var-5, -var-2, -var-3, var-8, -var-9, -var-10)
100000744 p 224 5 -2 -3 8 -9 -10 0
c Implicit declarations:
c 100000744 a 224 -5 2 3 -8 9 10 0
c 100000745 a -224 5 0
c 100000746 a -224 -2 0
c 100000747 a -224 -3 0
c 100000748 a -224 8 0
c 100000749 a -224 -9 0
c 100000750 a -224 -10 0
c P225 = AND(-var-5, -var-2, var-3, -var-8, -var-9, var-10)
100000751 p 225 -5 -2 3 -8 -9 10 0
c Implicit declarations:
c 100000751 a 225 5 2 -3 8 9 -10 0
c 100000752 a -225 -5 0
c 100000753 a -225 -2 0
c 100000754 a -225 3 0
c 100000755 a -225 -8 0
c 100000756 a -225 -9 0
c 100000757 a -225 10 0
c S226 = OR(P224, P225)
100000758 s 226 224 225 100000745 100000752 0
c Implicit declarations:
c 100000758 a -226 224 225 0
c 100000759 a 226 -224 0
c 100000760 a 226 -225 0
c P228 = AND(var-6, -var-2, var-3, -var-4, -var-5, -var-7, -var-8, -var-9, -var-10, -var-16, -var-17, var-20)
100000761 p 228 6 -2 3 -4 -5 -7 -8 -9 -10 -16 -17 20 0
c Implicit declarations:
c 100000761 a 228 -6 2 -3 4 5 7 8 9 10 16 17 -20 0
c 100000762 a -228 6 0
c 100000763 a -228 -2 0
c 100000764 a -228 3 0
c 100000765 a -228 -4 0
c 100000766 a -228 -5 0
c 100000767 a -228 -7 0
c 100000768 a -228 -8 0
c 100000769 a -228 -9 0
c 100000770 a -228 -10 0
c 100000771 a -228 -16 0
c 100000772 a -228 -17 0
c 100000773 a -228 20 0
c P229 = AND(-var-6, -var-4, -var-7, var-16, -var-17, -var-20, S226)
100000774 p 229 -6 -4 -7 16 -17 -20 226 0
c Implicit declarations:
c 100000774 a 229 6 4 7 -16 17 20 -226 0
c 100000775 a -229 -6 0
c 100000776 a -229 -4 0
c 100000777 a -229 -7 0
c 100000778 a -229 16 0
c 100000779 a -229 -17 0
c 100000780 a -229 -20 0
c 100000781 a -229 226 0
c S230 = OR(P228, P229)
100000782 s 230 228 229 100000762 100000775 0
c Implicit declarations:
c 100000782 a -230 228 229 0
c 100000783 a 230 -228 0
c 100000784 a 230 -229 0
c P231 = AND(var-1, -var-2, -var-3, -var-4, -var-5, -var-6, -var-7, var-8, -var-9, -var-10, -var-16, -var-17, var-20)
100000785 p 231 1 -2 -3 -4 -5 -6 -7 8 -9 -10 -16 -17 20 0
c Implicit declarations:
c 100000785 a 231 -1 2 3 4 5 6 7 -8 9 10 16 17 -20 0
c 100000786 a -231 1 0
c 100000787 a -231 -2 0
c 100000788 a -231 -3 0
c 100000789 a -231 -4 0
c 100000790 a -231 -5 0
c 100000791 a -231 -6 0
c 100000792 a -231 -7 0
c 100000793 a -231 8 0
c 100000794 a -231 -9 0
c 100000795 a -231 -10 0
c 100000796 a -231 -16 0
c 100000797 a -231 -17 0
c 100000798 a -231 20 0
c P232 = AND(-var-1, S230)
100000799 p 232 -1 230 0
c Implicit declarations:
c 100000799 a 232 1 -230 0
c 100000800 a -232 -1 0
c 100000801 a -232 230 0
c S233 = OR(P231, P232)
100000802 s 233 231 232 100000786 100000800 0
c Implicit declarations:
c 100000802 a -233 231 232 0
c 100000803 a 233 -231 0
c 100000804 a 233 -232 0
c P239 = AND(var-6, -var-2, var-3, -var-4, -var-5, -var-7, -var-8, -var-9, -var-10, -var-21, -var-22, var-25)
100000805 p 239 6 -2 3 -4 -5 -7 -8 -9 -10 -21 -22 25 0
c Implicit declarations:
c 100000805 a 239 -6 2 -3 4 5 7 8 9 10 21 22 -25 0
c 100000806 a -239 6 0
c 100000807 a -239 -2 0
c 100000808 a -239 3 0
c 100000809 a -239 -4 0
c 100000810 a -239 -5 0
c 100000811 a -239 -7 0
c 100000812 a -239 -8 0
c 100000813 a -239 -9 0
c 100000814 a -239 -10 0
c 100000815 a -239 -21 0
c 100000816 a -239 -22 0
c 100000817 a -239 25 0
c P240 = AND(-var-6, -var-4, -var-7, var-21, -var-22, -var-25, S226)
100000818 p 240 -6 -4 -7 21 -22 -25 226 0
c Implicit declarations:
c 100000818 a 240 6 4 7 -21 22 25 -226 0
c 100000819 a -240 -6 0
c 100000820 a -240 -4 0
c 100000821 a -240 -7 0
c 100000822 a -240 21 0
c 100000823 a -240 -22 0
c 100000824 a -240 -25 0
c 100000825 a -240 226 0
c S241 = OR(P239, P240)
100000826 s 241 239 240 100000806 100000819 0
c Implicit declarations:
c 100000826 a -241 239 240 0
c 100000827 a 241 -239 0
c 100000828 a 241 -240 0
c P242 = AND(var-1, -var-2, -var-3, -var-4, -var-5, -var-6, -var-7, var-8, -var-9, -var-10, -var-21, -var-22, var-25)
100000829 p 242 1 -2 -3 -4 -5 -6 -7 8 -9 -10 -21 -22 25 0
c Implicit declarations:
c 100000829 a 242 -1 2 3 4 5 6 7 -8 9 10 21 22 -25 0
c 100000830 a -242 1 0
c 100000831 a -242 -2 0
c 100000832 a -242 -3 0
c 100000833 a -242 -4 0
c 100000834 a -242 -5 0
c 100000835 a -242 -6 0
c 100000836 a -242 -7 0
c 100000837 a -242 8 0
c 100000838 a -242 -9 0
c 100000839 a -242 -10 0
c 100000840 a -242 -21 0
c 100000841 a -242 -22 0
c 100000842 a -242 25 0
c P243 = AND(-var-1, S241)
100000843 p 243 -1 241 0
c Implicit declarations:
c 100000843 a 243 1 -241 0
c 100000844 a -243 -1 0
c 100000845 a -243 241 0
c S244 = OR(P242, P243)
100000846 s 244 242 243 100000830 100000844 0
c Implicit declarations:
c 100000846 a -244 242 243 0
c 100000847 a 244 -242 0
c 100000848 a 244 -243 0
c P248 = AND(var-4, -var-3, var-8, -var-9)
100000849 p 248 4 -3 8 -9 0
c Implicit declarations:
c 100000849 a 248 -4 3 -8 9 0
c 100000850 a -248 4 0
c 100000851 a -248 -3 0
c 100000852 a -248 8 0
c 100000853 a -248 -9 0
c P249 = AND(-var-4, var-3, -var-8, var-9)
100000854 p 249 -4 3 -8 9 0
c Implicit declarations:
c 100000854 a 249 4 -3 8 -9 0
c 100000855 a -249 -4 0
c 100000856 a -249 3 0
c 100000857 a -249 -8 0
c 100000858 a -249 9 0
c S250 = OR(P248, P249)
100000859 s 250 248 249 100000850 100000855 0
c Implicit declarations:
c 100000859 a -250 248 249 0
c 100000860 a 250 -248 0
c 100000861 a 250 -249 0
c P254 = AND(var-25, var-16, -var-20, -var-21)
100000862 p 254 25 16 -20 -21 0
c Implicit declarations:
c 100000862 a 254 -25 -16 20 21 0
c 100000863 a -254 25 0
c 100000864 a -254 16 0
c 100000865 a -254 -20 0
c 100000866 a -254 -21 0
c P255 = AND(-var-25, -var-16, var-20, var-21)
100000867 p 255 -25 -16 20 21 0
c Implicit declarations:
c 100000867 a 255 25 16 -20 -21 0
c 100000868 a -255 -25 0
c 100000869 a -255 -16 0
c 100000870 a -255 20 0
c 100000871 a -255 21 0
c S256 = OR(P254, P255)
100000872 s 256 254 255 100000863 100000868 0
c Implicit declarations:
c 100000872 a -256 254 255 0
c 100000873 a 256 -254 0
c 100000874 a 256 -255 0
c P265 = AND(var-19, -var-16, -var-17, -var-20, S244)
100000875 p 265 19 -16 -17 -20 244 0
c Implicit declarations:
c 100000875 a 265 -19 16 17 20 -244 0
c 100000876 a -265 19 0
c 100000877 a -265 -16 0
c 100000878 a -265 -17 0
c 100000879 a -265 -20 0
c 100000880 a -265 244 0
c P266 = AND(-var-19, -var-5, -var-1, -var-6, -var-7, -var-10, -var-2, S250, -var-17, -var-22, S256)
100000881 p 266 -19 -5 -1 -6 -7 -10 -2 250 -17 -22 256 0
c Implicit declarations:
c 100000881 a 266 19 5 1 6 7 10 2 -250 17 22 -256 0
c 100000882 a -266 -19 0
c 100000883 a -266 -5 0
c 100000884 a -266 -1 0
c 100000885 a -266 -6 0
c 100000886 a -266 -7 0
c 100000887 a -266 -10 0
c 100000888 a -266 -2 0
c 100000889 a -266 250 0
c 100000890 a -266 -17 0
c 100000891 a -266 -22 0
c 100000892 a -266 256 0
c S267 = OR(P265, P266)
100000893 s 267 265 266 100000876 100000882 0
c Implicit declarations:
c 100000893 a -267 265 266 0
c 100000894 a 267 -265 0
c 100000895 a 267 -266 0
c P268 = AND(var-24, -var-21, -var-22, -var-25, -var-19, S233)
100000896 p 268 24 -21 -22 -25 -19 233 0
c Implicit declarations:
c 100000896 a 268 -24 21 22 25 19 -233 0
c 100000897 a -268 24 0
c 100000898 a -268 -21 0
c 100000899 a -268 -22 0
c 100000900 a -268 -25 0
c 100000901 a -268 -19 0
c 100000902 a -268 233 0
c P269 = AND(-var-24, S267)
100000903 p 269 -24 267 0
c Implicit declarations:
c 100000903 a 269 24 -267 0
c 100000904 a -269 -24 0
c 100000905 a -269 267 0
c S270 = OR(P268, P269)
100000906 s 270 268 269 100000897 100000904 0
c Implicit declarations:
c 100000906 a -270 268 269 0
c 100000907 a 270 -268 0
c 100000908 a 270 -269 0
c P275 = AND(var-7, -var-8, -var-9, -var-10, -var-11, var-13, -var-14, var-21, -var-22, -var-25)
100000909 p 275 7 -8 -9 -10 -11 13 -14 21 -22 -25 0
c Implicit declarations:
c 100000909 a 275 -7 8 9 10 11 -13 14 -21 22 25 0
c 100000910 a -275 7 0
c 100000911 a -275 -8 0
c 100000912 a -275 -9 0
c 100000913 a -275 -10 0
c 100000914 a -275 -11 0
c 100000915 a -275 13 0
c 100000916 a -275 -14 0
c 100000917 a -275 21 0
c 100000918 a -275 -22 0
c 100000919 a -275 -25 0
c P276 = AND(-var-7, var-8, -var-9, -var-10, var-11, -var-13, -var-14, -var-21, var-22, -var-25)
100000920 p 276 -7 8 -9 -10 11 -13 -14 -21 22 -25 0
c Implicit declarations:
c 100000920 a 276 7 -8 9 10 -11 13 14 21 -22 25 0
c 100000921 a -276 -7 0
c 100000922 a -276 8 0
c 100000923 a -276 -9 0
c 100000924 a -276 -10 0
c 100000925 a -276 11 0
c 100000926 a -276 -13 0
c 100000927 a -276 -14 0
c 100000928 a -276 -21 0
c 100000929 a -276 22 0
c 100000930 a -276 -25 0
c S277 = OR(P275, P276)
100000931 s 277 275 276 100000910 100000921 0
c Implicit declarations:
c 100000931 a -277 275 276 0
c 100000932 a 277 -275 0
c 100000933 a 277 -276 0
c P279 = AND(var-6, -var-7, -var-8, -var-9, -var-10, -var-11, var-13, -var-14, -var-15, -var-21, var-22, -var-25)
100000934 p 279 6 -7 -8 -9 -10 -11 13 -14 -15 -21 22 -25 0
c Implicit declarations:
c 100000934 a 279 -6 7 8 9 10 11 -13 14 15 21 -22 25 0
c 100000935 a -279 6 0
c 100000936 a -279 -7 0
c 100000937 a -279 -8 0
c 100000938 a -279 -9 0
c 100000939 a -279 -10 0
c 100000940 a -279 -11 0
c 100000941 a -279 13 0
c 100000942 a -279 -14 0
c 100000943 a -279 -15 0
c 100000944 a -279 -21 0
c 100000945 a -279 22 0
c 100000946 a -279 -25 0
c P280 = AND(-var-6, -var-15, S277)
100000947 p 280 -6 -15 277 0
c Implicit declarations:
c 100000947 a 280 6 15 -277 0
c 100000948 a -280 -6 0
c 100000949 a -280 -15 0
c 100000950 a -280 277 0
c S281 = OR(P279, P280)
100000951 s 281 279 280 100000935 100000948 0
c Implicit declarations:
c 100000951 a -281 279 280 0
c 100000952 a 281 -279 0
c 100000953 a 281 -280 0
c P287 = AND(var-7, -var-2, var-3, -var-4, -var-8, -var-9, -var-10)
100000954 p 287 7 -2 3 -4 -8 -9 -10 0
c Implicit declarations:
c 100000954 a 287 -7 2 -3 4 8 9 10 0
c 100000955 a -287 7 0
c 100000956 a -287 -2 0
c 100000957 a -287 3 0
c 100000958 a -287 -4 0
c 100000959 a -287 -8 0
c 100000960 a -287 -9 0
c 100000961 a -287 -10 0
c P288 = AND(-var-7, var-2, -var-3, -var-4, var-8, -var-9, -var-10)
100000962 p 288 -7 2 -3 -4 8 -9 -10 0
c Implicit declarations:
c 100000962 a 288 7 -2 3 4 -8 9 10 0
c 100000963 a -288 -7 0
c 100000964 a -288 2 0
c 100000965 a -288 -3 0
c 100000966 a -288 -4 0
c 100000967 a -288 8 0
c 100000968 a -288 -9 0
c 100000969 a -288 -10 0
c S289 = OR(P287, P288)
100000970 s 289 287 288 100000955 100000963 0
c Implicit declarations:
c 100000970 a -289 287 288 0
c 100000971 a 289 -287 0
c 100000972 a 289 -288 0
c P291 = AND(var-1, -var-2, -var-3, -var-4, -var-7, var-8, -var-9, -var-10, -var-21, var-22, -var-25)
100000973 p 291 1 -2 -3 -4 -7 8 -9 -10 -21 22 -25 0
c Implicit declarations:
c 100000973 a 291 -1 2 3 4 7 -8 9 10 21 -22 25 0
c 100000974 a -291 1 0
c 100000975 a -291 -2 0
c 100000976 a -291 -3 0
c 100000977 a -291 -4 0
c 100000978 a -291 -7 0
c 100000979 a -291 8 0
c 100000980 a -291 -9 0
c 100000981 a -291 -10 0
c 100000982 a -291 -21 0
c 100000983 a -291 22 0
c 100000984 a -291 -25 0
c P292 = AND(-var-1, var-21, -var-22, -var-25, S289)
100000985 p 292 -1 21 -22 -25 289 0
c Implicit declarations:
c 100000985 a 292 1 -21 22 25 -289 0
c 100000986 a -292 -1 0
c 100000987 a -292 21 0
c 100000988 a -292 -22 0
c 100000989 a -292 -25 0
c 100000990 a -292 289 0
c S293 = OR(P291, P292)
100000991 s 293 291 292 100000974 100000986 0
c Implicit declarations:
c 100000991 a -293 291 292 0
c 100000992 a 293 -291 0
c 100000993 a 293 -292 0
c P294 = AND(var-6, -var-1, -var-2, var-3, -var-4, -var-7, -var-8, -var-9, -var-10, -var-21, var-22, -var-25)
100000994 p 294 6 -1 -2 3 -4 -7 -8 -9 -10 -21 22 -25 0
c Implicit declarations:
c 100000994 a 294 -6 1 2 -3 4 7 8 9 10 21 -22 25 0
c 100000995 a -294 6 0
c 100000996 a -294 -1 0
c 100000997 a -294 -2 0
c 100000998 a -294 3 0
c 100000999 a -294 -4 0
c 100001000 a -294 -7 0
c 100001001 a -294 -8 0
c 100001002 a -294 -9 0
c 100001003 a -294 -10 0
c 100001004 a -294 -21 0
c 100001005 a -294 22 0
c 100001006 a -294 -25 0
c P295 = AND(-var-6, S293)
100001007 p 295 -6 293 0
c Implicit declarations:
c 100001007 a 295 6 -293 0
c 100001008 a -295 -6 0
c 100001009 a -295 293 0
c S296 = OR(P294, P295)
100001010 s 296 294 295 100000995 100001008 0
c Implicit declarations:
c 100001010 a -296 294 295 0
c 100001011 a 296 -294 0
c 100001012 a 296 -295 0
c P301 = AND(var-2, -var-3, -var-4, -var-11, var-13, -var-14, var-21, -var-22, -var-25)
100001013 p 301 2 -3 -4 -11 13 -14 21 -22 -25 0
c Implicit declarations:
c 100001013 a 301 -2 3 4 11 -13 14 -21 22 25 0
c 100001014 a -301 2 0
c 100001015 a -301 -3 0
c 100001016 a -301 -4 0
c 100001017 a -301 -11 0
c 100001018 a -301 13 0
c 100001019 a -301 -14 0
c 100001020 a -301 21 0
c 100001021 a -301 -22 0
c 100001022 a -301 -25 0
c P302 = AND(-var-2, var-3, -var-4, var-11, -var-13, -var-14, -var-21, var-22, -var-25)
100001023 p 302 -2 3 -4 11 -13 -14 -21 22 -25 0
c Implicit declarations:
c 100001023 a 302 2 -3 4 -11 13 14 21 -22 25 0
c 100001024 a -302 -2 0
c 100001025 a -302 3 0
c 100001026 a -302 -4 0
c 100001027 a -302 11 0
c 100001028 a -302 -13 0
c 100001029 a -302 -14 0
c 100001030 a -302 -21 0
c 100001031 a -302 22 0
c 100001032 a -302 -25 0
c S303 = OR(P301, P302)
100001033 s 303 301 302 100001014 100001024 0
c Implicit declarations:
c 100001033 a -303 301 302 0
c 100001034 a 303 -301 0
c 100001035 a 303 -302 0
c P304 = AND(var-1, -var-2, -var-3, -var-4, -var-11, var-13, -var-14, -var-21, var-22, -var-25)
100001036 p 304 1 -2 -3 -4 -11 13 -14 -21 22 -25 0
c Implicit declarations:
c 100001036 a 304 -1 2 3 4 11 -13 14 21 -22 25 0
c 100001037 a -304 1 0
c 100001038 a -304 -2 0
c 100001039 a -304 -3 0
c 100001040 a -304 -4 0
c 100001041 a -304 -11 0
c 100001042 a -304 13 0
c 100001043 a -304 -14 0
c 100001044 a -304 -21 0
c 100001045 a -304 22 0
c 100001046 a -304 -25 0
c P305 = AND(-var-1, S303)
100001047 p 305 -1 303 0
c Implicit declarations:
c 100001047 a 305 1 -303 0
c 100001048 a -305 -1 0
c 100001049 a -305 303 0
c S306 = OR(P304, P305)
100001050 s 306 304 305 100001037 100001048 0
c Implicit declarations:
c 100001050 a -306 304 305 0
c 100001051 a 306 -304 0
c 100001052 a 306 -305 0
c P312 = AND(var-2, -var-3, -var-4, -var-7, var-8, -var-9)
100001053 p 312 2 -3 -4 -7 8 -9 0
c Implicit declarations:
c 100001053 a 312 -2 3 4 7 -8 9 0
c 100001054 a -312 2 0
c 100001055 a -312 -3 0
c 100001056 a -312 -4 0
c 100001057 a -312 -7 0
c 100001058 a -312 8 0
c 100001059 a -312 -9 0
c P313 = AND(-var-2, var-3, -var-4, var-7, -var-8, -var-9)
100001060 p 313 -2 3 -4 7 -8 -9 0
c Implicit declarations:
c 100001060 a 313 2 -3 4 -7 8 9 0
c 100001061 a -313 -2 0
c 100001062 a -313 3 0
c 100001063 a -313 -4 0
c 100001064 a -313 7 0
c 100001065 a -313 -8 0
c 100001066 a -313 -9 0
c S314 = OR(P312, P313)
100001067 s 314 312 313 100001054 100001061 0
c Implicit declarations:
c 100001067 a -314 312 313 0
c 100001068 a 314 -312 0
c 100001069 a 314 -313 0
c P316 = AND(var-6, var-2, -var-3, -var-4, -var-7, -var-8, -var-9, -var-11, var-13, -var-14)
100001070 p 316 6 2 -3 -4 -7 -8 -9 -11 13 -14 0
c Implicit declarations:
c 100001070 a 316 -6 -2 3 4 7 8 9 11 -13 14 0
c 100001071 a -316 6 0
c 100001072 a -316 2 0
c 100001073 a -316 -3 0
c 100001074 a -316 -4 0
c 100001075 a -316 -7 0
c 100001076 a -316 -8 0
c 100001077 a -316 -9 0
c 100001078 a -316 -11 0
c 100001079 a -316 13 0
c 100001080 a -316 -14 0
c P317 = AND(-var-6, var-11, -var-13, -var-14, S314)
100001081 p 317 -6 11 -13 -14 314 0
c Implicit declarations:
c 100001081 a 317 6 -11 13 14 -314 0
c 100001082 a -317 -6 0
c 100001083 a -317 11 0
c 100001084 a -317 -13 0
c 100001085 a -317 -14 0
c 100001086 a -317 314 0
c S318 = OR(P316, P317)
100001087 s 318 316 317 100001071 100001082 0
c Implicit declarations:
c 100001087 a -318 316 317 0
c 100001088 a 318 -316 0
c 100001089 a 318 -317 0
c P319 = AND(var-1, -var-2, -var-3, -var-4, -var-6, var-7, -var-8, -var-9, -var-11, var-13, -var-14)
100001090 p 319 1 -2 -3 -4 -6 7 -8 -9 -11 13 -14 0
c Implicit declarations:
c 100001090 a 319 -1 2 3 4 6 -7 8 9 11 -13 14 0
c 100001091 a -319 1 0
c 100001092 a -319 -2 0
c 100001093 a -319 -3 0
c 100001094 a -319 -4 0
c 100001095 a -319 -6 0
c 100001096 a -319 7 0
c 100001097 a -319 -8 0
c 100001098 a -319 -9 0
c 100001099 a -319 -11 0
c 100001100 a -319 13 0
c 100001101 a -319 -14 0
c P320 = AND(-var-1, S318)
100001102 p 320 -1 318 0
c Implicit declarations:
c 100001102 a 320 1 -318 0
c 100001103 a -320 -1 0
c 100001104 a -320 318 0
c S321 = OR(P319, P320)
100001105 s 321 319 320 100001091 100001103 0
c Implicit declarations:
c 100001105 a -321 319 320 0
c 100001106 a 321 -319 0
c 100001107 a 321 -320 0
c P323 = AND(var-10, -var-6, -var-7, -var-8, -var-9, S306)
100001108 p 323 10 -6 -7 -8 -9 306 0
c Implicit declarations:
c 100001108 a 323 -10 6 7 8 9 -306 0
c 100001109 a -323 10 0
c 100001110 a -323 -6 0
c 100001111 a -323 -7 0
c 100001112 a -323 -8 0
c 100001113 a -323 -9 0
c 100001114 a -323 306 0
c P324 = AND(-var-10, -var-21, -var-22, var-25, S321)
100001115 p 324 -10 -21 -22 25 321 0
c Implicit declarations:
c 100001115 a 324 10 21 22 -25 -321 0
c 100001116 a -324 -10 0
c 100001117 a -324 -21 0
c 100001118 a -324 -22 0
c 100001119 a -324 25 0
c 100001120 a -324 321 0
c S325 = OR(P323, P324)
100001121 s 325 323 324 100001109 100001116 0
c Implicit declarations:
c 100001121 a -325 323 324 0
c 100001122 a 325 -323 0
c 100001123 a 325 -324 0
c P326 = AND(var-15, -var-11, -var-13, -var-14, S296)
100001124 p 326 15 -11 -13 -14 296 0
c Implicit declarations:
c 100001124 a 326 -15 11 13 14 -296 0
c 100001125 a -326 15 0
c 100001126 a -326 -11 0
c 100001127 a -326 -13 0
c 100001128 a -326 -14 0
c 100001129 a -326 296 0
c P327 = AND(-var-15, S325)
100001130 p 327 -15 325 0
c Implicit declarations:
c 100001130 a 327 15 -325 0
c 100001131 a -327 -15 0
c 100001132 a -327 325 0
c S328 = OR(P326, P327)
100001133 s 328 326 327 100001125 100001131 0
c Implicit declarations:
c 100001133 a -328 326 327 0
c 100001134 a 328 -326 0
c 100001135 a 328 -327 0
c P329 = AND(var-5, -var-1, -var-2, -var-3, -var-4, S281)
100001136 p 329 5 -1 -2 -3 -4 281 0
c Implicit declarations:
c 100001136 a 329 -5 1 2 3 4 -281 0
c 100001137 a -329 5 0
c 100001138 a -329 -1 0
c 100001139 a -329 -2 0
c 100001140 a -329 -3 0
c 100001141 a -329 -4 0
c 100001142 a -329 281 0
c P330 = AND(-var-5, S328)
100001143 p 330 -5 328 0
c Implicit declarations:
c 100001143 a 330 5 -328 0
c 100001144 a -330 -5 0
c 100001145 a -330 328 0
c S331 = OR(P329, P330)
100001146 s 331 329 330 100001137 100001144 0
c Implicit declarations:
c 100001146 a -331 329 330 0
c 100001147 a 331 -329 0
c 100001148 a 331 -330 0
c P337 = AND(var-10, -var-6, -var-7, -var-9, -var-16, var-17, -var-20)
100001149 p 337 10 -6 -7 -9 -16 17 -20 0
c Implicit declarations:
c 100001149 a 337 -10 6 7 9 16 -17 20 0
c 100001150 a -337 10 0
c 100001151 a -337 -6 0
c 100001152 a -337 -7 0
c 100001153 a -337 -9 0
c 100001154 a -337 -16 0
c 100001155 a -337 17 0
c 100001156 a -337 -20 0
c P338 = AND(-var-10, -var-6, var-7, -var-9, -var-16, -var-17, var-20)
100001157 p 338 -10 -6 7 -9 -16 -17 20 0
c Implicit declarations:
c 100001157 a 338 10 6 -7 9 16 17 -20 0
c 100001158 a -338 -10 0
c 100001159 a -338 -6 0
c 100001160 a -338 7 0
c 100001161 a -338 -9 0
c 100001162 a -338 -16 0
c 100001163 a -338 -17 0
c 100001164 a -338 20 0
c S339 = OR(P337, P338)
100001165 s 339 337 338 100001150 100001158 0
c Implicit declarations:
c 100001165 a -339 337 338 0
c 100001166 a 339 -337 0
c 100001167 a 339 -338 0
c P341 = AND(var-15, -var-6, -var-7, var-8, -var-9, -var-10, -var-11, -var-13, -var-14, -var-16, var-17, -var-20)
100001168 p 341 15 -6 -7 8 -9 -10 -11 -13 -14 -16 17 -20 0
c Implicit declarations:
c 100001168 a 341 -15 6 7 -8 9 10 11 13 14 16 -17 20 0
c 100001169 a -341 15 0
c 100001170 a -341 -6 0
c 100001171 a -341 -7 0
c 100001172 a -341 8 0
c 100001173 a -341 -9 0
c 100001174 a -341 -10 0
c 100001175 a -341 -11 0
c 100001176 a -341 -13 0
c 100001177 a -341 -14 0
c 100001178 a -341 -16 0
c 100001179 a -341 17 0
c 100001180 a -341 -20 0
c P342 = AND(-var-15, -var-8, -var-11, var-13, -var-14, S339)
100001181 p 342 -15 -8 -11 13 -14 339 0
c Implicit declarations:
c 100001181 a 342 15 8 11 -13 14 -339 0
c 100001182 a -342 -15 0
c 100001183 a -342 -8 0
c 100001184 a -342 -11 0
c 100001185 a -342 13 0
c 100001186 a -342 -14 0
c 100001187 a -342 339 0
c S343 = OR(P341, P342)
100001188 s 343 341 342 100001169 100001182 0
c Implicit declarations:
c 100001188 a -343 341 342 0
c 100001189 a 343 -341 0
c 100001190 a 343 -342 0
c P348 = AND(var-5, -var-2, -var-4, -var-16, var-17, -var-20)
100001191 p 348 5 -2 -4 -16 17 -20 0
c Implicit declarations:
c 100001191 a 348 -5 2 4 16 -17 20 0
c 100001192 a -348 5 0
c 100001193 a -348 -2 0
c 100001194 a -348 -4 0
c 100001195 a -348 -16 0
c 100001196 a -348 17 0
c 100001197 a -348 -20 0
c P349 = AND(-var-5, var-2, -var-4, -var-16, -var-17, var-20)
100001198 p 349 -5 2 -4 -16 -17 20 0
c Implicit declarations:
c 100001198 a 349 5 -2 4 16 17 -20 0
c 100001199 a -349 -5 0
c 100001200 a -349 2 0
c 100001201 a -349 -4 0
c 100001202 a -349 -16 0
c 100001203 a -349 -17 0
c 100001204 a -349 20 0
c S350 = OR(P348, P349)
100001205 s 350 348 349 100001192 100001199 0
c Implicit declarations:
c 100001205 a -350 348 349 0
c 100001206 a 350 -348 0
c 100001207 a 350 -349 0
c P352 = AND(var-15, -var-2, var-3, -var-4, -var-5, -var-11, -var-13, -var-14, -var-16, var-17, -var-20)
100001208 p 352 15 -2 3 -4 -5 -11 -13 -14 -16 17 -20 0
c Implicit declarations:
c 100001208 a 352 -15 2 -3 4 5 11 13 14 16 -17 20 0
c 100001209 a -352 15 0
c 100001210 a -352 -2 0
c 100001211 a -352 3 0
c 100001212 a -352 -4 0
c 100001213 a -352 -5 0
c 100001214 a -352 -11 0
c 100001215 a -352 -13 0
c 100001216 a -352 -14 0
c 100001217 a -352 -16 0
c 100001218 a -352 17 0
c 100001219 a -352 -20 0
c P353 = AND(-var-15, -var-3, -var-11, var-13, -var-14, S350)
100001220 p 353 -15 -3 -11 13 -14 350 0
c Implicit declarations:
c 100001220 a 353 15 3 11 -13 14 -350 0
c 100001221 a -353 -15 0
c 100001222 a -353 -3 0
c 100001223 a -353 -11 0
c 100001224 a -353 13 0
c 100001225 a -353 -14 0
c 100001226 a -353 350 0
c S354 = OR(P352, P353)
100001227 s 354 352 353 100001209 100001221 0
c Implicit declarations:
c 100001227 a -354 352 353 0
c 100001228 a 354 -352 0
c 100001229 a 354 -353 0
c P359 = AND(var-10, -var-2, var-3, -var-4, -var-7, -var-8, -var-9, -var-16, var-17, -var-20)
100001230 p 359 10 -2 3 -4 -7 -8 -9 -16 17 -20 0
c Implicit declarations:
c 100001230 a 359 -10 2 -3 4 7 8 9 16 -17 20 0
c 100001231 a -359 10 0
c 100001232 a -359 -2 0
c 100001233 a -359 3 0
c 100001234 a -359 -4 0
c 100001235 a -359 -7 0
c 100001236 a -359 -8 0
c 100001237 a -359 -9 0
c 100001238 a -359 -16 0
c 100001239 a -359 17 0
c 100001240 a -359 -20 0
c P360 = AND(-var-10, -var-16, -var-17, var-20, S314)
100001241 p 360 -10 -16 -17 20 314 0
c Implicit declarations:
c 100001241 a 360 10 16 17 -20 -314 0
c 100001242 a -360 -10 0
c 100001243 a -360 -16 0
c 100001244 a -360 -17 0
c 100001245 a -360 20 0
c 100001246 a -360 314 0
c S361 = OR(P359, P360)
100001247 s 361 359 360 100001231 100001242 0
c Implicit declarations:
c 100001247 a -361 359 360 0
c 100001248 a 361 -359 0
c 100001249 a 361 -360 0
c P362 = AND(var-5, -var-2, -var-3, -var-4, -var-7, var-8, -var-9, -var-10, -var-16, var-17, -var-20)
100001250 p 362 5 -2 -3 -4 -7 8 -9 -10 -16 17 -20 0
c Implicit declarations:
c 100001250 a 362 -5 2 3 4 7 -8 9 10 16 -17 20 0
c 100001251 a -362 5 0
c 100001252 a -362 -2 0
c 100001253 a -362 -3 0
c 100001254 a -362 -4 0
c 100001255 a -362 -7 0
c 100001256 a -362 8 0
c 100001257 a -362 -9 0
c 100001258 a -362 -10 0
c 100001259 a -362 -16 0
c 100001260 a -362 17 0
c 100001261 a -362 -20 0
c P363 = AND(-var-5, S361)
100001262 p 363 -5 361 0
c Implicit declarations:
c 100001262 a 363 5 -361 0
c 100001263 a -363 -5 0
c 100001264 a -363 361 0
c S364 = OR(P362, P363)
100001265 s 364 362 363 100001251 100001263 0
c Implicit declarations:
c 100001265 a -364 362 363 0
c 100001266 a 364 -362 0
c 100001267 a 364 -363 0
c P369 = AND(var-10, var-2, -var-3, -var-4, -var-7, -var-8, -var-9, var-13, -var-15)
100001268 p 369 10 2 -3 -4 -7 -8 -9 13 -15 0
c Implicit declarations:
c 100001268 a 369 -10 -2 3 4 7 8 9 -13 15 0
c 100001269 a -369 10 0
c 100001270 a -369 2 0
c 100001271 a -369 -3 0
c 100001272 a -369 -4 0
c 100001273 a -369 -7 0
c 100001274 a -369 -8 0
c 100001275 a -369 -9 0
c 100001276 a -369 13 0
c 100001277 a -369 -15 0
c P370 = AND(-var-10, -var-13, var-15, S314)
100001278 p 370 -10 -13 15 314 0
c Implicit declarations:
c 100001278 a 370 10 13 -15 -314 0
c 100001279 a -370 -10 0
c 100001280 a -370 -13 0
c 100001281 a -370 15 0
c 100001282 a -370 314 0
c S371 = OR(P369, P370)
100001283 s 371 369 370 100001269 100001279 0
c Implicit declarations:
c 100001283 a -371 369 370 0
c 100001284 a 371 -369 0
c 100001285 a 371 -370 0
c P372 = AND(var-5, -var-2, -var-3, -var-4, var-7, -var-8, -var-9, -var-10, var-13, -var-15)
100001286 p 372 5 -2 -3 -4 7 -8 -9 -10 13 -15 0
c Implicit declarations:
c 100001286 a 372 -5 2 3 4 -7 8 9 10 -13 15 0
c 100001287 a -372 5 0
c 100001288 a -372 -2 0
c 100001289 a -372 -3 0
c 100001290 a -372 -4 0
c 100001291 a -372 7 0
c 100001292 a -372 -8 0
c 100001293 a -372 -9 0
c 100001294 a -372 -10 0
c 100001295 a -372 13 0
c 100001296 a -372 -15 0
c P373 = AND(-var-5, S371)
100001297 p 373 -5 371 0
c Implicit declarations:
c 100001297 a 373 5 -371 0
c 100001298 a -373 -5 0
c 100001299 a -373 371 0
c S374 = OR(P372, P373)
100001300 s 374 372 373 100001287 100001298 0
c Implicit declarations:
c 100001300 a -374 372 373 0
c 100001301 a 374 -372 0
c 100001302 a 374 -373 0
c P376 = AND(var-11, -var-13, -var-14, -var-15, S364)
100001303 p 376 11 -13 -14 -15 364 0
c Implicit declarations:
c 100001303 a 376 -11 13 14 15 -364 0
c 100001304 a -376 11 0
c 100001305 a -376 -13 0
c 100001306 a -376 -14 0
c 100001307 a -376 -15 0
c 100001308 a -376 364 0
c P377 = AND(-var-11, -var-14, var-16, -var-17, -var-20, S374)
100001309 p 377 -11 -14 16 -17 -20 374 0
c Implicit declarations:
c 100001309 a 377 11 14 -16 17 20 -374 0
c 100001310 a -377 -11 0
c 100001311 a -377 -14 0
c 100001312 a -377 16 0
c 100001313 a -377 -17 0
c 100001314 a -377 -20 0
c 100001315 a -377 374 0
c S378 = OR(P376, P377)
100001316 s 378 376 377 100001304 100001310 0
c Implicit declarations:
c 100001316 a -378 376 377 0
c 100001317 a 378 -376 0
c 100001318 a 378 -377 0
c P379 = AND(var-6, -var-7, -var-8, -var-9, -var-10, S354)
100001319 p 379 6 -7 -8 -9 -10 354 0
c Implicit declarations:
c 100001319 a 379 -6 7 8 9 10 -354 0
c 100001320 a -379 6 0
c 100001321 a -379 -7 0
c 100001322 a -379 -8 0
c 100001323 a -379 -9 0
c 100001324 a -379 -10 0
c 100001325 a -379 354 0
c P380 = AND(-var-6, S378)
100001326 p 380 -6 378 0
c Implicit declarations:
c 100001326 a 380 6 -378 0
c 100001327 a -380 -6 0
c 100001328 a -380 378 0
c S381 = OR(P379, P380)
100001329 s 381 379 380 100001320 100001327 0
c Implicit declarations:
c 100001329 a -381 379 380 0
c 100001330 a 381 -379 0
c 100001331 a 381 -380 0
c P382 = AND(var-1, -var-2, -var-3, -var-4, -var-5, S343)
100001332 p 382 1 -2 -3 -4 -5 343 0
c Implicit declarations:
c 100001332 a 382 -1 2 3 4 5 -343 0
c 100001333 a -382 1 0
c 100001334 a -382 -2 0
c 100001335 a -382 -3 0
c 100001336 a -382 -4 0
c 100001337 a -382 -5 0
c 100001338 a -382 343 0
c P383 = AND(-var-1, S381)
100001339 p 383 -1 381 0
c Implicit declarations:
c 100001339 a 383 1 -381 0
c 100001340 a -383 -1 0
c 100001341 a -383 381 0
c S384 = OR(P382, P383)
100001342 s 384 382 383 100001333 100001340 0
c Implicit declarations:
c 100001342 a -384 382 383 0
c 100001343 a 384 -382 0
c 100001344 a 384 -383 0
c P388 = AND(var-13, -var-3, var-4, -var-14)
100001345 p 388 13 -3 4 -14 0
c Implicit declarations:
c 100001345 a 388 -13 3 -4 14 0
c 100001346 a -388 13 0
c 100001347 a -388 -3 0
c 100001348 a -388 4 0
c 100001349 a -388 -14 0
c P389 = AND(-var-13, var-3, -var-4, var-14)
100001350 p 389 -13 3 -4 14 0
c Implicit declarations:
c 100001350 a 389 13 -3 4 -14 0
c 100001351 a -389 -13 0
c 100001352 a -389 3 0
c 100001353 a -389 -4 0
c 100001354 a -389 14 0
c S390 = OR(P388, P389)
100001355 s 390 388 389 100001346 100001351 0
c Implicit declarations:
c 100001355 a -390 388 389 0
c 100001356 a 390 -388 0
c 100001357 a 390 -389 0
c P393 = AND(var-17, -var-16, -var-20, -var-21, -var-22, var-25)
100001358 p 393 17 -16 -20 -21 -22 25 0
c Implicit declarations:
c 100001358 a 393 -17 16 20 21 22 -25 0
c 100001359 a -393 17 0
c 100001360 a -393 -16 0
c 100001361 a -393 -20 0
c 100001362 a -393 -21 0
c 100001363 a -393 -22 0
c 100001364 a -393 25 0
c P394 = AND(-var-17, -var-16, var-20, -var-21, var-22, -var-25)
100001365 p 394 -17 -16 20 -21 22 -25 0
c Implicit declarations:
c 100001365 a 394 17 16 -20 21 -22 25 0
c 100001366 a -394 -17 0
c 100001367 a -394 -16 0
c 100001368 a -394 20 0
c 100001369 a -394 -21 0
c 100001370 a -394 22 0
c 100001371 a -394 -25 0
c S395 = OR(P393, P394)
100001372 s 395 393 394 100001359 100001366 0
c Implicit declarations:
c 100001372 a -395 393 394 0
c 100001373 a 395 -393 0
c 100001374 a 395 -394 0
c P405 = AND(var-17, -var-16, -var-20, var-21, -var-22)
100001375 p 405 17 -16 -20 21 -22 0
c Implicit declarations:
c 100001375 a 405 -17 16 20 -21 22 0
c 100001376 a -405 17 0
c 100001377 a -405 -16 0
c 100001378 a -405 -20 0
c 100001379 a -405 21 0
c 100001380 a -405 -22 0
c P406 = AND(-var-17, var-16, -var-20, -var-21, var-22)
100001381 p 406 -17 16 -20 -21 22 0
c Implicit declarations:
c 100001381 a 406 17 -16 20 21 -22 0
c 100001382 a -406 -17 0
c 100001383 a -406 16 0
c 100001384 a -406 -20 0
c 100001385 a -406 -21 0
c 100001386 a -406 22 0
c S407 = OR(P405, P406)
100001387 s 407 405 406 100001376 100001382 0
c Implicit declarations:
c 100001387 a -407 405 406 0
c 100001388 a 407 -405 0
c 100001389 a 407 -406 0
c P415 = AND(var-13, -var-8, var-9, -var-14)
100001390 p 415 13 -8 9 -14 0
c Implicit declarations:
c 100001390 a 415 -13 8 -9 14 0
c 100001391 a -415 13 0
c 100001392 a -415 -8 0
c 100001393 a -415 9 0
c 100001394 a -415 -14 0
c P416 = AND(-var-13, var-8, -var-9, var-14)
100001395 p 416 -13 8 -9 14 0
c Implicit declarations:
c 100001395 a 416 13 -8 9 -14 0
c 100001396 a -416 -13 0
c 100001397 a -416 8 0
c 100001398 a -416 -9 0
c 100001399 a -416 14 0
c S417 = OR(P415, P416)
100001400 s 417 415 416 100001391 100001396 0
c Implicit declarations:
c 100001400 a -417 415 416 0
c 100001401 a 417 -415 0
c 100001402 a 417 -416 0
c P435 = AND(var-10, -var-8, -var-9, -var-11, -var-25, S390, S407)
100001403 p 435 10 -8 -9 -11 -25 390 407 0
c Implicit declarations:
c 100001403 a 435 -10 8 9 11 25 -390 -407 0
c 100001404 a -435 10 0
c 100001405 a -435 -8 0
c 100001406 a -435 -9 0
c 100001407 a -435 -11 0
c 100001408 a -435 -25 0
c 100001409 a -435 390 0
c 100001410 a -435 407 0
c P436 = AND(-var-10, var-11, -var-13, -var-14, S250, S395)
100001411 p 436 -10 11 -13 -14 250 395 0
c Implicit declarations:
c 100001411 a 436 10 -11 13 14 -250 -395 0
c 100001412 a -436 -10 0
c 100001413 a -436 11 0
c 100001414 a -436 -13 0
c 100001415 a -436 -14 0
c 100001416 a -436 250 0
c 100001417 a -436 395 0
c S437 = OR(P435, P436)
100001418 s 437 435 436 100001404 100001412 0
c Implicit declarations:
c 100001418 a -437 435 436 0
c 100001419 a 437 -435 0
c 100001420 a 437 -436 0
c P438 = AND(var-5, -var-3, -var-4, -var-11, -var-25, -var-10, S417, S407)
100001421 p 438 5 -3 -4 -11 -25 -10 417 407 0
c Implicit declarations:
c 100001421 a 438 -5 3 4 11 25 10 -417 -407 0
c 100001422 a -438 5 0
c 100001423 a -438 -3 0
c 100001424 a -438 -4 0
c 100001425 a -438 -11 0
c 100001426 a -438 -25 0
c 100001427 a -438 -10 0
c 100001428 a -438 417 0
c 100001429 a -438 407 0
c P439 = AND(-var-5, S437)
100001430 p 439 -5 437 0
c Implicit declarations:
c 100001430 a 439 5 -437 0
c 100001431 a -439 -5 0
c 100001432 a -439 437 0
c S440 = OR(P438, P439)
100001433 s 440 438 439 100001422 100001431 0
c Implicit declarations:
c 100001433 a -440 438 439 0
c 100001434 a 440 -438 0
c 100001435 a 440 -439 0
c P441 = AND(var-7, -var-8, -var-9, -var-10, -var-11, -var-5, S390, -var-17, -var-22, S256)
100001436 p 441 7 -8 -9 -10 -11 -5 390 -17 -22 256 0
c Implicit declarations:
c 100001436 a 441 -7 8 9 10 11 5 -390 17 22 -256 0
c 100001437 a -441 7 0
c 100001438 a -441 -8 0
c 100001439 a -441 -9 0
c 100001440 a -441 -10 0
c 100001441 a -441 -11 0
c 100001442 a -441 -5 0
c 100001443 a -441 390 0
c 100001444 a -441 -17 0
c 100001445 a -441 -22 0
c 100001446 a -441 256 0
c P442 = AND(-var-7, S440)
100001447 p 442 -7 440 0
c Implicit declarations:
c 100001447 a 442 7 -440 0
c 100001448 a -442 -7 0
c 100001449 a -442 440 0
c S443 = OR(P441, P442)
100001450 s 443 441 442 100001437 100001448 0
c Implicit declarations:
c 100001450 a -443 441 442 0
c 100001451 a 443 -441 0
c 100001452 a 443 -442 0
c P444 = AND(var-2, -var-3, -var-4, -var-5, -var-10, -var-11, -var-7, S417, -var-17, -var-22, S256)
100001453 p 444 2 -3 -4 -5 -10 -11 -7 417 -17 -22 256 0
c Implicit declarations:
c 100001453 a 444 -2 3 4 5 10 11 7 -417 17 22 -256 0
c 100001454 a -444 2 0
c 100001455 a -444 -3 0
c 100001456 a -444 -4 0
c 100001457 a -444 -5 0
c 100001458 a -444 -10 0
c 100001459 a -444 -11 0
c 100001460 a -444 -7 0
c 100001461 a -444 417 0
c 100001462 a -444 -17 0
c 100001463 a -444 -22 0
c 100001464 a -444 256 0
c P445 = AND(-var-2, S443)
100001465 p 445 -2 443 0
c Implicit declarations:
c 100001465 a 445 2 -443 0
c 100001466 a -445 -2 0
c 100001467 a -445 443 0
c S446 = OR(P444, P445)
100001468 s 446 444 445 100001454 100001466 0
c Implicit declarations:
c 100001468 a -446 444 445 0
c 100001469 a 446 -444 0
c 100001470 a 446 -445 0
c P447 = AND(var-1, -var-2, -var-3, -var-4, -var-5, -var-7, -var-10, -var-11, S417, S395)
100001471 p 447 1 -2 -3 -4 -5 -7 -10 -11 417 395 0
c Implicit declarations:
c 100001471 a 447 -1 2 3 4 5 7 10 11 -417 -395 0
c 100001472 a -447 1 0
c 100001473 a -447 -2 0
c 100001474 a -447 -3 0
c 100001475 a -447 -4 0
c 100001476 a -447 -5 0
c 100001477 a -447 -7 0
c 100001478 a -447 -10 0
c 100001479 a -447 -11 0
c 100001480 a -447 417 0
c 100001481 a -447 395 0
c P448 = AND(-var-1, S446)
100001482 p 448 -1 446 0
c Implicit declarations:
c 100001482 a 448 1 -446 0
c 100001483 a -448 -1 0
c 100001484 a -448 446 0
c S449 = OR(P447, P448)
100001485 s 449 447 448 100001472 100001483 0
c Implicit declarations:
c 100001485 a -449 447 448 0
c 100001486 a 449 -447 0
c 100001487 a 449 -448 0
c P450 = AND(var-15, -var-1, -var-5, -var-11, -var-13, -var-14, -var-7, -var-10, -var-2, -var-25, S250, S407)
100001488 p 450 15 -1 -5 -11 -13 -14 -7 -10 -2 -25 250 407 0
c Implicit declarations:
c 100001488 a 450 -15 1 5 11 13 14 7 10 2 25 -250 -407 0
c 100001489 a -450 15 0
c 100001490 a -450 -1 0
c 100001491 a -450 -5 0
c 100001492 a -450 -11 0
c 100001493 a -450 -13 0
c 100001494 a -450 -14 0
c 100001495 a -450 -7 0
c 100001496 a -450 -10 0
c 100001497 a -450 -2 0
c 100001498 a -450 -25 0
c 100001499 a -450 250 0
c 100001500 a -450 407 0
c P451 = AND(-var-15, S449)
100001501 p 451 -15 449 0
c Implicit declarations:
c 100001501 a 451 15 -449 0
c 100001502 a -451 -15 0
c 100001503 a -451 449 0
c S452 = OR(P450, P451)
100001504 s 452 450 451 100001489 100001502 0
c Implicit declarations:
c 100001504 a -452 450 451 0
c 100001505 a 452 -450 0
c 100001506 a 452 -451 0
c P453 = AND(var-6, -var-7, -var-8, -var-9, -var-10, -var-5, -var-15, -var-1, -var-11, -var-2, S390, S395)
100001507 p 453 6 -7 -8 -9 -10 -5 -15 -1 -11 -2 390 395 0
c Implicit declarations:
c 100001507 a 453 -6 7 8 9 10 5 15 1 11 2 -390 -395 0
c 100001508 a -453 6 0
c 100001509 a -453 -7 0
c 100001510 a -453 -8 0
c 100001511 a -453 -9 0
c 100001512 a -453 -10 0
c 100001513 a -453 -5 0
c 100001514 a -453 -15 0
c 100001515 a -453 -1 0
c 100001516 a -453 -11 0
c 100001517 a -453 -2 0
c 100001518 a -453 390 0
c 100001519 a -453 395 0
c P454 = AND(-var-6, S452)
100001520 p 454 -6 452 0
c Implicit declarations:
c 100001520 a 454 6 -452 0
c 100001521 a -454 -6 0
c 100001522 a -454 452 0
c S455 = OR(P453, P454)
100001523 s 455 453 454 100001508 100001521 0
c Implicit declarations:
c 100001523 a -455 453 454 0
c 100001524 a 455 -453 0
c 100001525 a 455 -454 0
c P456 = AND(var-24, -var-21, -var-22, -var-25, S384)
100001526 p 456 24 -21 -22 -25 384 0
c Implicit declarations:
c 100001526 a 456 -24 21 22 25 -384 0
c 100001527 a -456 24 0
c 100001528 a -456 -21 0
c 100001529 a -456 -22 0
c 100001530 a -456 -25 0
c 100001531 a -456 384 0
c P457 = AND(-var-24, S455)
100001532 p 457 -24 455 0
c Implicit declarations:
c 100001532 a 457 24 -455 0
c 100001533 a -457 -24 0
c 100001534 a -457 455 0
c S458 = OR(P456, P457)
100001535 s 458 456 457 100001527 100001533 0
c Implicit declarations:
c 100001535 a -458 456 457 0
c 100001536 a 458 -456 0
c 100001537 a 458 -457 0
c P459 = AND(var-19, -var-16, -var-17, -var-20, -var-24, S331)
100001538 p 459 19 -16 -17 -20 -24 331 0
c Implicit declarations:
c 100001538 a 459 -19 16 17 20 24 -331 0
c 100001539 a -459 19 0
c 100001540 a -459 -16 0
c 100001541 a -459 -17 0
c 100001542 a -459 -20 0
c 100001543 a -459 -24 0
c 100001544 a -459 331 0
c P460 = AND(-var-19, S458)
100001545 p 460 -19 458 0
c Implicit declarations:
c 100001545 a 460 19 -458 0
c 100001546 a -460 -19 0
c 100001547 a -460 458 0
c S461 = OR(P459, P460)
100001548 s 461 459 460 100001539 100001546 0
c Implicit declarations:
c 100001548 a -461 459 460 0
c 100001549 a 461 -459 0
c 100001550 a 461 -460 0
c P462 = AND(var-12, -var-11, -var-13, -var-14, -var-15, S270)
100001551 p 462 12 -11 -13 -14 -15 270 0
c Implicit declarations:
c 100001551 a 462 -12 11 13 14 15 -270 0
c 100001552 a -462 12 0
c 100001553 a -462 -11 0
c 100001554 a -462 -13 0
c 100001555 a -462 -14 0
c 100001556 a -462 -15 0
c 100001557 a -462 270 0
c P463 = AND(-var-12, S461)
100001558 p 463 -12 461 0
c Implicit declarations:
c 100001558 a 463 12 -461 0
c 100001559 a -463 -12 0
c 100001560 a -463 461 0
c S464 = OR(P462, P463)
100001561 s 464 462 463 100001552 100001559 0
c Implicit declarations:
c 100001561 a -464 462 463 0
c 100001562 a 464 -462 0
c 100001563 a 464 -463 0
c P465 = AND(var-23, -var-21, -var-22, -var-24, -var-25, S218)
100001564 p 465 23 -21 -22 -24 -25 218 0
c Implicit declarations:
c 100001564 a 465 -23 21 22 24 25 -218 0
c 100001565 a -465 23 0
c 100001566 a -465 -21 0
c 100001567 a -465 -22 0
c 100001568 a -465 -24 0
c 100001569 a -465 -25 0
c 100001570 a -465 218 0
c P466 = AND(-var-23, S464)
100001571 p 466 -23 464 0
c Implicit declarations:
c 100001571 a 466 23 -464 0
c 100001572 a -466 -23 0
c 100001573 a -466 464 0
c S467 = OR(P465, P466)
100001574 s 467 465 466 100001565 100001572 0
c Implicit declarations:
c 100001574 a -467 465 466 0
c 100001575 a 467 -465 0
c 100001576 a 467 -466 0
c P468 = AND(var-18, -var-16, -var-17, -var-19, -var-20, -var-23, S132)
100001577 p 468 18 -16 -17 -19 -20 -23 132 0
c Implicit declarations:
c 100001577 a 468 -18 16 17 19 20 23 -132 0
c 100001578 a -468 18 0
c 100001579 a -468 -16 0
c 100001580 a -468 -17 0
c 100001581 a -468 -19 0
c 100001582 a -468 -20 0
c 100001583 a -468 -23 0
c 100001584 a -468 132 0
c P469 = AND(-var-18, S467)
100001585 p 469 -18 467 0
c Implicit declarations:
c 100001585 a 469 18 -467 0
c 100001586 a -469 -18 0
c 100001587 a -469 467 0
c S470 = OR(P468, P469)
100001588 s 470 468 469 100001578 100001586 0
c Implicit declarations:
c 100001588 a -470 468 469 0
c 100001589 a 470 -468 0
c 100001590 a 470 -469 0
c Prove Lemma S49
c Assert ITE at node S30
100001591 a -1 30 482 483 484 -12 4 8 11 13 14 15 0 6 7 9 126 127 128 97 100000001 100000020 0
100001592 a 30 482 483 484 -12 4 8 11 13 14 15 0 100001591 130 131 132 133 16 18 19 100000010 100000021 0
c Assert ITE at node S36
100001593 a -1 36 482 483 484 12 -15 10 11 13 14 0 6 7 8 9 145 146 20 21 100000022 100000043 0
100001594 a 36 482 483 484 12 -15 10 11 13 14 0 100001593 149 10 11 12 153 16 17 18 100000032 100000044 0
c Assert ITE at node S42
100001595 a -10 42 482 483 484 12 15 1 0 158 10 11 12 19 22 24 25 153 27 28 100000045 100000072 0
100001596 a 42 482 483 484 12 15 1 0 100001595 169 170 171 97 173 174 20 21 177 27 28 100000058 100000073 0
c Assert ITE at node S46
100001597 a -15 46 482 483 484 12 0 137 29 34 35 100001594 100000074 100000086 0
100001598 a 46 482 483 484 12 0 100001597 157 100001596 100000081 100000087 0
c Assert ITE at node S49 (root)
100001599 a -12 49 482 483 484 0 117 118 26 30 31 32 100001592 100000088 100000101 0
100001600 a 49 482 483 484 0 100001599 100001598 100000097 100000102 0
c Completed proof of Lemma S49.  Assumed literals = [-482, -483, -484]
c Apply Lemma S49.  Context = [18, -16, -17, -19, -20, -23, 24, -21, -22, -25]
c Lemma argument #1 (clause (1, 6, 11)) from input clause #1:(1, 6, 11, 16, 21)
100001601 a -18 16 17 19 20 23 -24 21 22 25 -482 0 90 91 92 1 0
c Lemma argument #2 (clause (2, 7, 12)) from input clause #2:(2, 7, 12, 17, 22)
100001602 a -18 16 17 19 20 23 -24 21 22 25 -483 0 94 95 96 2 0
c Lemma argument #3 (clause (5, 10, 15)) from input clause #5:(5, 10, 15, 20, 25)
100001603 a -18 16 17 19 20 23 -24 21 22 25 -484 0 98 99 100 5 0
c Lemma invocation
100001604 a -18 16 17 19 20 23 -24 21 22 25 49 0 100001601 100001602 100001603 100001600 0
c Assert ITE at node S57
100001605 a -10 57 -18 16 17 19 20 23 24 -12 11 13 14 15 1 6 2 -21 22 25 0 220 221 15 22 24 25 100000103 100000120 0
100001606 a 57 -18 16 17 19 20 23 24 -12 11 13 14 15 1 6 2 -21 22 25 0 100001605 228 229 231 232 233 234 100000111 100000121 0
c Assert ITE at node S61
100001607 a -6 61 -18 16 17 19 20 23 24 -12 11 13 14 15 1 0 199 200 201 15 16 17 18 19 208 209 210 100000122 100000143 0
100001608 a 61 -18 16 17 19 20 23 24 -12 11 13 14 15 1 0 100001607 211 1 46 49 100001606 100000135 100000144 0
c Assert ITE at node S64
100001609 a -1 64 -18 16 17 19 20 23 24 -12 11 13 14 15 0 6 7 8 9 189 191 192 193 25 196 197 198 100000145 100000163 0
100001610 a 64 -18 16 17 19 20 23 24 -12 11 13 14 15 0 100001609 100001608 100000159 100000164 0
c Assert ITE at node S71
100001611 a -7 71 -18 16 17 19 20 23 24 12 -1 2 3 4 5 15 0 16 20 21 22 260 261 191 263 265 266 100000165 100000190 0
100001612 a 71 -18 16 17 19 20 23 24 12 -1 2 3 4 5 15 0 100001611 268 273 274 277 280 283 284 287 288 52 100000177 100000191 0
c Assert ITE at node S74
100001613 a -15 74 -18 16 17 19 20 23 24 12 -1 2 3 4 5 0 241 244 245 246 25 29 34 35 196 254 52 100000192 100000209 0
100001614 a 74 -18 16 17 19 20 23 24 12 -1 2 3 4 5 0 100001613 100001612 100000205 100000210 0
c Assert ITE at node S80
100001615 a -2 80 -18 16 17 19 20 23 24 12 1 -10 6 7 8 9 15 0 10 11 12 303 304 305 306 46 49 100000211 100000234 0
100001616 a 80 -18 16 17 19 20 23 24 12 1 -10 6 7 8 9 15 0 100001615 309 312 15 314 27 28 317 319 52 100000222 100000235 0
c Assert ITE at node S88
100001617 a -2 88 -18 16 17 19 20 23 24 12 1 10 -15 11 13 14 6 -21 22 25 0 10 11 12 340 343 344 100000236 100000253 0
100001618 a 88 -18 16 17 19 20 23 24 12 1 10 -15 11 13 14 6 -21 22 25 0 100001617 345 347 15 349 20 21 100000244 100000254 0
c Assert ITE at node S92
100001619 a -6 92 -18 16 17 19 20 23 24 12 1 10 -15 11 13 14 0 324 325 326 15 16 17 18 331 332 52 100000255 100000274 0
100001620 a 92 -18 16 17 19 20 23 24 12 1 10 -15 11 13 14 0 100001619 1 46 49 100001618 100000267 100000275 0
c Assert ITE at node S99
100001621 a -7 99 -18 16 17 19 20 23 24 12 1 10 15 -5 2 3 4 25 6 0 20 21 303 261 380 382 46 100000276 100000295 0
100001622 a 99 -18 16 17 19 20 23 24 12 1 10 15 -5 2 3 4 25 6 0 100001621 384 385 389 27 28 392 394 100000285 100000296 0
c Assert ITE at node S102
100001623 a -6 102 -18 16 17 19 20 23 24 12 1 10 15 -5 2 3 4 25 0 16 17 18 363 261 370 373 374 100000297 100000311 0
100001624 a 102 -18 16 17 19 20 23 24 12 1 10 15 -5 2 3 4 25 0 100001623 100001622 100000307 100000312 0
c Assert ITE at node S109
100001625 a -7 109 -18 16 17 19 20 23 24 12 1 10 15 5 21 22 -25 6 -11 13 14 0 411 412 413 20 21 100000313 100000328 0
100001626 a 109 -18 16 17 19 20 23 24 12 1 10 15 5 21 22 -25 6 -11 13 14 0 100001625 416 10 11 419 407 100000320 100000329 0
c Assert ITE at node S113
100001627 a -6 113 -18 16 17 19 20 23 24 12 1 10 15 5 21 22 -25 0 398 10 11 401 17 18 367 406 407 100000330 100000348 0
100001628 a 113 -18 16 17 19 20 23 24 12 1 10 15 5 21 22 -25 0 100001627 408 27 28 100001626 100000341 100000349 0
c Assert ITE at node S117
100001629 a -5 117 -18 16 17 19 20 23 24 12 1 10 15 0 12 14 15 356 100001624 100000350 100000364 0
100001630 a 117 -18 16 17 19 20 23 24 12 1 10 15 0 100001629 395 396 5 100001628 100000357 100000365 0
c Assert ITE at node S120
100001631 a -15 120 -18 16 17 19 20 23 24 12 1 10 0 29 34 35 100001620 100000366 100000376 0
100001632 a 120 -18 16 17 19 20 23 24 12 1 10 0 100001631 100001630 100000372 100000377 0
c Assert ITE at node S123
100001633 a -10 123 -18 16 17 19 20 23 24 12 1 0 19 22 24 25 295 100001616 100000378 100000390 0
100001634 a 123 -18 16 17 19 20 23 24 12 1 0 100001633 100001632 100000386 100000391 0
c Assert ITE at node S126
100001635 a -1 126 -18 16 17 19 20 23 24 12 0 6 7 8 9 100001614 100000392 100000403 0
100001636 a 126 -18 16 17 19 20 23 24 12 0 100001635 100001634 100000399 100000404 0
c Assert ITE at node S129
100001637 a -12 129 -18 16 17 19 20 23 24 0 26 30 31 32 100001610 100000405 100000416 0
100001638 a 129 -18 16 17 19 20 23 24 0 100001637 100001636 100000412 100000417 0
c Assert ITE at node S132
100001639 a -24 132 -18 16 17 19 20 23 0 48 51 55 100001604 100000418 100000428 0
100001640 a 132 -18 16 17 19 20 23 0 100001639 100001638 100000424 100000429 0
c Apply Lemma S49.  Context = [-18, 23, -21, -22, -24, -25, 19, -16, -17, -20]
c Lemma argument #1 (clause (1, 6, 11)) from input clause #1:(1, 6, 11, 16, 21)
100001641 a 18 -23 21 22 24 25 -19 16 17 20 -482 0 90 91 92 1 0
c Lemma argument #2 (clause (2, 7, 12)) from input clause #2:(2, 7, 12, 17, 22)
100001642 a 18 -23 21 22 24 25 -19 16 17 20 -483 0 94 95 96 2 0
c Lemma argument #3 (clause (5, 10, 15)) from input clause #5:(5, 10, 15, 20, 25)
100001643 a 18 -23 21 22 24 25 -19 16 17 20 -484 0 98 99 100 5 0
c Lemma invocation
100001644 a 18 -23 21 22 24 25 -19 16 17 20 49 0 100001641 100001642 100001643 100001600 0
c Assert ITE at node S142
100001645 a -10 142 18 -23 21 22 24 25 19 3 -12 11 13 14 15 17 1 6 2 -16 20 0 466 15 22 24 25 100000430 100000445 0
100001646 a 142 18 -23 21 22 24 25 19 3 -12 11 13 14 15 17 1 6 2 -16 20 0 100001645 229 472 473 474 475 100000437 100000446 0
c Assert ITE at node S146
100001647 a -6 146 18 -23 21 22 24 25 19 3 -12 11 13 14 15 17 1 0 451 452 15 16 17 456 19 459 5 100000447 100000465 0
100001648 a 146 18 -23 21 22 24 25 19 3 -12 11 13 14 15 17 1 0 100001647 463 1 39 100001646 100000458 100000466 0
c Assert ITE at node S149
100001649 a -1 149 18 -23 21 22 24 25 19 3 -12 11 13 14 15 17 0 6 8 9 442 443 192 4 25 447 5 100000467 100000483 0
100001650 a 149 18 -23 21 22 24 25 19 3 -12 11 13 14 15 17 0 100001649 100001648 100000479 100000484 0
c Assert ITE at node S157
100001651 a -7 157 18 -23 21 22 24 25 19 3 12 -15 11 13 14 20 6 1 -16 17 0 411 503 15 20 21 22 100000485 100000502 0
100001652 a 157 18 -23 21 22 24 25 19 3 12 -15 11 13 14 20 6 1 -16 17 0 100001651 508 11 12 511 512 25 100000493 100000503 0
c Assert ITE at node S161
100001653 a -1 161 18 -23 21 22 24 25 19 3 12 -15 11 13 14 20 6 0 6 8 9 494 192 298 25 449 499 100000504 100000521 0
100001654 a 161 18 -23 21 22 24 25 19 3 12 -15 11 13 14 20 6 0 100001653 1 36 100001652 100000515 100000522 0
c Assert ITE at node S164
100001655 a -6 164 18 -23 21 22 24 25 19 3 12 -15 11 13 14 20 0 481 482 326 15 16 17 18 19 489 349 100000523 100000539 0
100001656 a 164 18 -23 21 22 24 25 19 3 12 -15 11 13 14 20 0 100001655 100001654 100000535 100000540 0
c Assert ITE at node S170
100001657 a -5 170 18 -23 21 22 24 25 19 3 12 15 -6 7 8 9 10 1 0 12 15 522 261 524 475 526 42 100000541 100000562 0
100001658 a 170 18 -23 21 22 24 25 19 3 12 15 -6 7 8 9 10 1 0 100001657 269 11 530 261 533 534 536 537 100000551 100000563 0
c Assert ITE at node S177
100001659 a -10 177 18 -23 21 22 24 25 19 3 12 15 6 -1 2 4 5 16 0 22 24 25 547 261 549 550 42 100000564 100000585 0
100001660 a 177 18 -23 21 22 24 25 19 3 12 15 6 -1 2 4 5 16 0 100001659 552 20 21 555 261 557 559 560 100000574 100000586 0
c Assert ITE at node S183
100001661 a -11 183 18 -23 21 22 24 25 19 3 12 15 6 1 -10 7 8 9 0 564 282 15 27 28 569 570 42 100000587 100000608 0
100001662 a 183 18 -23 21 22 24 25 19 3 12 15 6 1 -10 7 8 9 0 100001661 572 11 12 261 576 577 36 39 100000597 100000609 0
c Assert ITE at node S189
100001663 a -7 189 18 -23 21 22 24 25 19 3 12 15 6 1 10 -5 2 4 0 20 21 584 261 586 587 36 39 100000610 100000631 0
100001664 a 189 18 -23 21 22 24 25 19 3 12 15 6 1 10 -5 2 4 0 100001663 590 591 592 27 28 595 598 42 100000620 100000632 0
c Assert ITE at node S195
100001665 a -7 195 18 -23 21 22 24 25 19 3 12 15 6 1 10 5 -11 13 14 16 17 -20 0 411 609 20 611 100000633 100000646 0
100001666 a 195 18 -23 21 22 24 25 19 3 12 15 6 1 10 5 -11 13 14 16 17 -20 0 100001665 612 11 614 615 100000639 100000647 0
c Assert ITE at node S199
100001667 a -5 199 18 -23 21 22 24 25 19 3 12 15 6 1 10 0 12 15 100001664 100000648 100000663 0
100001668 a 199 18 -23 21 22 24 25 19 3 12 15 6 1 10 0 100001667 600 27 28 603 606 607 100001666 100000653 100000664 0
c Assert ITE at node S202
100001669 a -10 202 18 -23 21 22 24 25 19 3 12 15 6 1 0 22 24 25 100001662 100000665 100000675 0
100001670 a 202 18 -23 21 22 24 25 19 3 12 15 6 1 0 100001669 100001668 100000671 100000676 0
c Assert ITE at node S205
100001671 a -1 205 18 -23 21 22 24 25 19 3 12 15 6 0 6 8 9 541 100001660 100000677 100000688 0
100001672 a 205 18 -23 21 22 24 25 19 3 12 15 6 0 100001671 100001670 100000684 100000689 0
c Assert ITE at node S208
100001673 a -6 208 18 -23 21 22 24 25 19 3 12 15 0 16 17 18 19 518 100001658 100000690 100000702 0
100001674 a 208 18 -23 21 22 24 25 19 3 12 15 0 100001673 100001672 100000698 100000703 0
c Assert ITE at node S211
100001675 a -15 211 18 -23 21 22 24 25 19 3 12 0 29 34 35 480 100001656 100000704 100000715 0
100001676 a 211 18 -23 21 22 24 25 19 3 12 0 100001675 100001674 100000711 100000716 0
c Assert ITE at node S214
100001677 a -12 214 18 -23 21 22 24 25 19 3 0 26 30 31 32 438 100001650 100000717 100000729 0
100001678 a 214 18 -23 21 22 24 25 19 3 0 100001677 100001676 100000725 100000730 0
c Assert ITE at node S218
100001679 a -19 218 18 -23 21 22 24 25 0 38 41 45 100001644 100000731 100000742 0
100001680 a 218 18 -23 21 22 24 25 0 100001679 431 100001678 100000737 100000743 0
c Prove Lemma S226
c Assert ITE at node S226 (root)
100001681 a -5 226 479 481 0 12 14 80 23 24 100000744 100000759 0
100001682 a 226 479 481 0 100001681 666 667 668 669 670 100000751 100000760 0
c Completed proof of Lemma S226.  Assumed literals = [-479, -481]
c Apply Lemma S226.  Context = [-18, -23, 12, -11, -13, -14, -15, 24, -21, -22, -25, -19, -1, -6, -4, -7, 16, -17, -20]
c Lemma argument #1 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001683 a 18 23 -12 11 13 14 15 -24 21 22 25 19 1 6 4 7 -16 17 20 -479 0 81 82 3 0
c Lemma argument #2 (clause (5, 10)) from input clause #5:(5, 10, 15, 20, 25)
100001684 a 18 23 -12 11 13 14 15 -24 21 22 25 19 1 6 4 7 -16 17 20 -481 0 87 88 5 0
c Lemma invocation
100001685 a 18 23 -12 11 13 14 15 -24 21 22 25 19 1 6 4 7 -16 17 20 226 0 100001683 100001684 100001682 0
c Assert ITE at node S230
100001686 a -6 230 18 23 -12 11 13 14 15 -24 21 22 25 19 1 0 640 641 13 14 16 17 18 19 649 651 653 100000761 100000783 0
100001687 a 230 18 23 -12 11 13 14 15 -24 21 22 25 19 1 0 100001686 655 657 1 36 39 100001685 100000774 100000784 0
c Assert ITE at node S233
100001688 a -1 233 18 23 -12 11 13 14 15 -24 21 22 25 19 0 6 7 8 9 630 632 633 23 24 542 637 639 100000785 100000803 0
100001689 a 233 18 23 -12 11 13 14 15 -24 21 22 25 19 0 100001688 100001687 100000799 100000804 0
c Apply Lemma S226.  Context = [-18, -23, 12, -11, -13, -14, -15, -24, 19, -16, -17, -20, -1, -6, -4, -7, 21, -22, -25]
c Lemma argument #1 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001690 a 18 23 -12 11 13 14 15 24 -19 16 17 20 1 6 4 7 -21 22 25 -479 0 81 82 3 0
c Lemma argument #2 (clause (5, 10)) from input clause #5:(5, 10, 15, 20, 25)
100001691 a 18 23 -12 11 13 14 15 24 -19 16 17 20 1 6 4 7 -21 22 25 -481 0 87 88 5 0
c Lemma invocation
100001692 a 18 23 -12 11 13 14 15 24 -19 16 17 20 1 6 4 7 -21 22 25 226 0 100001690 100001691 100001682 0
c Assert ITE at node S241
100001693 a -6 241 18 23 -12 11 13 14 15 24 -19 16 17 20 1 0 686 687 13 14 16 17 18 19 694 396 696 100000805 100000827 0
100001694 a 241 18 23 -12 11 13 14 15 24 -19 16 17 20 1 0 100001693 698 702 1 46 49 100001692 100000818 100000828 0
c Assert ITE at node S244
100001695 a -1 244 18 23 -12 11 13 14 15 24 -19 16 17 20 0 6 7 8 9 519 190 680 23 24 683 396 685 100000829 100000847 0
100001696 a 244 18 23 -12 11 13 14 15 24 -19 16 17 20 0 100001695 100001694 100000843 100000848 0
c Prove Lemma S250
c Assert ITE at node S250 (root)
100001697 a -4 250 479 480 0 13 80 23 100000849 100000860 0
100001698 a 250 479 480 0 100001697 717 718 719 100000854 100000861 0
c Completed proof of Lemma S250.  Assumed literals = [-479, -480]
c Apply Lemma S250.  Context = [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1, -6, -7, -10, -2]
c Lemma argument #1 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001699 a 18 23 -12 11 13 14 15 24 19 5 1 6 7 10 2 -479 0 81 82 3 0
c Lemma argument #2 (clause (4, 9)) from input clause #4:(4, 9, 14, 19, 24)
100001700 a 18 23 -12 11 13 14 15 24 19 5 1 6 7 10 2 -480 0 84 85 4 0
c Lemma invocation
100001701 a 18 23 -12 11 13 14 15 24 19 5 1 6 7 10 2 250 0 100001699 100001700 100001698 0
c Prove Lemma S256
c Assert ITE at node S256 (root)
100001702 a -25 256 473 475 0 722 39 49 100000862 100000873 0
100001703 a 256 473 475 0 100001702 725 68 727 100000867 100000874 0
c Completed proof of Lemma S256.  Assumed literals = [-473, -475]
c Apply Lemma S256.  Context = [-18, -23, 12, -11, -13, -14, -15, -24, -19, -5, -1, -6, -7, -10, -2, -17, -22]
c Lemma argument #1 (clause (16, 21)) from input clause #1:(1, 6, 11, 16, 21)
100001704 a 18 23 -12 11 13 14 15 24 19 5 1 6 7 10 2 17 22 -473 0 63 64 1 0
c Lemma argument #2 (clause (20, 25)) from input clause #5:(5, 10, 15, 20, 25)
100001705 a 18 23 -12 11 13 14 15 24 19 5 1 6 7 10 2 17 22 -475 0 69 70 5 0
c Lemma invocation
100001706 a 18 23 -12 11 13 14 15 24 19 5 1 6 7 10 2 17 22 256 0 100001704 100001705 100001703 0
c Assert unit clause for AND node P266
100001707 a 266 18 23 -12 11 13 14 15 24 19 0 706 707 708 711 712 713 100001701 720 721 100001706 100000881 0
c Assert ITE at node S267
100001708 a -19 267 18 23 -12 11 13 14 15 24 0 38 41 45 100001696 100000875 100000894 0
100001709 a 267 18 23 -12 11 13 14 15 24 0 100001708 100001707 100000895 0
c Assert ITE at node S270
100001710 a -24 270 18 23 -12 11 13 14 15 0 48 51 55 624 100001689 100000896 100000907 0
100001711 a 270 18 23 -12 11 13 14 15 0 100001710 100001709 100000903 100000908 0
c Assert ITE at node S277
100001712 a -7 277 18 23 12 -19 16 17 20 24 -5 1 2 3 4 6 15 0 20 21 22 303 763 33 765 46 49 100000909 100000932 0
100001713 a 277 18 23 12 -19 16 17 20 24 -5 1 2 3 4 6 15 0 100001712 770 23 24 773 27 28 776 779 52 100000920 100000933 0
c Assert ITE at node S281
100001714 a -6 281 18 23 12 -19 16 17 20 24 -5 1 2 3 4 0 16 17 18 19 368 748 33 34 694 752 52 100000934 100000952 0
100001715 a 281 18 23 12 -19 16 17 20 24 -5 1 2 3 4 0 100001714 756 100001713 100000947 100000953 0
c Assert ITE at node S289
100001716 a -7 289 18 23 12 -19 16 17 20 24 5 -15 11 13 14 6 1 -21 22 25 0 411 809 13 20 21 22 100000954 100000971 0
100001717 a 289 18 23 12 -19 16 17 20 24 5 -15 11 13 14 6 1 -21 22 25 0 100001716 508 10 11 817 23 24 100000962 100000972 0
c Assert ITE at node S293
100001718 a -1 293 18 23 12 -19 16 17 20 24 5 -15 11 13 14 6 0 6 7 8 798 799 23 24 802 803 52 100000973 100000992 0
100001719 a 293 18 23 12 -19 16 17 20 24 5 -15 11 13 14 6 0 100001718 1 46 49 100001717 100000985 100000993 0
c Assert ITE at node S296
100001720 a -6 296 18 23 12 -19 16 17 20 24 5 -15 11 13 14 0 519 324 786 13 16 17 18 19 694 793 52 100000994 100001011 0
100001721 a 296 18 23 12 -19 16 17 20 24 5 -15 11 13 14 0 100001720 100001719 100001007 100001012 0
c Assert ITE at node S303
100001722 a -2 303 18 23 12 -19 16 17 20 24 5 15 -10 6 7 8 9 1 0 10 11 303 836 33 838 46 49 100001013 100001034 0
100001723 a 303 18 23 12 -19 16 17 20 24 5 15 -10 6 7 8 9 1 0 100001722 841 13 843 27 28 778 847 52 100001023 100001035 0
c Assert ITE at node S306
100001724 a -1 306 18 23 12 -19 16 17 20 24 5 15 -10 6 7 8 9 0 6 7 8 281 828 33 830 752 52 100001036 100001051 0
100001725 a 306 18 23 12 -19 16 17 20 24 5 15 -10 6 7 8 9 0 100001724 100001723 100001047 100001052 0
c Prove Lemma S314
c Assert ITE at node S314 (root)
100001726 a -2 314 478 479 0 10 11 411 80 23 100001053 100001068 0
100001727 a 314 478 479 0 100001726 879 13 881 20 21 100001060 100001069 0
c Completed proof of Lemma S314.  Assumed literals = [-478, -479]
c Apply Lemma S314.  Context = [-18, -23, -12, 19, -16, -17, -20, -24, -5, -15, -10, -21, -22, 25, -1, -6, 11, -13, -14]
c Lemma argument #1 (clause (2, 7)) from input clause #2:(2, 7, 12, 17, 22)
100001728 a 18 23 12 -19 16 17 20 24 5 15 10 21 22 -25 1 6 -11 13 14 -478 0 78 79 2 0
c Lemma argument #2 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001729 a 18 23 12 -19 16 17 20 24 5 15 10 21 22 -25 1 6 -11 13 14 -479 0 81 82 3 0
c Lemma invocation
100001730 a 18 23 12 -19 16 17 20 24 5 15 10 21 22 -25 1 6 -11 13 14 314 0 100001728 100001729 100001727 0
c Assert ITE at node S318
100001731 a -6 318 18 23 12 -19 16 17 20 24 5 15 10 21 22 -25 1 0 398 10 11 411 17 18 367 860 33 100001070 100001088 0
100001732 a 318 18 23 12 -19 16 17 20 24 5 15 10 21 22 -25 1 0 100001731 408 27 28 100001730 100001081 100001089 0
c Assert ITE at node S321
100001733 a -1 321 18 23 12 -19 16 17 20 24 5 15 10 21 22 -25 0 6 7 8 519 856 20 21 859 860 33 100001090 100001106 0
100001734 a 321 18 23 12 -19 16 17 20 24 5 15 10 21 22 -25 0 100001733 100001732 100001102 100001107 0
c Assert ITE at node S325
100001735 a -10 325 18 23 12 -19 16 17 20 24 5 15 0 19 22 24 25 100001725 100001108 100001122 0
100001736 a 325 18 23 12 -19 16 17 20 24 5 15 0 100001735 395 396 5 100001734 100001115 100001123 0
c Assert ITE at node S328
100001737 a -15 328 18 23 12 -19 16 17 20 24 5 0 29 34 35 100001721 100001124 100001134 0
100001738 a 328 18 23 12 -19 16 17 20 24 5 0 100001737 100001736 100001130 100001135 0
c Assert ITE at node S331
100001739 a -5 331 18 23 12 -19 16 17 20 24 0 9 12 14 15 100001715 100001136 100001147 0
100001740 a 331 18 23 12 -19 16 17 20 24 0 100001739 100001738 100001143 100001148 0
c Assert ITE at node S339
100001741 a -10 339 18 23 12 19 -24 21 22 25 -1 2 3 4 5 15 8 11 -13 14 0 19 22 25 909 910 42 100001149 100001166 0
100001742 a 339 18 23 12 19 -24 21 22 25 -1 2 3 4 5 15 8 11 -13 14 0 100001741 519 913 21 915 916 917 100001157 100001167 0
c Assert ITE at node S343
100001743 a -15 343 18 23 12 19 -24 21 22 25 -1 2 3 4 5 0 519 892 893 23 24 29 34 35 899 900 42 100001168 100001189 0
100001744 a 343 18 23 12 19 -24 21 22 25 -1 2 3 4 5 0 100001743 902 903 904 33 100001742 100001181 100001190 0
c Assert ITE at node S350
100001745 a -5 350 18 23 12 19 -24 21 22 25 1 -6 7 8 9 10 15 3 11 -13 14 0 12 15 909 910 42 100001191 100001206 0
100001746 a 350 18 23 12 19 -24 21 22 25 1 -6 7 8 9 10 15 3 11 -13 14 0 100001745 913 11 943 944 945 100001198 100001207 0
c Assert ITE at node S354
100001747 a -15 354 18 23 12 19 -24 21 22 25 1 -6 7 8 9 10 0 922 923 13 14 29 34 35 929 930 42 100001208 100001228 0
100001748 a 354 18 23 12 19 -24 21 22 25 1 -6 7 8 9 10 0 100001747 932 367 934 33 100001746 100001220 100001229 0
c Apply Lemma S314.  Context = [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, 11, -13, -14, -15, -5, -10, -16, -17, 20]
c Lemma argument #1 (clause (2, 7)) from input clause #2:(2, 7, 12, 17, 22)
100001749 a 18 23 12 19 -24 21 22 25 1 6 -11 13 14 15 5 10 16 17 -20 -478 0 78 79 2 0
c Lemma argument #2 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001750 a 18 23 12 19 -24 21 22 25 1 6 -11 13 14 15 5 10 16 17 -20 -479 0 81 82 3 0
c Lemma invocation
100001751 a 18 23 12 19 -24 21 22 25 1 6 -11 13 14 15 5 10 16 17 -20 314 0 100001749 100001750 100001727 0
c Assert ITE at node S361
100001752 a -10 361 18 23 12 19 -24 21 22 25 1 6 -11 13 14 15 5 0 959 960 13 22 24 25 965 966 42 100001230 100001248 0
100001753 a 361 18 23 12 19 -24 21 22 25 1 6 -11 13 14 15 5 0 100001752 968 651 5 100001751 100001241 100001249 0
c Assert ITE at node S364
100001754 a -5 364 18 23 12 19 -24 21 22 25 1 6 -11 13 14 15 0 12 14 15 952 953 23 24 956 957 42 100001250 100001266 0
100001755 a 364 18 23 12 19 -24 21 22 25 1 6 -11 13 14 15 0 100001754 100001753 100001262 100001267 0
c Apply Lemma S314.  Context = [-18, -23, -12, -19, 24, -21, -22, -25, -1, -6, -11, -14, 16, -17, -20, -5, -10, -13, 15]
c Lemma argument #1 (clause (2, 7)) from input clause #2:(2, 7, 12, 17, 22)
100001756 a 18 23 12 19 -24 21 22 25 1 6 11 14 -16 17 20 5 10 13 -15 -478 0 78 79 2 0
c Lemma argument #2 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001757 a 18 23 12 19 -24 21 22 25 1 6 11 14 -16 17 20 5 10 13 -15 -479 0 81 82 3 0
c Lemma invocation
100001758 a 18 23 12 19 -24 21 22 25 1 6 11 14 -16 17 20 5 10 13 -15 314 0 100001756 100001757 100001727 0
c Assert ITE at node S371
100001759 a -10 371 18 23 12 19 -24 21 22 25 1 6 11 14 -16 17 20 5 0 984 10 11 411 24 25 379 34 100001268 100001284 0
100001760 a 371 18 23 12 19 -24 21 22 25 1 6 11 14 -16 17 20 5 0 100001759 992 5 100001758 100001278 100001285 0
c Assert ITE at node S374
100001761 a -5 374 18 23 12 19 -24 21 22 25 1 6 11 14 -16 17 20 0 12 14 15 2 20 21 22 379 34 100001286 100001301 0
100001762 a 374 18 23 12 19 -24 21 22 25 1 6 11 14 -16 17 20 0 100001761 100001760 100001297 100001302 0
c Assert ITE at node S378
100001763 a -11 378 18 23 12 19 -24 21 22 25 1 6 0 27 28 29 100001755 100001303 100001317 0
100001764 a 378 18 23 12 19 -24 21 22 25 1 6 0 100001763 971 1 36 39 100001762 100001309 100001318 0
c Assert ITE at node S381
100001765 a -6 381 18 23 12 19 -24 21 22 25 1 0 16 17 18 19 100001748 100001319 100001330 0
100001766 a 381 18 23 12 19 -24 21 22 25 1 0 100001765 100001764 100001326 100001331 0
c Assert ITE at node S384
100001767 a -1 384 18 23 12 19 -24 21 22 25 0 6 7 8 9 100001744 100001332 100001343 0
100001768 a 384 18 23 12 19 -24 21 22 25 0 100001767 100001766 100001339 100001344 0
c Prove Lemma S390
c Assert ITE at node S390 (root)
100001769 a -13 390 476 477 0 1003 1004 33 100001345 100001356 0
100001770 a 390 476 477 0 100001769 71 13 74 100001350 100001357 0
c Completed proof of Lemma S390.  Assumed literals = [-476, -477]
c Apply Lemma S390.  Context = [-18, -23, -12, -19, -24, 6, -7, -8, -9, -10, -5, -15, -1, -11, -2]
c Lemma argument #1 (clause (3, 13)) from input clause #3:(3, 8, 13, 18, 23)
100001771 a 18 23 12 19 24 -6 7 8 9 10 5 15 1 11 2 -476 0 72 73 3 0
c Lemma argument #2 (clause (4, 14)) from input clause #4:(4, 9, 14, 19, 24)
100001772 a 18 23 12 19 24 -6 7 8 9 10 5 15 1 11 2 -477 0 75 76 4 0
c Lemma invocation
100001773 a 18 23 12 19 24 -6 7 8 9 10 5 15 1 11 2 390 0 100001771 100001772 100001770 0
c Prove Lemma S395
c Assert ITE at node S395 (root)
100001774 a -17 395 474 475 0 36 42 1011 1012 68 100001358 100001373 0
100001775 a 395 474 475 0 100001774 1014 1015 1016 1017 52 100001365 100001374 0
c Completed proof of Lemma S395.  Assumed literals = [-474, -475]
c Apply Lemma S395.  Context = [-18, -23, -12, -19, -24, 6, -7, -8, -9, -10, -5, -15, -1, -11, -2]
c Lemma argument #1 (clause (17, 22)) from input clause #2:(2, 7, 12, 17, 22)
100001776 a 18 23 12 19 24 -6 7 8 9 10 5 15 1 11 2 -474 0 66 67 2 0
c Lemma argument #2 (clause (20, 25)) from input clause #5:(5, 10, 15, 20, 25)
100001777 a 18 23 12 19 24 -6 7 8 9 10 5 15 1 11 2 -475 0 69 70 5 0
c Lemma invocation
100001778 a 18 23 12 19 24 -6 7 8 9 10 5 15 1 11 2 395 0 100001776 100001777 100001775 0
c Assert unit clause for AND node P453
100001779 a 453 18 23 12 19 24 -6 0 16 17 18 19 998 999 519 368 1002 100001773 100001778 100001507 0
c Apply Lemma S250.  Context = [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11, -13, -14, -7, -10, -2, -25]
c Lemma argument #1 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001780 a 18 23 12 19 24 6 -15 1 5 11 13 14 7 10 2 25 -479 0 81 82 3 0
c Lemma argument #2 (clause (4, 9)) from input clause #4:(4, 9, 14, 19, 24)
100001781 a 18 23 12 19 24 6 -15 1 5 11 13 14 7 10 2 25 -480 0 84 85 4 0
c Lemma invocation
100001782 a 18 23 12 19 24 6 -15 1 5 11 13 14 7 10 2 25 250 0 100001780 100001781 100001698 0
c Prove Lemma S407
c Assert ITE at node S407 (root)
100001783 a -17 407 473 474 0 36 42 62 46 100001375 100001388 0
100001784 a 407 473 474 0 100001783 1033 39 1035 1036 100001381 100001389 0
c Completed proof of Lemma S407.  Assumed literals = [-473, -474]
c Apply Lemma S407.  Context = [-18, -23, -12, -19, -24, -6, 15, -1, -5, -11, -13, -14, -7, -10, -2, -25]
c Lemma argument #1 (clause (16, 21)) from input clause #1:(1, 6, 11, 16, 21)
100001785 a 18 23 12 19 24 6 -15 1 5 11 13 14 7 10 2 25 -473 0 63 64 1 0
c Lemma argument #2 (clause (17, 22)) from input clause #2:(2, 7, 12, 17, 22)
100001786 a 18 23 12 19 24 6 -15 1 5 11 13 14 7 10 2 25 -474 0 66 67 2 0
c Lemma invocation
100001787 a 18 23 12 19 24 6 -15 1 5 11 13 14 7 10 2 25 407 0 100001785 100001786 100001784 0
c Assert unit clause for AND node P450
100001788 a 450 18 23 12 19 24 6 -15 0 1019 1020 29 34 35 1024 1025 1026 1028 100001782 100001787 100001488 0
c Prove Lemma S417
c Assert ITE at node S417 (root)
100001789 a -13 417 471 472 0 1045 1046 33 100001390 100001401 0
100001790 a 417 471 472 0 100001789 56 23 59 100001395 100001402 0
c Completed proof of Lemma S417.  Assumed literals = [-471, -472]
c Apply Lemma S417.  Context = [-18, -23, -12, -19, -24, -6, -15, 1, -2, -3, -4, -5, -7, -10, -11]
c Lemma argument #1 (clause (8, 13)) from input clause #3:(3, 8, 13, 18, 23)
100001791 a 18 23 12 19 24 6 15 -1 2 3 4 5 7 10 11 -471 0 57 58 3 0
c Lemma argument #2 (clause (9, 14)) from input clause #4:(4, 9, 14, 19, 24)
100001792 a 18 23 12 19 24 6 15 -1 2 3 4 5 7 10 11 -472 0 60 61 4 0
c Lemma invocation
100001793 a 18 23 12 19 24 6 15 -1 2 3 4 5 7 10 11 417 0 100001791 100001792 100001790 0
c Apply Lemma S395.  Context = [-18, -23, -12, -19, -24, -6, -15, 1, -2, -3, -4, -5, -7, -10, -11]
c Lemma argument #1 (clause (17, 22)) from input clause #2:(2, 7, 12, 17, 22)
100001794 a 18 23 12 19 24 6 15 -1 2 3 4 5 7 10 11 -474 0 66 67 2 0
c Lemma argument #2 (clause (20, 25)) from input clause #5:(5, 10, 15, 20, 25)
100001795 a 18 23 12 19 24 6 15 -1 2 3 4 5 7 10 11 -475 0 69 70 5 0
c Lemma invocation
100001796 a 18 23 12 19 24 6 15 -1 2 3 4 5 7 10 11 395 0 100001794 100001795 100001775 0
c Assert unit clause for AND node P447
100001797 a 447 18 23 12 19 24 6 15 -1 0 6 7 8 9 1041 1042 1044 100001793 100001796 100001471 0
c Apply Lemma S417.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4, -5, -10, -11, -7]
c Lemma argument #1 (clause (8, 13)) from input clause #3:(3, 8, 13, 18, 23)
100001798 a 18 23 12 19 24 6 15 1 -2 3 4 5 10 11 7 -471 0 57 58 3 0
c Lemma argument #2 (clause (9, 14)) from input clause #4:(4, 9, 14, 19, 24)
100001799 a 18 23 12 19 24 6 15 1 -2 3 4 5 10 11 7 -472 0 60 61 4 0
c Lemma invocation
100001800 a 18 23 12 19 24 6 15 1 -2 3 4 5 10 11 7 417 0 100001798 100001799 100001790 0
c Apply Lemma S256.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, 2, -3, -4, -5, -10, -11, -7, -17, -22]
c Lemma argument #1 (clause (16, 21)) from input clause #1:(1, 6, 11, 16, 21)
100001801 a 18 23 12 19 24 6 15 1 -2 3 4 5 10 11 7 17 22 -473 0 63 64 1 0
c Lemma argument #2 (clause (20, 25)) from input clause #5:(5, 10, 15, 20, 25)
100001802 a 18 23 12 19 24 6 15 1 -2 3 4 5 10 11 7 17 22 -475 0 69 70 5 0
c Lemma invocation
100001803 a 18 23 12 19 24 6 15 1 -2 3 4 5 10 11 7 17 22 256 0 100001801 100001802 100001703 0
c Assert unit clause for AND node P444
100001804 a 444 18 23 12 19 24 6 15 1 -2 0 10 11 12 1042 1055 411 100001800 1057 1058 100001803 100001453 0
c Apply Lemma S390.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8, -9, -10, -11, -5]
c Lemma argument #1 (clause (3, 13)) from input clause #3:(3, 8, 13, 18, 23)
100001805 a 18 23 12 19 24 6 15 1 2 -7 8 9 10 11 5 -476 0 72 73 3 0
c Lemma argument #2 (clause (4, 14)) from input clause #4:(4, 9, 14, 19, 24)
100001806 a 18 23 12 19 24 6 15 1 2 -7 8 9 10 11 5 -477 0 75 76 4 0
c Lemma invocation
100001807 a 18 23 12 19 24 6 15 1 2 -7 8 9 10 11 5 390 0 100001805 100001806 100001770 0
c Apply Lemma S256.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, 7, -8, -9, -10, -11, -5, -17, -22]
c Lemma argument #1 (clause (16, 21)) from input clause #1:(1, 6, 11, 16, 21)
100001808 a 18 23 12 19 24 6 15 1 2 -7 8 9 10 11 5 17 22 -473 0 63 64 1 0
c Lemma argument #2 (clause (20, 25)) from input clause #5:(5, 10, 15, 20, 25)
100001809 a 18 23 12 19 24 6 15 1 2 -7 8 9 10 11 5 17 22 -475 0 69 70 5 0
c Lemma invocation
100001810 a 18 23 12 19 24 6 15 1 2 -7 8 9 10 11 5 17 22 256 0 100001808 100001809 100001703 0
c Assert unit clause for AND node P441
100001811 a 441 18 23 12 19 24 6 15 1 2 -7 0 20 21 22 1063 1064 100001807 1066 1068 100001810 100001436 0
c Apply Lemma S417.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, 5, -3, -4, -11, -25, -10]
c Lemma argument #1 (clause (8, 13)) from input clause #3:(3, 8, 13, 18, 23)
100001812 a 18 23 12 19 24 6 15 1 2 7 -5 3 4 11 25 10 -471 0 57 58 3 0
c Lemma argument #2 (clause (9, 14)) from input clause #4:(4, 9, 14, 19, 24)
100001813 a 18 23 12 19 24 6 15 1 2 7 -5 3 4 11 25 10 -472 0 60 61 4 0
c Lemma invocation
100001814 a 18 23 12 19 24 6 15 1 2 7 -5 3 4 11 25 10 417 0 100001812 100001813 100001790 0
c Apply Lemma S407.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, 5, -3, -4, -11, -25, -10]
c Lemma argument #1 (clause (16, 21)) from input clause #1:(1, 6, 11, 16, 21)
100001815 a 18 23 12 19 24 6 15 1 2 7 -5 3 4 11 25 10 -473 0 63 64 1 0
c Lemma argument #2 (clause (17, 22)) from input clause #2:(2, 7, 12, 17, 22)
100001816 a 18 23 12 19 24 6 15 1 2 7 -5 3 4 11 25 10 -474 0 66 67 2 0
c Lemma invocation
100001817 a 18 23 12 19 24 6 15 1 2 7 -5 3 4 11 25 10 407 0 100001815 100001816 100001784 0
c Assert unit clause for AND node P438
100001818 a 438 18 23 12 19 24 6 15 1 2 7 -5 0 14 15 1055 1072 1073 100001814 100001817 100001421 0
c Apply Lemma S390.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, 10, -8, -9, -11, -25]
c Lemma argument #1 (clause (3, 13)) from input clause #3:(3, 8, 13, 18, 23)
100001819 a 18 23 12 19 24 6 15 1 2 7 5 -10 8 9 11 25 -476 0 72 73 3 0
c Lemma argument #2 (clause (4, 14)) from input clause #4:(4, 9, 14, 19, 24)
100001820 a 18 23 12 19 24 6 15 1 2 7 5 -10 8 9 11 25 -477 0 75 76 4 0
c Lemma invocation
100001821 a 18 23 12 19 24 6 15 1 2 7 5 -10 8 9 11 25 390 0 100001819 100001820 100001770 0
c Apply Lemma S407.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, 10, -8, -9, -11, -25]
c Lemma argument #1 (clause (16, 21)) from input clause #1:(1, 6, 11, 16, 21)
100001822 a 18 23 12 19 24 6 15 1 2 7 5 -10 8 9 11 25 -473 0 63 64 1 0
c Lemma argument #2 (clause (17, 22)) from input clause #2:(2, 7, 12, 17, 22)
100001823 a 18 23 12 19 24 6 15 1 2 7 5 -10 8 9 11 25 -474 0 66 67 2 0
c Lemma invocation
100001824 a 18 23 12 19 24 6 15 1 2 7 5 -10 8 9 11 25 407 0 100001822 100001823 100001784 0
c Assert unit clause for AND node P435
100001825 a 435 18 23 12 19 24 6 15 1 2 7 5 -10 0 24 25 1076 1077 100001821 100001824 100001403 0
c Apply Lemma S250.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, -10, 11, -13, -14]
c Lemma argument #1 (clause (3, 8)) from input clause #3:(3, 8, 13, 18, 23)
100001826 a 18 23 12 19 24 6 15 1 2 7 5 10 -11 13 14 -479 0 81 82 3 0
c Lemma argument #2 (clause (4, 9)) from input clause #4:(4, 9, 14, 19, 24)
100001827 a 18 23 12 19 24 6 15 1 2 7 5 10 -11 13 14 -480 0 84 85 4 0
c Lemma invocation
100001828 a 18 23 12 19 24 6 15 1 2 7 5 10 -11 13 14 250 0 100001826 100001827 100001698 0
c Apply Lemma S395.  Context = [-18, -23, -12, -19, -24, -6, -15, -1, -2, -7, -5, -10, 11, -13, -14]
c Lemma argument #1 (clause (17, 22)) from input clause #2:(2, 7, 12, 17, 22)
100001829 a 18 23 12 19 24 6 15 1 2 7 5 10 -11 13 14 -474 0 66 67 2 0
c Lemma argument #2 (clause (20, 25)) from input clause #5:(5, 10, 15, 20, 25)
100001830 a 18 23 12 19 24 6 15 1 2 7 5 10 -11 13 14 -475 0 69 70 5 0
c Lemma invocation
100001831 a 18 23 12 19 24 6 15 1 2 7 5 10 -11 13 14 395 0 100001829 100001830 100001775 0
c Assert unit clause for AND node P436
100001832 a 436 18 23 12 19 24 6 15 1 2 7 5 10 0 1081 27 28 100001828 100001831 100001411 0
c Assert ITE at node S437
100001833 a -10 437 18 23 12 19 24 6 15 1 2 7 5 0 100001825 100001419 0
100001834 a 437 18 23 12 19 24 6 15 1 2 7 5 0 100001833 100001832 100001420 0
c Assert ITE at node S440
100001835 a -5 440 18 23 12 19 24 6 15 1 2 7 0 100001818 100001434 0
100001836 a 440 18 23 12 19 24 6 15 1 2 7 0 100001835 100001834 100001430 100001435 0
c Assert ITE at node S443
100001837 a -7 443 18 23 12 19 24 6 15 1 2 0 100001811 100001451 0
100001838 a 443 18 23 12 19 24 6 15 1 2 0 100001837 100001836 100001447 100001452 0
c Assert ITE at node S446
100001839 a -2 446 18 23 12 19 24 6 15 1 0 100001804 100001469 0
100001840 a 446 18 23 12 19 24 6 15 1 0 100001839 100001838 100001465 100001470 0
c Assert ITE at node S449
100001841 a -1 449 18 23 12 19 24 6 15 0 100001797 100001486 0
100001842 a 449 18 23 12 19 24 6 15 0 100001841 100001840 100001482 100001487 0
c Assert ITE at node S452
100001843 a -15 452 18 23 12 19 24 6 0 100001788 100001505 0
100001844 a 452 18 23 12 19 24 6 0 100001843 100001842 100001501 100001506 0
c Assert ITE at node S455
100001845 a -6 455 18 23 12 19 24 0 100001779 100001524 0
100001846 a 455 18 23 12 19 24 0 100001845 100001844 100001520 100001525 0
c Assert ITE at node S458
100001847 a -24 458 18 23 12 19 0 48 51 55 100001768 100001526 100001536 0
100001848 a 458 18 23 12 19 0 100001847 100001846 100001532 100001537 0
c Assert ITE at node S461
100001849 a -19 461 18 23 12 0 38 41 45 736 100001740 100001538 100001549 0
100001850 a 461 18 23 12 0 100001849 100001848 100001545 100001550 0
c Assert ITE at node S464
100001851 a -12 464 18 23 0 26 30 31 32 100001711 100001551 100001562 0
100001852 a 464 18 23 0 100001851 100001850 100001558 100001563 0
c Assert ITE at node S467
100001853 a -23 467 18 0 47 50 53 54 100001680 100001564 100001575 0
100001854 a 467 18 0 100001853 100001852 100001571 100001576 0
c Assert ITE at node S470 (root)
100001855 a -18 470 0 37 40 43 44 112 100001640 100001577 100001589 0
100001856 a 470 0 100001855 100001854 100001585 100001590 0
c Delete all but final asserted clause
dc 100001855 37 40 43 44 112 100001640 100001577 100001589 0
dc 100001854 100001853 100001852 100001571 100001576 0
dc 100001853 47 50 53 54 100001680 100001564 100001575 0
dc 100001852 100001851 100001850 100001558 100001563 0
dc 100001851 26 30 31 32 100001711 100001551 100001562 0
dc 100001850 100001849 100001848 100001545 100001550 0
dc 100001849 38 41 45 736 100001740 100001538 100001549 0
dc 100001848 100001847 100001846 100001532 100001537 0
dc 100001847 48 51 55 100001768 100001526 100001536 0
dc 100001846 100001845 100001844 100001520 100001525 0
dc 100001845 100001779 100001524 0
dc 100001844 100001843 100001842 100001501 100001506 0
dc 100001843 100001788 100001505 0
dc 100001842 100001841 100001840 100001482 100001487 0
dc 100001841 100001797 100001486 0
dc 100001840 100001839 100001838 100001465 100001470 0
dc 100001839 100001804 100001469 0
dc 100001838 100001837 100001836 100001447 100001452 0
dc 100001837 100001811 100001451 0
dc 100001836 100001835 100001834 100001430 100001435 0
dc 100001835 100001818 100001434 0
dc 100001834 100001833 100001832 100001420 0
dc 100001833 100001825 100001419 0
dc 100001832 1081 27 28 100001828 100001831 100001411 0
dc 100001831 100001829 100001830 100001775 0
dc 100001830 69 70 5 0
dc 100001829 66 67 2 0
dc 100001828 100001826 100001827 100001698 0
dc 100001827 84 85 4 0
dc 100001826 81 82 3 0
dc 100001825 24 25 1076 1077 100001821 100001824 100001403 0
dc 100001824 100001822 100001823 100001784 0
dc 100001823 66 67 2 0
dc 100001822 63 64 1 0
dc 100001821 100001819 100001820 100001770 0
dc 100001820 75 76 4 0
dc 100001819 72 73 3 0
dc 100001818 14 15 1055 1072 1073 100001814 100001817 100001421 0
dc 100001817 100001815 100001816 100001784 0
dc 100001816 66 67 2 0
dc 100001815 63 64 1 0
dc 100001814 100001812 100001813 100001790 0
dc 100001813 60 61 4 0
dc 100001812 57 58 3 0
dc 100001811 20 21 22 1063 1064 100001807 1066 1068 100001810 100001436 0
dc 100001810 100001808 100001809 100001703 0
dc 100001809 69 70 5 0
dc 100001808 63 64 1 0
dc 100001807 100001805 100001806 100001770 0
dc 100001806 75 76 4 0
dc 100001805 72 73 3 0
dc 100001804 10 11 12 1042 1055 411 100001800 1057 1058 100001803 100001453 0
dc 100001803 100001801 100001802 100001703 0
dc 100001802 69 70 5 0
dc 100001801 63 64 1 0
dc 100001800 100001798 100001799 100001790 0
dc 100001799 60 61 4 0
dc 100001798 57 58 3 0
dc 100001797 6 7 8 9 1041 1042 1044 100001793 100001796 100001471 0
dc 100001796 100001794 100001795 100001775 0
dc 100001795 69 70 5 0
dc 100001794 66 67 2 0
dc 100001793 100001791 100001792 100001790 0
dc 100001792 60 61 4 0
dc 100001791 57 58 3 0
dc 100001790 100001789 56 23 59 100001395 100001402 0
dc 100001789 1045 1046 33 100001390 100001401 0
dc 100001788 1019 1020 29 34 35 1024 1025 1026 1028 100001782 100001787 100001488 0
dc 100001787 100001785 100001786 100001784 0
dc 100001786 66 67 2 0
dc 100001785 63 64 1 0
dc 100001784 100001783 1033 39 1035 1036 100001381 100001389 0
dc 100001783 36 42 62 46 100001375 100001388 0
dc 100001782 100001780 100001781 100001698 0
dc 100001781 84 85 4 0
dc 100001780 81 82 3 0
dc 100001779 16 17 18 19 998 999 519 368 1002 100001773 100001778 100001507 0
dc 100001778 100001776 100001777 100001775 0
dc 100001777 69 70 5 0
dc 100001776 66 67 2 0
dc 100001775 100001774 1014 1015 1016 1017 52 100001365 100001374 0
dc 100001774 36 42 1011 1012 68 100001358 100001373 0
dc 100001773 100001771 100001772 100001770 0
dc 100001772 75 76 4 0
dc 100001771 72 73 3 0
dc 100001770 100001769 71 13 74 100001350 100001357 0
dc 100001769 1003 1004 33 100001345 100001356 0
dc 100001768 100001767 100001766 100001339 100001344 0
dc 100001767 6 7 8 9 100001744 100001332 100001343 0
dc 100001766 100001765 100001764 100001326 100001331 0
dc 100001765 16 17 18 19 100001748 100001319 100001330 0
dc 100001764 100001763 971 1 36 39 100001762 100001309 100001318 0
dc 100001763 27 28 29 100001755 100001303 100001317 0
dc 100001762 100001761 100001760 100001297 100001302 0
dc 100001761 12 14 15 2 20 21 22 379 34 100001286 100001301 0
dc 100001760 100001759 992 5 100001758 100001278 100001285 0
dc 100001759 984 10 11 411 24 25 379 34 100001268 100001284 0
dc 100001758 100001756 100001757 100001727 0
dc 100001757 81 82 3 0
dc 100001756 78 79 2 0
dc 100001755 100001754 100001753 100001262 100001267 0
dc 100001754 12 14 15 952 953 23 24 956 957 42 100001250 100001266 0
dc 100001753 100001752 968 651 5 100001751 100001241 100001249 0
dc 100001752 959 960 13 22 24 25 965 966 42 100001230 100001248 0
dc 100001751 100001749 100001750 100001727 0
dc 100001750 81 82 3 0
dc 100001749 78 79 2 0
dc 100001748 100001747 932 367 934 33 100001746 100001220 100001229 0
dc 100001747 922 923 13 14 29 34 35 929 930 42 100001208 100001228 0
dc 100001746 100001745 913 11 943 944 945 100001198 100001207 0
dc 100001745 12 15 909 910 42 100001191 100001206 0
dc 100001744 100001743 902 903 904 33 100001742 100001181 100001190 0
dc 100001743 519 892 893 23 24 29 34 35 899 900 42 100001168 100001189 0
dc 100001742 100001741 519 913 21 915 916 917 100001157 100001167 0
dc 100001741 19 22 25 909 910 42 100001149 100001166 0
dc 100001740 100001739 100001738 100001143 100001148 0
dc 100001739 9 12 14 15 100001715 100001136 100001147 0
dc 100001738 100001737 100001736 100001130 100001135 0
dc 100001737 29 34 35 100001721 100001124 100001134 0
dc 100001736 100001735 395 396 5 100001734 100001115 100001123 0
dc 100001735 19 22 24 25 100001725 100001108 100001122 0
dc 100001734 100001733 100001732 100001102 100001107 0
dc 100001733 6 7 8 519 856 20 21 859 860 33 100001090 100001106 0
dc 100001732 100001731 408 27 28 100001730 100001081 100001089 0
dc 100001731 398 10 11 411 17 18 367 860 33 100001070 100001088 0
dc 100001730 100001728 100001729 100001727 0
dc 100001729 81 82 3 0
dc 100001728 78 79 2 0
dc 100001727 100001726 879 13 881 20 21 100001060 100001069 0
dc 100001726 10 11 411 80 23 100001053 100001068 0
dc 100001725 100001724 100001723 100001047 100001052 0
dc 100001724 6 7 8 281 828 33 830 752 52 100001036 100001051 0
dc 100001723 100001722 841 13 843 27 28 778 847 52 100001023 100001035 0
dc 100001722 10 11 303 836 33 838 46 49 100001013 100001034 0
dc 100001721 100001720 100001719 100001007 100001012 0
dc 100001720 519 324 786 13 16 17 18 19 694 793 52 100000994 100001011 0
dc 100001719 100001718 1 46 49 100001717 100000985 100000993 0
dc 100001718 6 7 8 798 799 23 24 802 803 52 100000973 100000992 0
dc 100001717 100001716 508 10 11 817 23 24 100000962 100000972 0
dc 100001716 411 809 13 20 21 22 100000954 100000971 0
dc 100001715 100001714 756 100001713 100000947 100000953 0
dc 100001714 16 17 18 19 368 748 33 34 694 752 52 100000934 100000952 0
dc 100001713 100001712 770 23 24 773 27 28 776 779 52 100000920 100000933 0
dc 100001712 20 21 22 303 763 33 765 46 49 100000909 100000932 0
dc 100001711 100001710 100001709 100000903 100000908 0
dc 100001710 48 51 55 624 100001689 100000896 100000907 0
dc 100001709 100001708 100001707 100000895 0
dc 100001708 38 41 45 100001696 100000875 100000894 0
dc 100001707 706 707 708 711 712 713 100001701 720 721 100001706 100000881 0
dc 100001706 100001704 100001705 100001703 0
dc 100001705 69 70 5 0
dc 100001704 63 64 1 0
dc 100001703 100001702 725 68 727 100000867 100000874 0
dc 100001702 722 39 49 100000862 100000873 0
dc 100001701 100001699 100001700 100001698 0
dc 100001700 84 85 4 0
dc 100001699 81 82 3 0
dc 100001698 100001697 717 718 719 100000854 100000861 0
dc 100001697 13 80 23 100000849 100000860 0
dc 100001696 100001695 100001694 100000843 100000848 0
dc 100001695 6 7 8 9 519 190 680 23 24 683 396 685 100000829 100000847 0
dc 100001694 100001693 698 702 1 46 49 100001692 100000818 100000828 0
dc 100001693 686 687 13 14 16 17 18 19 694 396 696 100000805 100000827 0
dc 100001692 100001690 100001691 100001682 0
dc 100001691 87 88 5 0
dc 100001690 81 82 3 0
dc 100001689 100001688 100001687 100000799 100000804 0
dc 100001688 6 7 8 9 630 632 633 23 24 542 637 639 100000785 100000803 0
dc 100001687 100001686 655 657 1 36 39 100001685 100000774 100000784 0
dc 100001686 640 641 13 14 16 17 18 19 649 651 653 100000761 100000783 0
dc 100001685 100001683 100001684 100001682 0
dc 100001684 87 88 5 0
dc 100001683 81 82 3 0
dc 100001682 100001681 666 667 668 669 670 100000751 100000760 0
dc 100001681 12 14 80 23 24 100000744 100000759 0
dc 100001680 100001679 431 100001678 100000737 100000743 0
dc 100001679 38 41 45 100001644 100000731 100000742 0
dc 100001678 100001677 100001676 100000725 100000730 0
dc 100001677 26 30 31 32 438 100001650 100000717 100000729 0
dc 100001676 100001675 100001674 100000711 100000716 0
dc 100001675 29 34 35 480 100001656 100000704 100000715 0
dc 100001674 100001673 100001672 100000698 100000703 0
dc 100001673 16 17 18 19 518 100001658 100000690 100000702 0
dc 100001672 100001671 100001670 100000684 100000689 0
dc 100001671 6 8 9 541 100001660 100000677 100000688 0
dc 100001670 100001669 100001668 100000671 100000676 0
dc 100001669 22 24 25 100001662 100000665 100000675 0
dc 100001668 100001667 600 27 28 603 606 607 100001666 100000653 100000664 0
dc 100001667 12 15 100001664 100000648 100000663 0
dc 100001666 100001665 612 11 614 615 100000639 100000647 0
dc 100001665 411 609 20 611 100000633 100000646 0
dc 100001664 100001663 590 591 592 27 28 595 598 42 100000620 100000632 0
dc 100001663 20 21 584 261 586 587 36 39 100000610 100000631 0
dc 100001662 100001661 572 11 12 261 576 577 36 39 100000597 100000609 0
dc 100001661 564 282 15 27 28 569 570 42 100000587 100000608 0
dc 100001660 100001659 552 20 21 555 261 557 559 560 100000574 100000586 0
dc 100001659 22 24 25 547 261 549 550 42 100000564 100000585 0
dc 100001658 100001657 269 11 530 261 533 534 536 537 100000551 100000563 0
dc 100001657 12 15 522 261 524 475 526 42 100000541 100000562 0
dc 100001656 100001655 100001654 100000535 100000540 0
dc 100001655 481 482 326 15 16 17 18 19 489 349 100000523 100000539 0
dc 100001654 100001653 1 36 100001652 100000515 100000522 0
dc 100001653 6 8 9 494 192 298 25 449 499 100000504 100000521 0
dc 100001652 100001651 508 11 12 511 512 25 100000493 100000503 0
dc 100001651 411 503 15 20 21 22 100000485 100000502 0
dc 100001650 100001649 100001648 100000479 100000484 0
dc 100001649 6 8 9 442 443 192 4 25 447 5 100000467 100000483 0
dc 100001648 100001647 463 1 39 100001646 100000458 100000466 0
dc 100001647 451 452 15 16 17 456 19 459 5 100000447 100000465 0
dc 100001646 100001645 229 472 473 474 475 100000437 100000446 0
dc 100001645 466 15 22 24 25 100000430 100000445 0
dc 100001644 100001641 100001642 100001643 100001600 0
dc 100001643 98 99 100 5 0
dc 100001642 94 95 96 2 0
dc 100001641 90 91 92 1 0
dc 100001640 100001639 100001638 100000424 100000429 0
dc 100001639 48 51 55 100001604 100000418 100000428 0
dc 100001638 100001637 100001636 100000412 100000417 0
dc 100001637 26 30 31 32 100001610 100000405 100000416 0
dc 100001636 100001635 100001634 100000399 100000404 0
dc 100001635 6 7 8 9 100001614 100000392 100000403 0
dc 100001634 100001633 100001632 100000386 100000391 0
dc 100001633 19 22 24 25 295 100001616 100000378 100000390 0
dc 100001632 100001631 100001630 100000372 100000377 0
dc 100001631 29 34 35 100001620 100000366 100000376 0
dc 100001630 100001629 395 396 5 100001628 100000357 100000365 0
dc 100001629 12 14 15 356 100001624 100000350 100000364 0
dc 100001628 100001627 408 27 28 100001626 100000341 100000349 0
dc 100001627 398 10 11 401 17 18 367 406 407 100000330 100000348 0
dc 100001626 100001625 416 10 11 419 407 100000320 100000329 0
dc 100001625 411 412 413 20 21 100000313 100000328 0
dc 100001624 100001623 100001622 100000307 100000312 0
dc 100001623 16 17 18 363 261 370 373 374 100000297 100000311 0
dc 100001622 100001621 384 385 389 27 28 392 394 100000285 100000296 0
dc 100001621 20 21 303 261 380 382 46 100000276 100000295 0
dc 100001620 100001619 1 46 49 100001618 100000267 100000275 0
dc 100001619 324 325 326 15 16 17 18 331 332 52 100000255 100000274 0
dc 100001618 100001617 345 347 15 349 20 21 100000244 100000254 0
dc 100001617 10 11 12 340 343 344 100000236 100000253 0
dc 100001616 100001615 309 312 15 314 27 28 317 319 52 100000222 100000235 0
dc 100001615 10 11 12 303 304 305 306 46 49 100000211 100000234 0
dc 100001614 100001613 100001612 100000205 100000210 0
dc 100001613 241 244 245 246 25 29 34 35 196 254 52 100000192 100000209 0
dc 100001612 100001611 268 273 274 277 280 283 284 287 288 52 100000177 100000191 0
dc 100001611 16 20 21 22 260 261 191 263 265 266 100000165 100000190 0
dc 100001610 100001609 100001608 100000159 100000164 0
dc 100001609 6 7 8 9 189 191 192 193 25 196 197 198 100000145 100000163 0
dc 100001608 100001607 211 1 46 49 100001606 100000135 100000144 0
dc 100001607 199 200 201 15 16 17 18 19 208 209 210 100000122 100000143 0
dc 100001606 100001605 228 229 231 232 233 234 100000111 100000121 0
dc 100001605 220 221 15 22 24 25 100000103 100000120 0
dc 100001604 100001601 100001602 100001603 100001600 0
dc 100001603 98 99 100 5 0
dc 100001602 94 95 96 2 0
dc 100001601 90 91 92 1 0
dc 100001600 100001599 100001598 100000097 100000102 0
dc 100001599 117 118 26 30 31 32 100001592 100000088 100000101 0
dc 100001598 100001597 157 100001596 100000081 100000087 0
dc 100001597 137 29 34 35 100001594 100000074 100000086 0
dc 100001596 100001595 169 170 171 97 173 174 20 21 177 27 28 100000058 100000073 0
dc 100001595 158 10 11 12 19 22 24 25 153 27 28 100000045 100000072 0
dc 100001594 100001593 149 10 11 12 153 16 17 18 100000032 100000044 0
dc 100001593 6 7 8 9 145 146 20 21 100000022 100000043 0
dc 100001592 100001591 130 131 132 133 16 18 19 100000010 100000021 0
dc 100001591 6 7 9 126 127 128 97 100000001 100000020 0
dc 1081 721 2 552 36 408 0
dc 1080 49 54 55 19 1078 6 10 11 1 37 38 1042 0
dc 1079 49 54 55 19 1078 6 10 11 1 37 38 1042 0
dc 1078 52 54 55 22 1077 7 8 374 407 752 0
dc 1077 49 52 54 55 19 22 24 25 1 36 37 38 910 2 3 31 13 4 0
dc 1076 27 584 3 13 0
dc 1073 19 22 24 25 12 14 388 0
dc 1072 12 359 0
dc 1068 46 50 51 52 16 266 1067 7 8 244 276 0
dc 1067 46 50 51 52 16 1 600 37 38 34 1024 0
dc 1066 36 40 41 16 559 916 1065 1 7 8 633 494 0
dc 1065 47 48 40 41 1024 0
dc 1064 14 15 261 3 0
dc 1063 27 28 1024 0
dc 1059 46 50 51 6 1058 34 35 324 1 37 38 3 192 0
dc 1058 50 51 396 6 10 11 721 44 45 17 18 261 3 0
dc 1057 651 535 0
dc 1055 27 28 3 192 0
dc 1046 33 59 0
dc 1045 33 23 59 0
dc 1044 26 29 903 1043 51 55 552 0
dc 1043 26 29 23 584 41 45 273 0
dc 1042 24 25 3 261 0
dc 1041 20 21 3 261 0
dc 1036 36 65 0
dc 1035 46 36 65 0
dc 1033 62 65 46 0
dc 1028 49 52 54 55 32 2 36 40 41 1 17 18 3 4 13 0
dc 1027 49 54 55 36 40 41 1 17 18 3 4 13 0
dc 1026 10 11 192 3 0
dc 1025 19 22 24 25 299 0
dc 1024 20 21 4 3 13 0
dc 1020 9 12 14 15 326 756 0
dc 1019 34 35 707 0
dc 1017 42 65 0
dc 1016 46 42 65 0
dc 1015 65 1012 0
dc 1014 36 39 65 1012 0
dc 1012 52 68 0
dc 1011 49 68 0
dc 1004 33 74 0
dc 1003 33 13 74 0
dc 1002 10 11 261 3 0
dc 999 34 35 3 4 13 0
dc 998 14 15 3 261 0
dc 992 34 5 0
dc 984 22 2 0
dc 971 28 31 33 35 1 36 37 39 732 0
dc 968 39 5 0
dc 966 26 10 2 0
dc 965 605 27 0
dc 960 53 26 22 24 2 3 40 0
dc 959 53 24 10 3 0
dc 957 26 20 2 0
dc 956 604 27 0
dc 953 53 394 522 0
dc 952 20 633 0
dc 945 34 12 5 0
dc 944 36 41 27 34 6 12 535 637 19 25 1 261 48 0
dc 943 38 39 33 34 12 411 650 419 5 0
dc 934 48 633 650 518 40 1 2 640 0
dc 932 10 14 552 0
dc 930 10 508 0
dc 929 36 38 39 10 653 0
dc 923 34 508 633 40 0
dc 922 34 10 633 0
dc 917 27 34 733 0
dc 916 36 41 42 27 34 16 22 733 261 8 229 408 0
dc 915 38 39 27 34 16 22 411 395 543 406 600 0
dc 913 30 34 552 0
dc 910 30 2 0
dc 909 36 38 30 4 2 51 0
dc 904 633 40 44 2 5 22 0
dc 903 26 27 28 29 282 191 272 279 197 2 394 637 54 0
dc 902 20 24 2 637 0
dc 900 32 20 2 0
dc 899 36 38 39 639 0
dc 893 53 32 34 2 3 40 0
dc 892 53 34 20 3 0
dc 881 10 77 0
dc 879 80 77 20 0
dc 860 54 680 0
dc 859 9 555 0
dc 856 52 2 0
dc 847 26 10 2 584 41 0
dc 843 7 10 1 2 46 0
dc 841 312 701 0
dc 838 27 261 6 38 1 0
dc 836 6 817 1 0
dc 830 287 802 0
dc 828 43 3 2 50 0
dc 817 47 43 3 0
dc 809 47 20 680 0
dc 803 20 4 508 41 0
dc 802 683 9 0
dc 799 680 508 50 0
dc 798 20 21 193 0
dc 793 10 4 508 41 0
dc 786 16 687 508 50 0
dc 779 26 20 584 2 41 0
dc 778 46 47 48 49 318 26 29 776 393 4 41 45 5 22 24 2 303 10 0
dc 777 46 47 48 49 318 26 29 393 4 41 45 776 5 22 24 2 303 10 0
dc 776 46 48 318 26 393 12 232 4 2 41 0
dc 773 17 20 1 2 46 0
dc 770 388 768 26 30 107 680 0
dc 769 768 26 30 107 680 0
dc 768 2 389 50 27 680 0
dc 765 27 16 1 503 0
dc 763 16 680 1 47 0
dc 758 29 756 358 542 341 1 755 46 0
dc 757 29 358 756 542 341 1 755 46 0
dc 756 29 34 35 586 755 46 50 51 1 37 38 706 0
dc 755 29 34 35 508 36 40 41 1 47 343 3 0
dc 754 46 50 29 34 35 1 37 38 706 0
dc 752 30 261 2 41 0
dc 748 43 3 2 50 0
dc 738 48 53 55 43 736 26 30 32 623 228 5 633 9 17 1 0
dc 737 48 53 55 43 736 26 30 32 623 228 5 633 9 17 1 0
dc 736 48 51 53 43 734 29 34 735 2 16 20 1 3 7 0
dc 735 48 53 43 29 34 6 10 3 1 17 0
dc 734 48 51 55 732 27 733 2 6 12 1 5 19 0
dc 733 48 55 16 22 1 5 9 0
dc 732 51 53 55 731 2 20 22 3 228 0
dc 731 55 10 12 633 5 24 0
dc 727 39 62 0
dc 725 39 68 0
dc 722 49 62 0
dc 721 46 396 1 39 0
dc 720 36 42 1 395 0
dc 719 13 83 0
dc 718 23 13 83 0
dc 717 80 83 23 0
dc 713 10 11 12 305 0
dc 712 24 25 3 4 13 0
dc 711 16 20 22 709 494 13 3 47 54 1 229 39 0
dc 710 16 20 22 191 709 3 47 54 1 229 39 0
dc 709 37 44 16 22 380 1 5 49 0
dc 708 17 18 3 4 13 0
dc 707 7 8 192 3 0
dc 706 14 15 192 3 0
dc 702 16 22 1 380 5 49 0
dc 701 43 13 699 29 32 34 105 314 3 20 0
dc 700 13 699 29 32 34 105 314 3 20 0
dc 699 8 698 27 30 1 314 49 22 229 0
dc 698 8 11 13 15 697 1 26 109 273 3 0
dc 697 47 49 13 229 3 24 0
dc 696 10 228 508 0
dc 694 46 47 48 49 236 208 372 4 41 45 5 34 299 508 324 0
dc 687 43 17 3 0
dc 686 10 12 188 0
dc 685 20 5 508 0
dc 683 46 49 231 0
dc 680 43 3 0
dc 670 14 86 0
dc 669 25 14 86 0
dc 668 24 14 86 0
dc 667 80 86 24 0
dc 666 10 12 80 86 24 0
dc 657 16 22 1 39 473 5 0
dc 656 53 8 13 1 37 39 3 229 24 0
dc 655 8 13 1 37 39 3 229 24 0
dc 654 10 652 396 5 2 55 31 4 0
dc 653 652 396 5 2 55 31 4 0
dc 652 35 508 4 51 0
dc 651 42 5 0
dc 650 38 39 475 461 649 10 534 4 379 55 34 5 0
dc 649 36 38 39 648 396 5 2 55 31 4 0
dc 648 36 38 35 508 4 51 0
dc 641 53 17 3 0
dc 640 53 17 19 10 12 5 3 44 0
dc 639 23 638 273 5 31 55 4 0
dc 638 32 35 20 192 2 51 0
dc 637 42 5 0
dc 633 53 3 0
dc 632 48 53 16 20 22 411 260 543 557 266 0
dc 631 519 0
dc 630 326 272 0
dc 625 53 38 43 45 623 5 228 9 3 1 17 0
dc 624 38 43 45 623 5 228 9 3 1 17 0
dc 623 38 43 19 24 1 3 7 0
dc 615 44 45 10 4 3 53 0
dc 614 45 192 0
dc 612 42 26 2 0
dc 611 15 456 0
dc 609 45 494 0
dc 607 29 5 0
dc 606 42 29 5 0
dc 605 36 38 26 597 603 12 15 473 4 2 51 0
dc 604 36 38 26 597 603 12 15 473 4 2 51 0
dc 603 36 37 38 39 26 29 597 569 4 51 53 55 5 22 24 2 3 10 0
dc 600 1 5 39 0
dc 598 26 21 2 0
dc 597 37 39 29 595 23 25 10 12 3 5 54 0
dc 596 37 39 29 23 25 595 10 12 3 5 54 0
dc 595 36 37 39 26 29 21 23 25 2 416 228 50 3 0
dc 592 18 21 9 1 2 36 0
dc 591 14 388 0
dc 590 17 20 23 9 584 1 2 36 0
dc 587 28 16 9 1 0
dc 586 473 380 0
dc 584 28 4 0
dc 577 28 19 6 1 0
dc 576 10 305 0
dc 572 19 1 2 36 0
dc 570 26 11 2 0
dc 569 36 37 39 26 29 11 13 109 273 3 0
dc 564 28 11 4 0
dc 560 35 22 5 0
dc 559 36 40 42 28 33 35 16 22 558 5 9 14 1 3 47 0
dc 558 49 54 36 40 28 33 1 3 7 0
dc 557 9 443 0
dc 555 27 28 29 443 0
dc 552 2 5 42 0
dc 550 31 2 0
dc 549 6 7 285 0
dc 547 282 7 0
dc 543 36 38 7 541 466 448 32 34 35 4 379 51 20 2 0
dc 542 36 38 466 448 541 32 34 35 4 379 51 20 2 0
dc 541 36 37 38 39 466 448 5 54 55 406 3 4 273 31 0
dc 537 35 12 5 0
dc 536 36 40 42 28 33 35 6 10 12 535 5 19 24 1 3 47 0
dc 535 49 54 55 36 6 10 1 267 0
dc 534 37 39 33 35 10 12 3 5 54 0
dc 533 10 11 12 305 0
dc 531 16 17 18 367 0
dc 530 27 28 29 10 12 407 5 44 45 3 4 53 0
dc 526 28 31 111 0
dc 524 14 381 388 371 0
dc 522 367 14 388 0
dc 519 6 8 9 442 0
dc 518 6 7 8 9 442 298 279 30 31 407 5 44 45 3 4 53 0
dc 512 6 411 297 0
dc 511 38 192 0
dc 508 32 2 0
dc 503 38 494 0
dc 499 32 21 2 0
dc 494 21 4 0
dc 489 475 461 0
dc 482 18 11 4 0
dc 481 16 17 18 6 7 8 9 298 272 0
dc 480 39 42 44 45 32 106 3 17 20 23 314 4 343 51 1 2 6 0
dc 479 39 42 45 17 20 23 314 4 343 51 1 2 6 0
dc 475 12 14 15 311 0
dc 474 38 23 15 4 0
dc 473 20 21 14 15 379 0
dc 472 358 5 0
dc 466 22 24 25 311 0
dc 463 10 11 12 305 0
dc 461 36 37 11 13 459 32 34 2 3 50 0
dc 460 36 37 11 13 459 32 34 2 3 50 0
dc 459 36 37 39 11 13 396 229 2 54 30 3 0
dc 457 18 0
dc 456 18 21 23 25 8 11 13 208 448 1 26 27 29 197 2 394 42 54 229 0
dc 452 18 4 0
dc 451 30 31 199 0
dc 449 36 37 21 23 7 447 32 34 2 3 50 0
dc 448 36 37 21 23 447 32 34 2 3 50 0
dc 447 36 37 39 23 5 274 54 30 3 0
dc 443 7 191 0
dc 442 16 17 18 7 298 272 0
dc 438 36 40 41 42 108 3 17 436 49 55 1 192 8 0
dc 437 36 41 17 436 49 55 1 192 8 0
dc 436 36 41 42 17 24 229 5 343 9 1 0
dc 431 7 10 13 14 428 4 18 21 25 429 1 26 29 2 5 42 0
dc 430 7 10 13 14 4 18 21 25 429 1 26 29 2 5 42 0
dc 429 36 39 21 25 10 14 2 5 32 0
dc 428 28 31 35 7 10 14 269 1 36 39 2 5 22 0
dc 419 55 192 0
dc 416 52 26 2 0
dc 413 54 55 20 21 193 0
dc 412 55 21 13 4 0
dc 411 10 11 12 342 0
dc 408 49 1 0
dc 407 54 55 193 0
dc 406 55 261 0
dc 402 16 0
dc 401 12 342 0
dc 398 52 16 2 0
dc 396 52 5 0
dc 395 49 5 0
dc 394 26 21 23 2 3 40 0
dc 393 46 47 49 26 29 21 23 25 392 3 10 14 2 5 42 0
dc 392 46 49 40 44 26 29 21 25 2 5 12 0
dc 389 18 21 9 1 2 46 0
dc 388 9 311 387 26 31 1 234 46 0
dc 387 311 386 48 51 53 1 2 27 40 3 0
dc 386 311 385 47 50 1 2 28 41 4 0
dc 385 311 303 1 46 2 40 41 3 261 0
dc 384 17 20 9 192 2 28 46 1 0
dc 382 28 33 16 9 1 3 37 0
dc 381 16 9 232 1 37 38 3 4 53 0
dc 380 16 20 21 9 14 15 1 47 48 193 0
dc 379 37 38 3 4 53 0
dc 374 31 33 2 3 40 0
dc 373 46 47 48 31 19 331 372 12 14 2 267 0
dc 372 46 49 31 35 263 5 10 42 2 0
dc 371 311 326 272 370 51 53 2 3 40 0
dc 370 17 4 193 41 111 0
dc 368 26 27 28 29 366 199 52 54 55 2 40 41 3 4 13 0
dc 367 26 27 28 29 199 366 52 54 55 2 40 41 3 4 13 0
dc 366 26 27 28 29 19 199 365 13 15 5 269 44 3 0
dc 365 26 27 28 29 19 199 364 14 5 42 45 2 4 51 0
dc 364 26 27 28 29 199 363 51 53 2 3 40 0
dc 363 26 27 28 29 4 201 199 41 50 2 0
dc 359 49 54 55 9 357 26 30 31 201 1 37 38 3 4 23 0
dc 358 49 54 55 357 26 30 31 201 1 37 38 3 4 23 0
dc 357 49 52 54 55 356 38 41 2 16 20 21 1 303 0
dc 356 49 52 54 55 355 2 36 40 267 1 27 28 3 4 23 0
dc 355 49 54 55 16 20 21 303 261 1 3 37 0
dc 349 32 11 2 0
dc 347 47 48 32 244 2 40 41 3 4 23 0
dc 346 47 48 32 2 40 41 3 4 23 0
dc 345 48 32 10 13 2 4 21 0
dc 344 32 34 297 6 7 8 246 51 53 2 3 40 0
dc 343 48 23 4 0
dc 342 16 20 21 6 260 341 49 54 55 1 37 38 3 4 33 0
dc 341 16 20 21 22 340 260 1 37 38 39 5 34 35 3 4 53 0
dc 340 47 48 20 21 22 244 263 4 5 45 0
dc 332 32 11 13 3 2 40 0
dc 331 19 15 208 0
dc 326 32 34 16 17 241 51 53 2 3 40 0
dc 325 18 13 4 0
dc 324 17 18 10 11 193 0
dc 319 26 11 13 2 3 40 0
dc 318 46 47 49 26 29 11 13 15 317 3 20 24 2 5 42 0
dc 317 46 49 40 44 26 29 11 15 5 2 22 0
dc 314 8 11 2 1 46 0
dc 312 282 287 1 36 37 38 310 2 30 31 3 4 53 0
dc 311 36 37 38 310 2 30 31 3 4 53 0
dc 310 50 51 37 38 4 3 33 0
dc 309 7 10 13 2 4 46 28 1 0
dc 306 28 33 6 3 1 37 0
dc 305 199 215 0
dc 304 33 4 0
dc 303 27 28 193 0
dc 299 32 34 297 6 7 8 246 51 53 2 3 40 0
dc 298 32 34 6 7 8 246 51 53 2 3 40 0
dc 297 29 32 34 296 48 51 53 1 36 37 2 3 10 0
dc 296 29 32 35 295 47 50 1 38 4 11 2 36 0
dc 295 29 32 34 35 294 4 38 41 43 1 3 46 10 2 0
dc 294 29 32 34 11 13 3 37 40 1 2 46 0
dc 288 31 33 22 24 2 3 40 0
dc 287 46 47 22 24 221 31 33 2 3 40 0
dc 286 19 24 285 6 214 48 53 1 3 37 0
dc 285 22 24 284 51 53 2 3 40 0
dc 284 22 24 25 4 41 43 2 3 50 0
dc 283 33 25 4 0
dc 282 26 27 22 24 280 51 53 2 3 40 0
dc 281 26 27 22 24 280 51 53 2 3 40 0
dc 280 26 27 28 22 24 25 4 41 43 2 3 50 0
dc 279 277 51 55 2 5 42 0
dc 278 277 51 55 2 5 42 0
dc 277 276 2 40 41 42 4 5 33 54 3 0
dc 276 52 5 45 264 4 0
dc 275 40 41 3 4 33 0
dc 274 21 25 2 5 52 0
dc 273 20 24 2 5 52 0
dc 272 16 19 271 269 268 51 55 2 5 42 0
dc 271 30 31 17 18 19 188 4 53 55 3 5 44 0
dc 270 16 19 269 268 51 55 2 5 42 0
dc 269 50 54 16 19 2 5 42 0
dc 268 16 17 18 19 267 2 52 5 44 45 3 4 33 0
dc 267 40 41 17 18 3 4 33 0
dc 266 28 33 35 5 39 44 1 3 7 0
dc 265 46 50 52 28 33 35 264 5 9 14 1 3 37 0
dc 264 46 50 39 44 28 33 1 3 7 0
dc 263 47 49 33 35 3 5 44 0
dc 261 33 4 0
dc 260 27 28 29 191 0
dc 254 32 21 23 2 3 40 0
dc 248 32 34 246 51 53 2 3 40 0
dc 247 32 34 246 51 53 2 3 40 0
dc 246 32 34 35 4 41 43 2 3 50 0
dc 245 35 23 4 0
dc 244 34 35 20 21 3 4 43 0
dc 243 32 34 16 17 241 51 53 2 3 40 0
dc 242 32 34 16 17 241 51 53 2 3 40 0
dc 241 32 34 35 16 18 4 201 41 50 2 0
dc 236 47 12 14 234 31 33 2 3 40 0
dc 235 47 12 14 234 31 33 2 3 40 0
dc 234 47 48 12 14 15 4 41 43 2 3 30 0
dc 233 48 23 15 4 0
dc 232 47 48 20 21 14 15 4 3 43 0
dc 231 47 48 196 230 5 32 34 35 4 41 43 2 3 20 0
dc 230 47 48 42 44 45 4 31 33 2 3 20 0
dc 229 15 5 0
dc 228 14 5 0
dc 223 47 22 24 221 31 33 2 3 40 0
dc 222 47 22 24 221 31 2 40 3 33 0
dc 221 47 48 22 24 25 4 43 3 30 2 41 0
dc 220 48 25 13 4 0
dc 216 6 10 12 214 48 53 55 1 37 39 3 5 24 0
dc 215 6 10 12 214 48 53 55 1 37 39 3 5 24 0
dc 214 6 11 12 213 47 54 1 38 4 25 5 39 0
dc 213 10 11 212 44 45 3 4 23 0
dc 212 6 10 12 211 43 3 24 5 49 1 38 0
dc 211 6 10 11 12 4 23 25 3 5 49 1 37 0
dc 210 11 13 5 42 44 2 3 30 0
dc 209 50 52 13 3 5 44 0
dc 208 46 47 49 11 13 207 5 32 34 2 3 40 0
dc 207 46 47 42 44 11 13 2 3 30 0
dc 201 17 18 3 4 43 0
dc 200 18 4 13 0
dc 199 17 18 19 10 11 12 188 4 53 55 3 5 44 0
dc 198 21 23 5 42 44 2 3 30 0
dc 197 50 23 3 44 5 52 0
dc 196 46 47 21 23 49 195 5 32 34 2 3 40 0
dc 195 46 47 42 44 21 23 2 3 30 0
dc 193 3 4 43 0
dc 192 4 23 0
dc 191 20 21 22 190 4 53 55 3 5 44 0
dc 190 43 45 20 22 3 5 54 0
dc 189 17 18 19 188 4 53 55 3 5 44 0
dc 188 43 45 17 19 3 5 54 0
dc 177 16 133 0
dc 174 12 93 0
dc 173 16 12 93 0
dc 171 15 97 0
dc 170 14 97 0
dc 169 12 97 0
dc 158 22 93 0
dc 157 6 9 93 127 0
dc 153 6 89 0
dc 149 145 89 0
dc 146 32 93 0
dc 145 32 16 93 0
dc 137 29 32 19 22 93 89 6 0
dc 133 9 89 0
dc 132 89 126 0
dc 131 7 89 126 14 0
dc 130 6 12 89 126 0
dc 128 25 97 0
dc 127 22 97 0
dc 126 19 97 0
dc 118 26 32 17 89 9 97 24 0
dc 117 26 32 8 15 89 97 19 0
dc 113 47 50 54 110 106 28 31 111 5 19 22 1 2 6 0
dc 112 47 50 54 106 110 28 31 111 5 19 22 1 2 6 0
dc 111 47 50 9 12 1 2 16 0
dc 110 50 53 54 106 108 26 109 4 21 25 2 5 12 0
dc 109 50 54 11 15 2 5 22 0
dc 108 47 53 54 107 4 8 1 19 5 15 0
dc 107 47 18 25 1 54 5 9 0
dc 106 47 50 53 29 32 35 105 4 18 1 21 2 6 0
dc 105 47 29 8 1 50 32 11 16 2 0
dc 104 47 53 29 35 19 25 1 4 8 0
c Delete input clauses
dc 1 100000002 100000015 100000019 100000096 100000023 100000038 100000042 100000080 100000055 100000068 100000071 100000084 100000085 100000099 100000100 100000423 100000146 100000123 100000138 100000142 100000161 100000162 100000411 100000393 100000219 100000227 100000233 100000385 100000256 100000269 100000273 100000371 100000298 100000283 100000289 100000294 100000309 100000310 100000356 100000331 100000343 100000347 100000362 100000363 100000374 100000375 100000388 100000389 100000401 100000402 100000414 100000415 100000426 100000427 100001584 100000736 100000468 100000448 100000461 100000464 100000481 100000482 100000724 100000524 100000505 100000517 100000520 100000537 100000538 100000710 100000691 100000678 100000588 100000604 100000607 100000670 100000617 100000624 100000630 100000652 100000655 100000662 100000673 100000674 100000686 100000687 100000700 100000701 100000713 100000714 100000727 100000728 100000740 100000741 100001570 100000786 100000762 100000778 100000782 100000801 100000802 100000902 100000830 100000806 100000822 100000826 100000845 100000846 100000880 100000864 100000871 100000872 100000892 100000893 100000905 100000906 100001557 100000935 100000917 100000925 100000931 100000950 100000951 100001142 100000995 100000974 100000987 100000991 100001009 100001010 100001129 100001037 100001020 100001027 100001033 100001049 100001050 100001114 100001091 100001071 100001083 100001087 100001104 100001105 100001120 100001121 100001132 100001133 100001145 100001146 100001544 100001333 100001320 100001304 100001312 100001316 100001328 100001329 100001341 100001342 100001531 100001508 100001379 100001383 100001387 100001500 100001472 100001464 100001446 100001429 100001410 100001413 100001418 100001432 100001433 100001449 100001450 100001467 100001468 100001484 100001485 100001503 100001504 100001522 100001523 100001534 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc
dc
dc 5 100000009 100000014 100000019 100000096 100000075 100000046 100000063 100000071 100000084 100000085 100000099 100000100 100000423 100000158 100000134 100000104 100000115 100000119 100000141 100000142 100000161 100000162 100000411 100000193 100000176 100000182 100000189 100000207 100000208 100000398 100000379 100000367 100000351 100000361 100000363 100000374 100000375 100000388 100000389 100000401 100000402 100000414 100000415 100000426 100000427 100001584 100000736 100000478 100000457 100000431 100000440 100000444 100000463 100000464 100000481 100000482 100000724 100000705 100000542 100000560 100000561 100000697 100000565 100000583 100000584 100000683 100000666 100000649 100000660 100000662 100000673 100000674 100000686 100000687 100000700 100000701 100000713 100000714 100000727 100000728 100000740 100000741 100001570 100000798 100000773 100000745 100000757 100000758 100000781 100000782 100000801 100000802 100000902 100000842 100000817 100000825 100000826 100000845 100000846 100000880 100000863 100000870 100000872 100000892 100000893 100000905 100000906 100001557 100001137 100001125 100001109 100001119 100001121 100001132 100001133 100001145 100001146 100001544 100001169 100001150 100001164 100001165 100001187 100001188 100001338 100001209 100001192 100001204 100001205 100001226 100001227 100001325 100001251 100001231 100001245 100001247 100001264 100001265 100001308 100001287 100001269 100001281 100001283 100001299 100001300 100001315 100001316 100001328 100001329 100001341 100001342 100001531 100001364 100001368 100001372 100001519 100001489 100001481 100001464 100001446 100001422 100001404 100001417 100001418 100001432 100001433 100001449 100001450 100001467 100001468 100001484 100001485 100001503 100001504 100001522 100001523 100001534 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc
dc
dc 9 100000005 100000011 100000019 100000096 100000027 100000033 100000042 100000080 100000083 100000085 100000099 100000100 100000423 100000150 100000160 100000162 100000411 100000397 100000400 100000402 100000414 100000415 100000426 100000427 100001584 100000736 100000471 100000480 100000482 100000724 100000525 100000508 100000516 100000520 100000537 100000538 100000710 100000696 100000681 100000685 100000687 100000700 100000701 100000713 100000714 100000727 100000728 100000740 100000741 100001570 100000790 100000800 100000802 100000902 100000834 100000844 100000846 100000880 100000883 100000893 100000905 100000906 100001557 100001138 100001144 100001146 100001544 100001337 100001340 100001342 100001531 100001513 100001490 100001476 100001483 100001485 100001503 100001504 100001522 100001523 100001534 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc
dc
dc
dc
dc
dc
dc
dc 18 100000006 100000017 100000019 100000096 100000028 100000041 100000042 100000080 100000051 100000064 100000071 100000084 100000085 100000099 100000100 100000423 100000151 100000130 100000136 100000142 100000161 100000162 100000411 100000194 100000167 100000179 100000189 100000207 100000208 100000398 100000380 100000263 100000268 100000273 100000371 100000301 100000308 100000310 100000356 100000337 100000342 100000347 100000362 100000363 100000374 100000375 100000388 100000389 100000401 100000402 100000414 100000415 100000426 100000427 100001584 100000736 100000472 100000454 100000459 100000464 100000481 100000482 100000724 100000531 100000536 100000538 100000710 100000694 100000699 100000701 100000713 100000714 100000727 100000728 100000740 100000741 100001570 100000791 100000769 100000775 100000782 100000801 100000802 100000902 100000835 100000813 100000819 100000826 100000845 100000846 100000880 100000885 100000893 100000905 100000906 100001557 100000938 100000948 100000951 100001142 100001002 100001008 100001010 100001129 100001110 100001095 100001077 100001082 100001087 100001104 100001105 100001120 100001121 100001132 100001133 100001145 100001146 100001544 100001170 100001151 100001159 100001165 100001187 100001188 100001338 100001323 100001327 100001329 100001341 100001342 100001531 100001511 100001521 100001523 100001534 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc
dc
dc 22 100000007 100000016 100000019 100000096 100000076 100000052 100000059 100000071 100000084 100000085 100000099 100000100 100000423 100000152 100000128 100000108 100000112 100000119 100000141 100000142 100000161 100000162 100000411 100000195 100000170 100000178 100000189 100000207 100000208 100000398 100000381 100000387 100000389 100000401 100000402 100000414 100000415 100000426 100000427 100001584 100000736 100000473 100000452 100000434 100000438 100000444 100000463 100000464 100000481 100000482 100000724 100000529 100000509 100000492 100000494 100000501 100000519 100000520 100000537 100000538 100000710 100000692 100000566 100000575 100000584 100000683 100000667 100000672 100000674 100000686 100000687 100000700 100000701 100000713 100000714 100000727 100000728 100000740 100000741 100001570 100000792 100000767 100000777 100000782 100000801 100000802 100000902 100000836 100000811 100000821 100000826 100000845 100000846 100000880 100000886 100000893 100000905 100000906 100001557 100000936 100000913 100000921 100000931 100000950 100000951 100001142 100001000 100000978 100000961 100000963 100000970 100000990 100000991 100001009 100001010 100001129 100001111 100001116 100001121 100001132 100001133 100001145 100001146 100001544 100001171 100001152 100001158 100001165 100001187 100001188 100001338 100001321 100001255 100001235 100001242 100001247 100001264 100001265 100001308 100001294 100001273 100001279 100001283 100001299 100001300 100001315 100001316 100001328 100001329 100001341 100001342 100001531 100001509 100001495 100001477 100001458 100001440 100001448 100001450 100001467 100001468 100001484 100001485 100001503 100001504 100001522 100001523 100001534 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc
dc
dc 26 100000092 100000098 100000100 100000423 100000407 100000413 100000415 100000426 100000427 100001584 100000736 100000719 100000726 100000728 100000740 100000741 100001570 100001553 100001559 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc
dc
dc 30 100000093 100000098 100000100 100000423 100000408 100000413 100000415 100000426 100000427 100001584 100000736 100000720 100000726 100000728 100000740 100000741 100001570 100001554 100001559 100001561 100001573 100001574 100001587 100001588 100001856 0
dc 31 100000094 100000098 100000100 100000423 100000409 100000413 100000415 100000426 100000427 100001584 100000736 100000721 100000726 100000728 100000740 100000741 100001570 100001555 100001559 100001561 100001573 100001574 100001587 100001588 100001856 0
dc 32 100000095 100000098 100000100 100000423 100000410 100000413 100000415 100000426 100000427 100001584 100000736 100000722 100000726 100000728 100000740 100000741 100001570 100001556 100001559 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc
dc
dc 36 100001579 100000733 100000723 100000533 100000513 100000518 100000520 100000537 100000538 100000710 100000548 100000558 100000561 100000697 100000682 100000594 100000605 100000607 100000670 100000618 100000627 100000630 100000652 100000658 100000662 100000673 100000674 100000686 100000687 100000700 100000701 100000713 100000714 100000727 100000728 100000740 100000741 100001570 100000796 100000771 100000779 100000782 100000801 100000802 100000902 100000877 100000890 100000893 100000905 100000906 100001557 100001540 100001178 100001154 100001162 100001165 100001187 100001188 100001338 100001217 100001195 100001202 100001205 100001226 100001227 100001325 100001259 100001238 100001243 100001247 100001264 100001265 100001308 100001313 100001316 100001328 100001329 100001341 100001342 100001531 100001360 100001366 100001372 100001519 100001377 100001382 100001387 100001500 100001481 100001462 100001444 100001429 100001410 100001417 100001418 100001432 100001433 100001449 100001450 100001467 100001468 100001484 100001485 100001503 100001504 100001522 100001523 100001534 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc 37 100001579 100001586 100001588 100001856 0
dc 38 100001579 100000733 100000738 100000741 100001570 100000901 100000877 100000882 100000893 100000905 100000906 100001557 100001540 100001546 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc 40 100001580 100001586 100001588 100001856 0
dc 41 100001580 100000734 100000738 100000741 100001570 100000901 100000878 100000882 100000893 100000905 100000906 100001557 100001541 100001546 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc 43 100001581 100001586 100001588 100001856 0
dc 44 100001582 100001586 100001588 100001856 0
dc 45 100001581 100000735 100000738 100000741 100001570 100000901 100000879 100000882 100000893 100000905 100000906 100001557 100001542 100001546 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc 47 100001583 100001566 100001572 100001574 100001587 100001588 100001856 0
dc 48 100000420 100000425 100000427 100001584 100001566 100000898 100000904 100000906 100001557 100001543 100001528 100001533 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc
dc 50 100001583 100001567 100001572 100001574 100001587 100001588 100001856 0
dc 51 100000421 100000425 100000427 100001584 100001567 100000899 100000904 100000906 100001557 100001543 100001529 100001533 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc 52 100000421 100000157 100000133 100000139 100000142 100000161 100000162 100000411 100000204 100000175 100000188 100000189 100000207 100000208 100000398 100000220 100000232 100000233 100000385 100000266 100000270 100000273 100000371 100000355 100000360 100000363 100000374 100000375 100000388 100000389 100000401 100000402 100000414 100000415 100000426 100000427 100001584 100001567 100000899 100000841 100000816 100000823 100000826 100000845 100000846 100000880 100000891 100000893 100000905 100000906 100001557 100000946 100000918 100000930 100000931 100000950 100000951 100001142 100001006 100000984 100000988 100000991 100001009 100001010 100001129 100001046 100001021 100001032 100001033 100001049 100001050 100001114 100001118 100001121 100001132 100001133 100001145 100001146 100001544 100001529 100001363 100001371 100001372 100001519 100001498 100001481 100001463 100001445 100001426 100001408 100001417 100001418 100001432 100001433 100001449 100001450 100001467 100001468 100001484 100001485 100001503 100001504 100001522 100001523 100001534 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
dc 53 100001583 100001568 100001572 100001574 100001587 100001588 100001856 0
dc 54 100001583 100001569 100001572 100001574 100001587 100001588 100001856 0
dc 55 100000422 100000425 100000427 100001584 100001568 100000900 100000904 100000906 100001557 100001543 100001530 100001533 100001535 100001547 100001548 100001560 100001561 100001573 100001574 100001587 100001588 100001856 0
